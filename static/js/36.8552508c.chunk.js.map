{"version":3,"sources":["views/dashboard/workshop/orders/OrdersList.js","icons/ArrowRight.js","icons/Search.js","icons/Plus.js","components/dashboard/workshop/orders/OrdersListTable.js"],"names":["tabs","label","value","OrdersList","mounted","useMounted","settings","useSettings","useState","currentTab","setCurrentTab","customers","setCustomers","inactivos","setInactivos","user","useAuth","navigate","useNavigate","useEffect","firebase","firestore","collection","doc","id","get","then","snap","data","rank","orderBy","snapshot","forEach","push","console","log","gtm","event","getCustomers","useCallback","a","err","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","separator","fontSize","mt","component","RouterLink","to","m","startIcon","mb","indicatorColor","onChange","scrollButtons","textColor","map","tab","active","ArrowRight","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Search","Plus","sortOptions","descendingComparator","b","applySort","sort","split","comparator","order","getComparator","stabilizedThis","el","index","newOrder","OrdersListTable","props","other","selectedCustomers","setSelectedCustomers","page","setPage","limit","setLimit","query","setQuery","setSort","hasAcceptedMarketing","isProspect","isReturning","filters","filteredCustomers","filter","customer","matches","containsQuery","property","toLowerCase","includes","Object","keys","key","applyFilters","paginatedCustomers","slice","applyPagination","enableBulkActions","length","selectedSomeCustomers","selectedAllCustomers","alignItems","display","flexWrap","p","width","fullWidth","InputProps","startAdornment","position","target","placeholder","name","select","SelectProps","native","option","px","zIndex","checked","indeterminate","ml","minWidth","align","isCustomerSelected","hover","selected","src","logo","height","getInitials","model_name","brand_name","tag","client_name","employee","Date","date","lastActivity","seconds","toLocaleString","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions"],"mappings":"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","file":"static/js/36.8552508c.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Tab, Tabs, Typography } from '@material-ui/core';\n// import { customerApi } from '../../__fakeApi__/customerApi';\nimport OrdersListTable from '../../../../components/dashboard/workshop/orders/OrdersListTable';\nimport useMounted from '../../../../hooks/useMounted';\nimport ChevronRightIcon from '../../../../icons/ChevronRight';\n// import DownloadIcon from '../../../icons/Download';\nimport PlusIcon from '../../../../icons/Plus';\n// import UploadIcon from '../../../icons/Upload';\nimport useSettings from '../../../../hooks/useSettings';\nimport gtm from '../../../../lib/gtm';\nimport firebase from '../../../../lib/firebase';\nimport useAuth from '../../../../hooks/useAuth';\n\nconst tabs = [\n  {\n    label: 'Activos',\n    value: 'activos'\n  },\n  {\n    label: 'Inactivos',\n    value: 'inactivos'\n  }\n];\n\nconst OrdersList = () => {\n  const mounted = useMounted();\n  const { settings } = useSettings();\n  const [currentTab, setCurrentTab] = useState('activos');\n  const [customers, setCustomers] = useState([]);\n  const [inactivos, setInactivos] = useState([]);\n  const { user } = useAuth();\n  const navigate = useNavigate();\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const getActives = () => {\n    firebase\n      .firestore()\n      .collection('/workshop_orders/active/orders')\n      .orderBy('date', 'desc')\n      .get()\n      .then((snapshot) => {\n        const data = [];\n        snapshot.forEach((doc) => {\n          /* eslint-disable object-shorthand */\n          data.push({ ...doc.data(), id: doc.id });\n        });\n        console.log(data);\n        setCustomers(data);\n      });\n  };\n\n  const getInactives = () => {\n    firebase\n      .firestore()\n      .collection('/workshop_orders/inactive/orders')\n      .orderBy('date', 'desc')\n      .get()\n      .then((snapshot) => {\n        const data = [];\n        snapshot.forEach((doc) => {\n          /* eslint-disable object-shorthand */\n          data.push({ ...doc.data(), id: doc.id });\n        });\n        console.log(data);\n        setInactivos(data);\n      });\n  };\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection('staff')\n      .doc(user.id)\n      .get()\n      .then((snap) => {\n        if (snap.data().rank.id === 'dealership_agent') {\n          navigate('/dashboard');\n        }\n      });\n    getActives();\n    getInactives();\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getCustomers = useCallback(async () => {\n    try {\n      // const data = await customerApi.getCustomers();\n\n      // if (mounted.current) {\n      //   setCustomers(data);\n      // }\n      setCustomers([]);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getCustomers();\n  }, [getCustomers]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Ordenes | Mac Admin</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Lista de Ordenes\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Ordenes\n                </Typography>\n              </Breadcrumbs>\n              {/* <Box\n                sx={{\n                  mb: -1,\n                  mx: -1,\n                  mt: 1\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  startIcon={<UploadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                >\n                  Import\n                </Button>\n                <Button\n                  color=\"primary\"\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                >\n                  Export\n                </Button>\n              </Box> */}\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  startIcon={<PlusIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  component={RouterLink}\n                  variant=\"contained\"\n                  to=\"/dashboard/taller/ordenes/crear\"\n                >\n                  Agregar Orden\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <Box sx={{ mb: 3 }}>\n              <Tabs\n                indicatorColor=\"primary\"\n                onChange={handleTabsChange}\n                scrollButtons=\"auto\"\n                textColor=\"primary\"\n                value={currentTab}\n                variant=\"scrollable\"\n              >\n                {tabs.map((tab) => (\n                  <Tab\n                    key={tab.value}\n                    label={tab.label}\n                    value={tab.value}\n                  />\n                ))}\n              </Tabs>\n            </Box>\n            {currentTab === 'activos' && (\n              <OrdersListTable\n                active=\"0\"\n                customers={customers}\n              />\n            )}\n            {currentTab === 'inactivos' && (\n              <OrdersListTable\n                active=\"1\"\n                customers={inactivos}\n              />\n            )}\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\n/* eslint-disable eol-last */\nexport default OrdersList;","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Search = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search'\n);\n\nexport default Search;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n\nexport default Plus;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// import numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  // Divider,\n  IconButton,\n  InputAdornment,\n  Link,\n  // Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  // Tabs,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../../icons/ArrowRight';\n// import PencilAltIcon from '../../../../icons/PencilAlt';\nimport SearchIcon from '../../../../icons/Search';\nimport getInitials from '../../../../utils/getInitials';\nimport Scrollbar from '../../../Scrollbar';\n\n// const tabs = [\n//   {\n//     label: 'All',\n//     value: 'all'\n//   },\n//   {\n//     label: 'Accepts Marketing',\n//     value: 'hasAcceptedMarketing'\n//   },\n//   {\n//     label: 'Prospect',\n//     value: 'isProspect'\n//   },\n//   {\n//     label: 'Returning',\n//     value: 'isReturning'\n//   }\n// ];\n\nconst sortOptions = [\n  {\n    label: 'Más recientes',\n    value: 'updatedAt|desc'\n  },\n  {\n    label: 'Menos recientes',\n    value: 'updatedAt|asc'\n  },\n  {\n    label: 'Total',\n    value: 'orders|desc'\n  },\n  {\n    label: 'Total',\n    value: 'orders|asc'\n  }\n];\n\nconst applyFilters = (customers, query, filters) => customers\n  .filter((customer) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['brand', 'client_name', 'model', 'tag', 'employee'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && customer[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n\nconst applyPagination = (customers, page, limit) => customers\n  .slice(page * limit, page * limit + limit);\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => (order === 'desc'\n  ? (a, b) => descendingComparator(a, b, orderBy)\n  : (a, b) => -descendingComparator(a, b, orderBy));\n\nconst applySort = (customers, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst OrdersListTable = (props) => {\n  const { active, customers, ...other } = props;\n  // const [currentTab, setCurrentTab] = useState('all');\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  // const handleTabsChange = (event, value) => {\n  //   const updatedFilters = {\n  //     ...filters,\n  //     hasAcceptedMarketing: null,\n  //     isProspect: null,\n  //     isReturning: null\n  //   };\n\n  //   if (value !== 'all') {\n  //     updatedFilters[value] = true;\n  //   }\n\n  //   setFilters(updatedFilters);\n  //   setSelectedCustomers([]);\n  //   setCurrentTab(value);\n  // };\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllCustomers = (event) => {\n    setSelectedCustomers(event.target.checked\n      ? customers.map((customer) => customer.id)\n      : []);\n  };\n\n  // const handleSelectOneCustomer = (event, customerId) => {\n  //   if (!selectedCustomers.includes(customerId)) {\n  //     setSelectedCustomers((prevSelected) => [...prevSelected, customerId]);\n  //   } else {\n  //     setSelectedCustomers((prevSelected) => prevSelected.filter((id) => id !== customerId));\n  //   }\n  // };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const filteredCustomers = applyFilters(customers, query, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  const enableBulkActions = selectedCustomers.length > 0;\n  const selectedSomeCustomers = selectedCustomers.length > 0\n    && selectedCustomers.length < customers.length;\n  const selectedAllCustomers = selectedCustomers.length === customers.length;\n\n  return (\n    <Card {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Buscar...\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            width: 240\n          }}\n        >\n          <TextField\n            label=\"Ordenar Por\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              position: 'absolute',\n              px: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllCustomers}\n              color=\"primary\"\n              indeterminate={selectedSomeCustomers}\n              onChange={handleSelectAllCustomers}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {/* <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllCustomers}\n                    color=\"primary\"\n                    indeterminate={selectedSomeCustomers}\n                    onChange={handleSelectAllCustomers}\n                  />\n                </TableCell> */}\n                <TableCell>\n                  Modelo\n                </TableCell>\n                <TableCell>\n                  Placa\n                </TableCell>\n                <TableCell>\n                  Dueño\n                </TableCell>\n                <TableCell>\n                  Empleado\n                </TableCell>\n                <TableCell>\n                  Última Actividad\n                </TableCell>\n                <TableCell align=\"right\">\n                  Acciones\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => {\n                const isCustomerSelected = selectedCustomers.includes(customer.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={customer.id}\n                    selected={isCustomerSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isCustomerSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneCustomer(event, customer.id)}\n                        value={isCustomerSelected}\n                      />\n                    </TableCell> */}\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Avatar\n                          src={customer.logo}\n                          sx={{\n                            height: 42,\n                            width: 42\n                          }}\n                        >\n                          {getInitials(customer.model_name)}\n                        </Avatar>\n                        <Box sx={{ ml: 1 }}>\n                          <Link\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to={`/dashboard/taller/ordenes/detalles/${customer.id}`}\n                            variant=\"subtitle2\"\n                          >\n                            {customer.model_name}\n                          </Link>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"body2\"\n                          >\n                            {customer.brand_name}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.tag}`}\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.client_name}`}\n                    </TableCell>\n                    <TableCell>\n                      {customer.employee}\n                    </TableCell>\n                    <TableCell>\n                      {new Date(customer.date.lastActivity.seconds * 1000).toLocaleString()}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {/* <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/customers/1/edit\"\n                      >\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton> */}\n                      {active === '0' && (\n                        <IconButton\n                          component={RouterLink}\n                          to={`/dashboard/taller/ordenes/detalles/${customer.id}`}\n                        >\n                          <ArrowRightIcon fontSize=\"small\" />\n                        </IconButton>\n                      )}\n                      {active === '1' && (\n                        <IconButton\n                          component={RouterLink}\n                          to={`/dashboard/taller/ordenes/inactivas/detalles/${customer.id}`}\n                        >\n                          <ArrowRightIcon fontSize=\"small\" />\n                        </IconButton>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredCustomers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nOrdersListTable.propTypes = {\n  active: PropTypes.bool.isRequired,\n  customers: PropTypes.array.isRequired\n};\n\nexport default OrdersListTable;\n"],"sourceRoot":""}