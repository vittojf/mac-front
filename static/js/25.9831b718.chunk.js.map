{"version":3,"sources":["views/dashboard/workshop/vehicles/VehicleWorkshopCreate.js","icons/ArrowRight.js","icons/Search.js","components/Label.js","icons/Download.js","icons/DotsHorizontal.js","icons/DocumentText.js","icons/Duplicate.js","components/MoreMenu.js","icons/Archive.js","icons/ArrowLeft.js","components/dashboard/workshop/vehicles/VehiclesListTable.js","components/dashboard/workshop/vehicles/VehicleCreateForm.js","components/dashboard/workshop/vehicles/CustomerContactDetails.js","components/dashboard/workshop/vehicles/CustomerInvoices.js","components/dashboard/workshop/vehicles/CustomerLogs.js","icons/Save.js","components/dashboard/workshop/vehicles/CustomerEmailsSummary.js"],"names":["VehicleWorkshopCreate","settings","useSettings","user","useAuth","navigate","useNavigate","useEffect","gtm","push","event","firebase","firestore","collection","doc","id","get","then","snap","data","rank","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","separator","fontSize","mt","component","RouterLink","to","m","startIcon","ArrowRight","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Search","LabelRoot","experimentalStyled","theme","styleProps","palette","main","contrastText","alignItems","borderRadius","shape","cursor","display","flexGrow","flexShrink","fontFamily","typography","pxToRem","fontWeight","fontWeightMedium","letterSpacing","minWidth","paddingBottom","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","Label","props","children","other","Download","DotsHorizontal","DocumentText","Duplicate","MoreMenu","anchorRef","useRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","current","anchorOrigin","horizontal","vertical","onClose","open","PaperProps","width","transformOrigin","primary","memo","Archive","ArrowLeft","sortOptions","label","value","descendingComparator","a","b","orderBy","applySort","customers","sort","split","comparator","order","getComparator","stabilizedThis","map","el","index","newOrder","VehiclesListTable","selectedCustomers","setSelectedCustomers","page","setPage","limit","setLimit","query","setQuery","setSort","hasAcceptedMarketing","isProspect","isReturning","filters","filteredCustomers","filter","customer","matches","containsQuery","forEach","property","toLowerCase","includes","Object","keys","key","applyFilters","paginatedCustomers","slice","applyPagination","enableBulkActions","length","selectedSomeCustomers","selectedAllCustomers","Card","Box","flexWrap","p","TextField","fullWidth","InputProps","startAdornment","InputAdornment","position","onChange","target","placeholder","name","select","SelectProps","native","option","px","zIndex","Checkbox","checked","indeterminate","Button","ml","Scrollbar","Table","TableHead","TableRow","TableCell","align","TableBody","isCustomerSelected","hover","selected","Avatar","src","logo","height","getInitials","model_name","Link","Typography","brand_name","tag","client_name","IconButton","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","VehicleCreateForm","brandsOptions","setBrandsOptions","modelsOptions","setModelsOptions","clientsOptions","setClientsOptions","colors","setColors","isSubmit","setIsSubmit","arrayModel","vehicles_count","snapshot","modelBrand","document","idBrand","nameBrand","element","localeCompare","catch","err","console","log","text","initialValues","brand","model","client_id","validationSchema","Yup","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","brandName","modelName","date","registered","lastActivity","owner","FieldValue","serverTimestamp","toString","idDoc","add","u","vh","vehicles","update","toast","success","error","submit","message","errors","handleBlur","handleChange","handleSubmit","setFieldValue","touched","Grid","lg","md","xs","CardContent","Boolean","helperText","models","type","onBlur","Autocomplete","getOptionLabel","isOptionEqualToValue","e","options","renderInput","params","FormHelperText","disabled","CustomerContactDetails","email","CardHeader","Divider","CustomerInvoices","identification","rating","orders","statusOptions","action","invoice","employee","status","Date","seconds","toLocaleString","Save","CustomerEmailsSummary","idVehicle","idClient","vehiclesClient","vehiclesOwner","client","setClient","changeClient","clientName","find","cli","oldClient","newClient","vehicle","runTransaction","transaction","sDoc","newVeh","remVeh","veh"],"mappings":"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","file":"static/js/25.9831b718.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Typography } from '@material-ui/core';\nimport { VehicleCreateForm } from '../../../../components/dashboard/workshop/vehicles';\nimport useSettings from '../../../../hooks/useSettings';\nimport ArrowLeftIcon from '../../../../icons/ArrowLeft';\nimport ChevronRightIcon from '../../../../icons/ChevronRight';\nimport gtm from '../../../../lib/gtm';\nimport firebase from '../../../../lib/firebase';\nimport useAuth from '../../../../hooks/useAuth';\n\nconst VehicleWorkshopCreate = () => {\n  const { settings } = useSettings();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n    firebase\n      .firestore()\n      .collection('staff')\n      .doc(user.id)\n      .get()\n      .then((snap) => {\n        if (snap.data().rank.id === 'dealership_agent') {\n          navigate('/dashboard');\n        }\n      });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Crear Vehículos | Mac Admin</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Agregar Vehículo\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard/taller/vehiculos\"\n                  variant=\"subtitle2\"\n                >\n                  Listado de Vehículos\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Agregar Vehículos\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  startIcon={<ArrowLeftIcon fontSize=\"small\" />}\n                  sx={{ mt: 1 }}\n                  to=\"/dashboard/taller/vehiculos\"\n                  variant=\"outlined\"\n                >\n                  Cancelar\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <VehicleCreateForm />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default VehicleWorkshopCreate;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Search = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search'\n);\n\nexport default Search;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DocumentText = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'DocumentText'\n);\n\nexport default DocumentText;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n\nexport default Duplicate;\n","import { useRef, useState, memo } from 'react';\nimport { ListItemIcon, ListItemText, Tooltip, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport ArchiveIcon from '../icons/Archive';\nimport DocumentTextIcon from '../icons/DocumentText';\nimport DotsHorizontalIcon from '../icons/DotsHorizontal';\nimport DownloadIcon from '../icons/Download';\nimport DuplicateIcon from '../icons/Duplicate';\n\nconst MoreMenu = (props) => {\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={anchorRef}\n          {...props}\n        >\n          <DotsHorizontalIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{\n          sx: {\n            maxWidth: '100%',\n            width: 256\n          }\n        }}\n        transformOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <DownloadIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DocumentTextIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DuplicateIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(MoreMenu);\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Archive = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Archive'\n);\n\nexport default Archive;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowLeft = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowLeft'\n);\n\nexport default ArrowLeft;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// import numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  // Divider,\n  IconButton,\n  InputAdornment,\n  Link,\n  // Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  // Tabs,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../../icons/ArrowRight';\n// import PencilAltIcon from '../../../../icons/PencilAlt';\nimport SearchIcon from '../../../../icons/Search';\nimport getInitials from '../../../../utils/getInitials';\nimport Scrollbar from '../../../Scrollbar';\n\n// const tabs = [\n//   {\n//     label: 'All',\n//     value: 'all'\n//   },\n//   {\n//     label: 'Accepts Marketing',\n//     value: 'hasAcceptedMarketing'\n//   },\n//   {\n//     label: 'Prospect',\n//     value: 'isProspect'\n//   },\n//   {\n//     label: 'Returning',\n//     value: 'isReturning'\n//   }\n// ];\n\nconst sortOptions = [\n  {\n    label: 'Más recientes',\n    value: 'updatedAt|desc'\n  },\n  {\n    label: 'Menos recientes',\n    value: 'updatedAt|asc'\n  },\n  {\n    label: 'Total',\n    value: 'orders|desc'\n  },\n  {\n    label: 'Total',\n    value: 'orders|asc'\n  }\n];\n\nconst applyFilters = (customers, query, filters) => customers\n  .filter((customer) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['brand_name', 'client_name', 'model_name', 'tag'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && customer[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n\nconst applyPagination = (customers, page, limit) => customers\n  .slice(page * limit, page * limit + limit);\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => (order === 'desc'\n  ? (a, b) => descendingComparator(a, b, orderBy)\n  : (a, b) => -descendingComparator(a, b, orderBy));\n\nconst applySort = (customers, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst VehiclesListTable = (props) => {\n  const { customers, ...other } = props;\n  // const [currentTab, setCurrentTab] = useState('all');\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  // const handleTabsChange = (event, value) => {\n  //   const updatedFilters = {\n  //     ...filters,\n  //     hasAcceptedMarketing: null,\n  //     isProspect: null,\n  //     isReturning: null\n  //   };\n\n  //   if (value !== 'all') {\n  //     updatedFilters[value] = true;\n  //   }\n\n  //   setFilters(updatedFilters);\n  //   setSelectedCustomers([]);\n  //   setCurrentTab(value);\n  // };\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllCustomers = (event) => {\n    setSelectedCustomers(event.target.checked\n      ? customers.map((customer) => customer.id)\n      : []);\n  };\n\n  // const handleSelectOneCustomer = (event, customerId) => {\n  //   if (!selectedCustomers.includes(customerId)) {\n  //     setSelectedCustomers((prevSelected) => [...prevSelected, customerId]);\n  //   } else {\n  //     setSelectedCustomers((prevSelected) => prevSelected.filter((id) => id !== customerId));\n  //   }\n  // };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const filteredCustomers = applyFilters(customers, query, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  const enableBulkActions = selectedCustomers.length > 0;\n  const selectedSomeCustomers = selectedCustomers.length > 0\n    && selectedCustomers.length < customers.length;\n  const selectedAllCustomers = selectedCustomers.length === customers.length;\n\n  return (\n    <Card {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Buscar...\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            width: 240\n          }}\n        >\n          <TextField\n            label=\"Ordenar Por\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              position: 'absolute',\n              px: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllCustomers}\n              color=\"primary\"\n              indeterminate={selectedSomeCustomers}\n              onChange={handleSelectAllCustomers}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {/* <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllCustomers}\n                    color=\"primary\"\n                    indeterminate={selectedSomeCustomers}\n                    onChange={handleSelectAllCustomers}\n                  />\n                </TableCell> */}\n                <TableCell>\n                  Modelo\n                </TableCell>\n                <TableCell>\n                  Placa\n                </TableCell>\n                <TableCell>\n                  Dueño\n                </TableCell>\n                <TableCell>\n                  Color\n                </TableCell>\n                <TableCell align=\"right\">\n                  Acciones\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => {\n                const isCustomerSelected = selectedCustomers.includes(customer.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={customer.id}\n                    selected={isCustomerSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isCustomerSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneCustomer(event, customer.id)}\n                        value={isCustomerSelected}\n                      />\n                    </TableCell> */}\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Avatar\n                          src={customer.logo}\n                          sx={{\n                            height: 42,\n                            width: 42\n                          }}\n                        >\n                          {getInitials(customer.model_name)}\n                        </Avatar>\n                        <Box sx={{ ml: 1 }}>\n                          <Link\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to={`/dashboard/taller/vehiculos/detalles/${customer.id}`}\n                            variant=\"subtitle2\"\n                          >\n                            {customer.model_name}\n                          </Link>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"body2\"\n                          >\n                            {customer.brand_name}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.tag}`}\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.client_name}`}\n                    </TableCell>\n                    <TableCell>\n                      {customer.color}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {/* <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/customers/1/edit\"\n                      >\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton> */}\n                      <IconButton\n                        component={RouterLink}\n                        to={`/dashboard/taller/vehiculos/detalles/${customer.id}`}\n                      >\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredCustomers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nVehiclesListTable.propTypes = {\n  customers: PropTypes.array.isRequired\n};\n\nexport default VehiclesListTable;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  // CardHeader,\n  // Checkbox,\n  // FormControlLabel,\n  FormHelperText,\n  Grid,\n  TextField,\n  // Typography\n} from '@material-ui/core';\n// import FileDropzone from '../../../FileDropzone';\n// import QuillEditor from '../../QuillEditor';\n/* eslint-disable import/no-duplicates */\nimport firebase from '../../../../lib/firebase';\n// import { functions } from '../../../../lib/firebase';\n\nconst VehicleCreateForm = (props) => {\n  const navigate = useNavigate();\n  const [brandsOptions, setBrandsOptions] = useState([]);\n  const [modelsOptions, setModelsOptions] = useState([]);\n  const [clientsOptions, setClientsOptions] = useState([{ value: '', name: '' }]);\n  const [colors, setColors] = useState([]);\n  const [isSubmit, setIsSubmit] = useState(false);\n  const empty = '';\n\n  const sorted = (array) => array.sort((a, b) => a.value.localeCompare(b.value));\n\n  const getColor = () => {\n    firebase\n      .firestore()\n      .collection('data')\n      .doc('color')\n      .get()\n      .then((snapshot) => {\n        const info = { id: '', value: '' };\n        const data = [];\n        data.push(info);\n        snapshot.data().data.forEach((element) => {\n          data.push(element);\n        });\n        setColors(sorted(data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getClients = () => {\n    firebase\n      .firestore()\n      .collection('workshop_clients')\n      .get()\n      .then((snapshot) => {\n        const data = [];\n        snapshot.forEach((element) => {\n          data.push({ value: element.id, text: element.data().name });\n        });\n        setClientsOptions(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    const arrayModel = [{ id: '', name: '', vehicles_count: 0 }];\n    firebase\n      .firestore()\n      .collection('dealership_brands')\n      .get()\n      .then((snapshot) => {\n        const data = [{ id: '', name: '', vehicles_count: 0 }];\n        snapshot.forEach((doc) => {\n          /* eslint-disable object-shorthand */\n          data.push({ ...doc.data(), id: doc.id });\n          firebase\n            .firestore()\n            .collection('dealership_brands')\n            .doc(doc.id)\n            .collection('models')\n            .get()\n            .then((modelBrand) => {\n              modelBrand.forEach((document) => {\n                /* eslint-disable object-shorthand */\n                arrayModel.push({ ...document.data(), id: document.id, idBrand: doc.id, nameBrand: doc.data().name });\n              });\n              setModelsOptions(arrayModel);\n            });\n        });\n        setBrandsOptions(data);\n      });\n    getColor();\n    getClients();\n  }, []);\n\n  return (\n    <Formik\n      initialValues={{\n        brand: '',\n        model: '',\n        tag: '',\n        color: '',\n        client_id: '',\n        client_name: '',\n        // submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          brand: Yup.string().max(255).required('La marca es obligatoria'),\n          model: Yup.string().max(255).required('El modelo es obligatorio'),\n          tag: Yup.string().max(255).required('La placa es obligatoria'),\n          color: Yup.string().max(255).required('El color es obligatorio'),\n          // client_id: Yup.string().max(255).required(),\n          client_id: Yup.string().max(255).required('El cliente es obligatorio'),\n          client_name: Yup.string().max(255).required('El cliente es obligatorio'),\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          setSubmitting(true);\n          setIsSubmit(true);\n          const brandName = brandsOptions.filter((brand) => brand.id === values.brand);\n          values.brand_name = brandName[0].name;\n          values.logo = brandName[0].logo;\n          const modelName = modelsOptions.filter((model) => model.id === values.model);\n          values.model_name = modelName[0].name;\n          values.date = {\n            registered: '',\n            lastActivity: ''\n          };\n          values.owner = [];\n          values.date.registered = firebase.firestore.FieldValue.serverTimestamp();\n          values.date.lastActivity = firebase.firestore.FieldValue.serverTimestamp();\n          values.owner.push(values.client_id);\n          values.tag = values.tag.toString();\n          let idDoc = '';\n\n          firebase.firestore().collection('workshop_vehicles').add(values)\n            .then((u) => {\n              idDoc = u.id;\n              return firebase.firestore().collection('workshop_clients').doc(values.client_id);\n            })\n            .then((query) => {\n              console.log('');\n              return query.get();\n            })\n            .then((doc) => {\n              const vh = doc.data().vehicles;\n              vh.push(idDoc);\n              return vh;\n            })\n            .then((vehicles) => {\n              console.log('');\n              // return doc.data().vehicles\n              return firebase.firestore().collection('workshop_clients').doc(values.client_id).update({\n                vehicles: vehicles\n              });\n            })\n            .then(() => {\n              // success('Vehiculo Agregado', 'Se agrego correctamente el vehículo a ' + client.name);\n              toast.success('Vehiculo Registrado', `Se agrego correctamente el vehículo a ${values.client_name} exitosamente!`);\n              navigate('/dashboard/taller/vehiculos');\n              setIsSubmit(false);\n              return true;\n            });\n          return true;\n        } catch (err) {\n          console.error(err);\n          toast.error('Something went wrong!');\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n          setIsSubmit(false);\n          return true;\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        // isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          {...props}\n        >\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xs={12}\n            >\n              <Card>\n                <CardContent>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        fullWidth\n                        error={Boolean(touched.brand && errors.brand)}\n                        label=\"Marca\"\n                        helperText={touched.brand && errors.brand}\n                        name=\"brand\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.brand}\n                        variant=\"outlined\"\n                      >\n                        {brandsOptions.map((brand) => (\n                          <option\n                            key={brand.id}\n                            value={brand.id}\n                          >\n                            {brand.name}\n                          </option>\n                        ))}\n                      </TextField>\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        fullWidth\n                        error={Boolean(touched.model && errors.model)}\n                        label=\"Modelo\"\n                        helperText={touched.model && errors.model}\n                        name=\"model\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.model}\n                        variant=\"outlined\"\n                      >\n                        <option\n                          value={null}\n                        >\n                          {empty}\n                        </option>\n                        {modelsOptions.filter((models) => models.idBrand === values.brand).map((model) => (\n                          <option\n                            key={model.id}\n                            value={model.id}\n                          >\n                            {model.name}\n                          </option>\n                        ))}\n                      </TextField>\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.tag && errors.tag)}\n                        fullWidth\n                        helperText={touched.tag && errors.tag}\n                        label=\"Placa\"\n                        name=\"tag\"\n                        type=\"text\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.tag}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        fullWidth\n                        error={Boolean(touched.color && errors.color)}\n                        label=\"Color\"\n                        helperText={touched.color && errors.color}\n                        name=\"color\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.color}\n                        variant=\"outlined\"\n                      >\n                        {colors.map((color) => (\n                          <option\n                            key={color.id}\n                            value={color.value}\n                          >\n                            {color.value}\n                          </option>\n                        ))}\n                      </TextField>\n                    </Grid>\n                    <Grid\n                      item\n                      md={12}\n                      xs={12}\n                    >\n                      <Autocomplete\n                        getOptionLabel={(option) => option.text}\n                        isOptionEqualToValue={(option, value) => option.value === value.value}\n                        // getOptionLabel={(option) => option.name}\n                        onChange={(e, value) => {\n                          setFieldValue('client_id', value.value);\n                          setFieldValue('client_name', value.text);\n                        }}\n                        options={clientsOptions}\n                        renderInput={(params) => (\n                          <TextField\n                            error={Boolean(touched.client_id && errors.client_id)}\n                            fullWidth\n                            label=\"Cliente\"\n                            helperText={touched.client_id && errors.client_id}\n                            name=\"client_id\"\n                            variant=\"outlined\"\n                            // value={values.client_name}\n                            {...params}\n                          />\n                        )}\n                      />\n                      {/* <TextField\n                        fullWidth\n                        label=\"Cliente\"\n                        name=\"client_id\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.client_id}\n                        variant=\"outlined\"\n                      >\n                        {clientsOptions.map((client) => (\n                          <option\n                            key={client.id}\n                            value={client.id}\n                          >\n                            {client.name}\n                          </option>\n                        ))}\n                      </TextField> */}\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid\n              item\n              lg={2}\n              md={2}\n              xs={12}\n            >\n              {errors.submit && (\n                <Box sx={{ mt: 3 }}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  mt: 3\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmit}\n                  type=\"submit\"\n                  variant=\"contained\"\n                  // onClick={() => save(values)}\n                >\n                  Registrar Vehículo\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default VehicleCreateForm;\n","import PropTypes from 'prop-types';\nimport {\n  // Box,\n  // Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n// import LockIcon from '../../../../icons/Lock';\n// import UserIcon from '../../../../icons/User';\n// import Label from '../../../Label';\n\nconst CustomerContactDetails = (props) => {\n  const { model, brand, tag, email, color, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Vehículo\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Modelo\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {model}\n              </Typography>\n              {/* <Label color={isVerified ? 'success' : 'error'}>\n                {isVerified ? 'Email verified' : 'Email not verified'}\n              </Label> */}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Marca\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {brand}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Placa\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {tag}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Color\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {color}\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Card>\n  );\n};\n\nCustomerContactDetails.propTypes = {\n  model: PropTypes.string,\n  brand: PropTypes.string,\n  tag: PropTypes.string,\n  email: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default CustomerContactDetails;\n","import PropTypes from 'prop-types';\nimport {\n  // Box,\n  // Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n// import LockIcon from '../../../../icons/Lock';\n// import UserIcon from '../../../../icons/User';\n// import Label from '../../../Label';\n\nconst CustomerInvoices = (props) => {\n  const { name, email, identification, rating, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Clientes\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Nombre\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {name}\n              </Typography>\n              {/* <Label color={isVerified ? 'success' : 'error'}>\n                {isVerified ? 'Email verified' : 'Email not verified'}\n              </Label> */}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Email\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {email}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                ID\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {identification}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Rating\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {rating}\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Card>\n  );\n};\n\nCustomerInvoices.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  identification: PropTypes.string,\n  rating: PropTypes.string,\n};\n\nexport default CustomerInvoices;\n","// import { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// import { format } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow\n} from '@material-ui/core';\n// import { customerApi } from '../../../../__fakeApi__/customerApi';\n// import useMounted from '../../../../hooks/useMounted';\nimport ArrowRightIcon from '../../../../icons/ArrowRight';\nimport Label from '../../../Label';\nimport MoreMenu from '../../../MoreMenu';\nimport Scrollbar from '../../../Scrollbar';\n\nconst CustomerInvoices = (props) => {\n  const { orders, statusOptions } = props;\n  // const mounted = useMounted();\n  // const [invoices, setInvoices] = useState([]);\n\n  // const getInvoices = useCallback(async () => {\n  //   try {\n  //     const data = await customerApi.getCustomerInvoices();\n\n  //     if (mounted.current) {\n  //       setInvoices(data);\n  //     }\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }, [mounted]);\n\n  // useEffect(() => {\n  //   getInvoices();\n  // }, []);\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        action={<MoreMenu />}\n        title=\"Ordenes\"\n      />\n      <Divider />\n      <Scrollbar>\n        <Box sx={{ minWidth: 1150 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Modelo\n                </TableCell>\n                <TableCell>\n                  Placa\n                </TableCell>\n                <TableCell>\n                  Dueño\n                </TableCell>\n                <TableCell>\n                  Empleado\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Última Actividad\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((invoice) => (\n                <TableRow key={invoice.id}>\n                  <TableCell>\n                    {invoice.model_name}\n                  </TableCell>\n                  <TableCell>\n                    {invoice.tag}\n                  </TableCell>\n                  <TableCell>\n                    {invoice.client_name}\n                  </TableCell>\n                  <TableCell>\n                    {invoice.employee}\n                  </TableCell>\n                  <TableCell>\n                    {parseInt(invoice.status, 10) !== statusOptions.length - 1 && parseInt(invoice.status, 10) !== statusOptions.length - 2 && (\n                      <Label color=\"primary\">\n                        {statusOptions[invoice.status]}\n                      </Label>\n                    )}\n                    {parseInt(invoice.status, 10) === statusOptions.length - 1 && (\n                      <Label color=\"success\">\n                        {statusOptions[invoice.status]}\n                      </Label>\n                    )}\n                    {parseInt(invoice.status, 10) === statusOptions.length - 2 && (\n                      <Label color=\"success\">\n                        {statusOptions[invoice.status]}\n                      </Label>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {new Date(invoice.date.lastActivity.seconds * 1000).toLocaleString()}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <IconButton\n                      component={RouterLink}\n                      to={`/dashboard/taller/ordenes/detalles/${invoice.id}`}\n                    >\n                      <ArrowRightIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={orders.length}\n        onPageChange={() => {\n        }}\n        onRowsPerPageChange={() => {\n        }}\n        page={0}\n        rowsPerPage={5}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nCustomerInvoices.propTypes = {\n  orders: PropTypes.object,\n  statusOptions: PropTypes.array,\n};\n\nexport default CustomerInvoices;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Save = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7.707 10.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V6h5a2 2 0 012 2v7a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2h5v5.586l-1.293-1.293zM9 4a1 1 0 012 0v2H9V4z\" />\n  </svg>, 'Save'\n);\n\nexport default Save;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n} from '@material-ui/core';\nimport toast from 'react-hot-toast';\nimport MailIcon from '../../../../icons/Save';\nimport firebase from '../../../../lib/firebase';\n\nconst CustomerEmailsSummary = (props) => {\n  const { idVehicle, idClient, clientsOptions, vehiclesClient, vehiclesOwner, ...other } = props;\n  const [client, setClient] = useState('');\n\n  useEffect(() => {\n    // getEmails();\n  }, []);\n\n  /* eslint-disable object-shorthand */\n  const changeClient = async () => {\n    console.log(idVehicle);\n    console.log(idClient);\n    console.log(client);\n    const clientName = clientsOptions.find((cli) => cli.id === client);\n    console.log(clientName);\n\n    const oldClient = firebase.firestore().collection('workshop_clients').doc(idClient);\n\n    const newClient = firebase.firestore().collection('workshop_clients').doc(client);\n\n    const vehicle = firebase.firestore().collection('workshop_vehicles').doc(idVehicle);\n\n    await firebase.firestore().runTransaction((transaction) => {\n      console.log('');\n      return transaction.get(newClient).then(async (sDoc) => {\n        const newVeh = sDoc.data().vehicles;\n\n        const remVeh = [];\n        vehiclesClient.forEach((veh) => {\n          if (idVehicle !== veh) {\n            remVeh.push(veh);\n          }\n        });\n        newVeh.push(idVehicle);\n        vehiclesOwner.push(client);\n\n        transaction.update(newClient, {\n          vehicles: newVeh,\n        });\n\n        transaction.update(oldClient, {\n          vehicles: remVeh,\n        });\n\n        transaction.update(vehicle, {\n          client_id: client,\n          client_name: clientName.name,\n          owner: vehiclesOwner,\n        });\n      });\n    }).then(() => {\n      toast.success('Vehículo Traspasado exitosamente!');\n    }).catch(() => toast.error('Ha ocurrido un error!'));\n  };\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Traspasar Vehículo\" />\n      <Divider />\n      <CardContent>\n        <Box>\n          <TextField\n            fullWidth\n            name=\"option\"\n            onChange={(event) => setClient(event.target.value)}\n            select\n            SelectProps={{ native: true }}\n            value={client}\n            variant=\"outlined\"\n          >\n            {clientsOptions.map((option) => (\n              <option\n                key={option.id}\n                value={option.id}\n              >\n                {option.name}\n              </option>\n            ))}\n          </TextField>\n          <Box sx={{ mt: 2 }}>\n            <Button\n              color=\"primary\"\n              startIcon={<MailIcon fontSize=\"small\" />}\n              variant=\"contained\"\n              onClick={() => changeClient()}\n            >\n              Traspasar\n            </Button>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nCustomerEmailsSummary.propTypes = {\n  idVehicle: PropTypes.string,\n  idClient: PropTypes.string,\n  clientsOptions: PropTypes.array,\n  vehiclesClient: PropTypes.array,\n  vehiclesOwner: PropTypes.array,\n};\n\nexport default CustomerEmailsSummary;\n"],"sourceRoot":""}