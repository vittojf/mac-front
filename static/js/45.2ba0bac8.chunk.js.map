{"version":3,"sources":["components/dashboard/workshop/admins/ClientCreateForm.js","views/dashboard/workshop/admins/AdminCreate.js","icons/ArrowRight.js","icons/Search.js","icons/ArrowLeft.js"],"names":["typeOptions","value","id","VehicleCreateForm","props","navigate","useNavigate","useState","branchs","setBranchs","useEffect","firebase","firestore","collection","get","then","snapshot","data","name","vehicles_count","forEach","doc","push","console","log","initialValues","phone","email","rank","branch_id","validationSchema","Yup","shape","max","required","min","onSubmit","values","a","setErrors","setStatus","setSubmitting","createClient","functions","httpsCallable","res","info","avatar","branch","filter","brand","set","toast","success","catch","err","error","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Grid","container","spacing","item","lg","md","xs","Card","CardContent","TextField","Boolean","fullWidth","helperText","label","type","onBlur","onChange","variant","select","SelectProps","native","map","Box","sx","mt","FormHelperText","display","justifyContent","Button","color","disabled","onClick","save","AdminCreate","settings","useSettings","user","useAuth","gtm","event","snap","backgroundColor","minHeight","py","Container","maxWidth","compact","Typography","Breadcrumbs","separator","ChevronRight","fontSize","Link","component","RouterLink","to","m","startIcon","ArrowLeft","ClientCreateForm","ArrowRight","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Search"],"mappings":"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","file":"static/js/45.2ba0bac8.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  // CardHeader,\n  // Checkbox,\n  // FormControlLabel,\n  FormHelperText,\n  Grid,\n  TextField,\n  // Typography\n} from '@material-ui/core';\n// import FileDropzone from '../../../FileDropzone';\n// import QuillEditor from '../../QuillEditor';\n/* eslint-disable import/no-duplicates */\nimport firebase from '../../../../lib/firebase';\nimport { functions } from '../../../../lib/firebase';\n\nconst typeOptions = [\n  {\n    value: '',\n    id: ''\n  },\n  {\n    value: 'Administrador',\n    id: 'administrator'\n  },\n  {\n    id: 'workshop_agent',\n    value: 'Encargado - Taller'\n  },\n  {\n    id: 'dealership_agent',\n    value: 'Vendedor'\n  },\n];\n\nconst VehicleCreateForm = (props) => {\n  const navigate = useNavigate();\n  const [branchs, setBranchs] = useState([]);\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection('dealership_branches')\n      .get()\n      .then((snapshot) => {\n        const data = [{ id: '', name: '', vehicles_count: 0 }];\n        snapshot.forEach((doc) => {\n          /* eslint-disable object-shorthand */\n          data.push({ ...doc.data(), id: doc.id });\n        });\n        console.log(data);\n        setBranchs(data);\n      });\n  }, []);\n\n  // const handleDrop = (newFiles) => {\n  //   setFiles((prevFiles) => [...prevFiles, ...newFiles]);\n  // };\n\n  // const handleRemove = (file) => {\n  //   setFiles((prevFiles) => prevFiles.filter((_file) => _file.path\n  //     !== file.path));\n  // };\n\n  // const handleRemoveAll = () => {\n  //   setFiles([]);\n  // };\n\n  const save = (values) => {\n    // NOTE: Make API request\n    console.log(values.email);\n    // dispatch(update(values))\n    const createClient = functions.httpsCallable('prueba');\n    return createClient(values.email)\n      .then((res) => {\n        console.log(res);\n        // values.key = res.data;\n        const info = {\n          avatar: 'https://firebasestorage.googleapis.com/v0/b/Mac-desarrollo.appspot.com/o/staff%2FYyCGDuzPuRSRj7JG1GXZawDODAq1%2F840_560%20(1).jpg?alt=media&token=aec0ca02-5912-4d32-b849-c7e2be8b8f55',\n          branch: {\n            id: values.branch_id,\n            value: branchs.filter((brand) => brand.id === values.branch_id)[0].name,\n          },\n          email: values.email,\n          name: values.name,\n          phone: values.phone,\n          rank: {\n            id: values.rank,\n            value: typeOptions.filter((brand) => brand.id === values.rank)[0].value,\n          }\n        };\n        console.log(info);\n        const admin = firebase\n          .firestore()\n          .collection('staff')\n          .doc(res.data);\n        admin\n          .set(info)\n          .then(() => {\n            toast.success('Administrador Registrado', `Se ha registrado al administador ${values.name} exitosamente!`);\n            navigate('/dashboard/taller/clientes');\n            return true;\n            // toast.success('Product created!');\n          });\n      })\n      .catch((err) => {\n        console.error(err);\n        toast.error('Something went wrong!');\n        return true;\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        phone: 0,\n        email: '',\n        rank: '',\n        branch_id: '',\n        // submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          name: Yup.string().max(255).required(),\n          phone: Yup.number().min(0).required(),\n          email: Yup.string().max(255).required(),\n          rank: Yup.number().min(0).required(),\n          branch_id: Yup.string().max(255).required(),\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          // NOTE: Make API request\n          console.log(values.email);\n          // dispatch(update(values))\n          const createClient = functions.httpsCallable('prueba');\n          return createClient(values.email)\n            .then((res) => {\n              console.log(res);\n              // values.key = res.data;\n              const info = {\n                avatar: 'https://firebasestorage.googleapis.com/v0/b/Mac-desarrollo.appspot.com/o/staff%2FYyCGDuzPuRSRj7JG1GXZawDODAq1%2F840_560%20(1).jpg?alt=media&token=aec0ca02-5912-4d32-b849-c7e2be8b8f55',\n                branch: {\n                  id: values.branch_id,\n                  value: branchs.filter((brand) => brand.id === values.branch_id)[0].name,\n                },\n                email: values.email,\n                name: values.name,\n                phone: values.phone,\n                rank: {\n                  id: values.rank,\n                  value: typeOptions.filter((brand) => brand.id === values.rank)[0].value,\n                }\n              };\n              console.log(info);\n              const admin = firebase\n                .firestore()\n                .collection('staff')\n                .doc(res.data);\n              admin\n                .set(info)\n                .then(() => {\n                  toast.success('Administrador Registrado', `Se ha registrado al administador ${values.name} exitosamente!`);\n                  setStatus({ success: true });\n                  setSubmitting(false);\n                  navigate('/dashboard/taller/clientes');\n                  return true;\n                  // toast.success('Product created!');\n                });\n            })\n            .catch((err) => {\n              console.error(err);\n              toast.error('Something went wrong!');\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n              return true;\n            });\n        } catch (err) {\n          console.error(err);\n          toast.error('Something went wrong!');\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n          return true;\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        // setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          {...props}\n        >\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xs={12}\n            >\n              <Card>\n                <CardContent>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.name && errors.name)}\n                        fullWidth\n                        helperText={touched.name && errors.name}\n                        label=\"Nombre y Apellido\"\n                        name=\"name\"\n                        type=\"text\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.name}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.phone && errors.phone)}\n                        fullWidth\n                        helperText={touched.phone && errors.phone}\n                        label=\"Teléfono\"\n                        name=\"phone\"\n                        type=\"number\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.phone}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        fullWidth\n                        label=\"Rango\"\n                        name=\"rank\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.rank}\n                        variant=\"outlined\"\n                      >\n                        {typeOptions.map((rank) => (\n                          <option\n                            key={rank.id}\n                            value={rank.id}\n                          >\n                            {rank.value}\n                          </option>\n                        ))}\n                      </TextField>\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email}\n                        label=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={12}\n                      xs={12}\n                    >\n                      <TextField\n                        fullWidth\n                        label=\"Sucursal\"\n                        name=\"branch_id\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.branch_id}\n                        variant=\"outlined\"\n                      >\n                        {branchs.map((branch) => (\n                          <option\n                            key={branch.id}\n                            value={branch.id}\n                          >\n                            {branch.name}\n                          </option>\n                        ))}\n                      </TextField>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid\n              item\n              lg={2}\n              md={2}\n              xs={12}\n            >\n              {errors.submit && (\n                <Box sx={{ mt: 3 }}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  mt: 3\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  variant=\"contained\"\n                  onClick={() => save(values)}\n                >\n                  Registrar Cliente\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default VehicleCreateForm;\n","import { useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Typography } from '@material-ui/core';\nimport { ClientCreateForm } from '../../../../components/dashboard/workshop/admins';\nimport useSettings from '../../../../hooks/useSettings';\nimport ArrowLeftIcon from '../../../../icons/ArrowLeft';\nimport ChevronRightIcon from '../../../../icons/ChevronRight';\nimport gtm from '../../../../lib/gtm';\nimport firebase from '../../../../lib/firebase';\nimport useAuth from '../../../../hooks/useAuth';\n\nconst AdminCreate = () => {\n  const { settings } = useSettings();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n    firebase\n      .firestore()\n      .collection('staff')\n      .doc(user.id)\n      .get()\n      .then((snap) => {\n        if (snap.data().rank.id === 'dealership_agent') {\n          navigate('/dashboard');\n        }\n      });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Crear Administradores | Mac Admin</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Agregar Administradores\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard/taller/clientes\"\n                  variant=\"subtitle2\"\n                >\n                  Listado de Administradores\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Agregar Administrador\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  startIcon={<ArrowLeftIcon fontSize=\"small\" />}\n                  sx={{ mt: 1 }}\n                  to=\"/dashboard/taller/clientes\"\n                  variant=\"outlined\"\n                >\n                  Cancelar\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <ClientCreateForm />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default AdminCreate;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Search = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search'\n);\n\nexport default Search;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowLeft = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowLeft'\n);\n\nexport default ArrowLeft;\n"],"sourceRoot":""}