{"version":3,"sources":["views/dashboard/workshop/vehicles/VehicleWorkshopDetails.js","icons/ArrowRight.js","icons/Search.js","components/Label.js","icons/Download.js","icons/DotsHorizontal.js","icons/DocumentText.js","icons/Duplicate.js","components/MoreMenu.js","icons/Archive.js","components/dashboard/workshop/vehicles/VehiclesListTable.js","components/dashboard/workshop/vehicles/VehicleCreateForm.js","components/dashboard/workshop/vehicles/CustomerContactDetails.js","components/dashboard/workshop/vehicles/CustomerInvoices.js","components/dashboard/workshop/vehicles/CustomerLogs.js","icons/Save.js","components/dashboard/workshop/vehicles/CustomerEmailsSummary.js"],"names":["VehicleWorkshopDetails","settings","useSettings","useState","vehicle","setVehicle","order","setOrder","client","setClient","status","setStatus","clientsOptions","setClientsOptions","id","useParams","user","useAuth","navigate","useNavigate","getVehicle","firebase","firestore","collection","doc","get","then","clientId","console","log","data","client_id","snapshot","forEach","push","useEffect","snap","rank","orderBy","name","gtm","event","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","separator","fontSize","mt","component","RouterLink","to","lg","md","xl","xs","model","model_name","brand","brand_name","tag","email","identification","number","rating","orders","statusOptions","idVehicle","idClient","vehiclesClient","vehicles","vehiclesOwner","owner","ArrowRight","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Search","LabelRoot","experimentalStyled","theme","styleProps","palette","main","contrastText","alignItems","borderRadius","shape","cursor","display","flexGrow","flexShrink","fontFamily","typography","pxToRem","fontWeight","fontWeightMedium","letterSpacing","minWidth","paddingBottom","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","Label","props","children","other","Download","DotsHorizontal","DocumentText","Duplicate","MoreMenu","anchorRef","useRef","openMenu","setOpenMenu","title","onClick","ref","anchorEl","current","anchorOrigin","horizontal","vertical","onClose","open","PaperProps","width","transformOrigin","primary","memo","Archive","sortOptions","label","value","descendingComparator","a","b","applySort","customers","sort","split","comparator","getComparator","stabilizedThis","map","el","index","newOrder","VehiclesListTable","selectedCustomers","setSelectedCustomers","page","setPage","limit","setLimit","query","setQuery","setSort","hasAcceptedMarketing","isProspect","isReturning","filters","filteredCustomers","filter","customer","matches","containsQuery","property","toLowerCase","includes","Object","keys","key","applyFilters","paginatedCustomers","slice","applyPagination","enableBulkActions","length","selectedSomeCustomers","selectedAllCustomers","Card","Box","flexWrap","m","p","TextField","fullWidth","InputProps","startAdornment","InputAdornment","position","onChange","target","placeholder","select","SelectProps","native","option","px","zIndex","Checkbox","checked","indeterminate","Button","ml","Scrollbar","Table","TableHead","TableRow","TableCell","align","TableBody","isCustomerSelected","hover","selected","Avatar","src","logo","height","getInitials","Link","Typography","client_name","IconButton","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","VehicleCreateForm","brandsOptions","setBrandsOptions","modelsOptions","setModelsOptions","colors","setColors","isSubmit","setIsSubmit","arrayModel","vehicles_count","modelBrand","document","idBrand","nameBrand","element","localeCompare","catch","err","text","initialValues","validationSchema","Yup","max","required","onSubmit","values","setErrors","setSubmitting","brandName","modelName","date","registered","lastActivity","FieldValue","serverTimestamp","toString","idDoc","add","u","vh","update","toast","success","error","submit","message","errors","handleBlur","handleChange","handleSubmit","setFieldValue","touched","Grid","CardContent","Boolean","helperText","models","type","onBlur","Autocomplete","getOptionLabel","isOptionEqualToValue","e","options","renderInput","params","FormHelperText","disabled","CustomerContactDetails","CardHeader","Divider","CustomerInvoices","action","invoice","employee","Date","seconds","toLocaleString","Save","CustomerEmailsSummary","changeClient","clientName","find","cli","oldClient","newClient","runTransaction","transaction","sDoc","newVeh","remVeh","veh","startIcon"],"mappings":"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","file":"static/js/27.85ed96f3.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link as RouterLink, useParams, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Breadcrumbs,\n  // Button,\n  Container,\n  // Divider,\n  Grid,\n  Link,\n  // Tab,\n  // Tabs,\n  Typography\n} from '@material-ui/core';\n// import { customerApi } from '../../../../__fakeApi__/customerApi';\nimport {\n  CustomerContactDetails,\n  // CustomerDataManagement,\n  // CustomerEmailsSummary,\n  CustomerInvoices,\n  // CustomerInvoicesSummary,\n  CustomerLogs,\n  CustomerEmailsSummary\n} from '../../../../components/dashboard/workshop/vehicles';\n// import useMounted from '../../../../hooks/useMounted';\nimport ChevronRightIcon from '../../../../icons/ChevronRight';\n// import PencilAltIcon from '../../../../icons/PencilAlt';\nimport gtm from '../../../../lib/gtm';\nimport useSettings from '../../../../hooks/useSettings';\nimport firebase from '../../../../lib/firebase';\nimport useAuth from '../../../../hooks/useAuth';\n\n// const tabs = [\n//   { label: 'Vehículo', value: 'details' },\n//   { label: 'Cliente', value: 'invoices' },\n//   { label: 'Ordenes', value: 'logs' }\n// ];\n\nconst VehicleWorkshopDetails = () => {\n  // const mounted = useMounted();\n  const { settings } = useSettings();\n  const [vehicle, setVehicle] = useState({});\n  const [order, setOrder] = useState([]);\n  const [client, setClient] = useState({});\n  const [status, setStatus] = useState([]);\n  const [clientsOptions, setClientsOptions] = useState([]);\n  // const [loaded, setLoaded] = useState(false);\n  // const [customer, setCustomer] = useState(null);\n  // const [currentTab, setCurrentTab] = useState('details');\n  const { id } = useParams();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n\n  const getStatus = () => {\n    firebase\n      .firestore()\n      .collection('data')\n      .doc('workshop_status')\n      .get()\n      .then((doc) => {\n        console.log(doc.data());\n        setStatus(doc.data().data);\n        console.log(status);\n      });\n  };\n\n  const getClients = () => {\n    firebase\n      .firestore()\n      .collection('workshop_clients')\n      .orderBy('name', 'asc')\n      .get()\n      .then((snapshot) => {\n        console.log(snapshot);\n        const data = [{ id: '', name: '' }];\n        snapshot.forEach((doc) => {\n          console.log(doc.data());\n          data.push({ ...doc.data(), id: doc.id });\n          // setLoaded(true);\n        });\n        setClientsOptions(data);\n      });\n  };\n\n  const getClient = (clientId) => {\n    firebase\n      .firestore()\n      .collection('workshop_clients')\n      .doc(clientId)\n      .get()\n      .then((doc) => {\n        console.log(doc.data());\n        setClient({ ...doc.data(), id: doc.id });\n        console.log(client);\n      });\n  };\n\n  const getOrder = () => {\n    // const collection = `/workshop_vehicles/${id}/orders`;\n    firebase\n      .firestore()\n      .collection('workshop_vehicles')\n      .doc(id)\n      .collection('orders')\n      .get()\n      .then((snapshot) => {\n        console.log(snapshot);\n        const data = [];\n        snapshot.forEach((doc) => {\n          console.log(doc.data());\n          data.push({ ...doc.data(), id: doc.id });\n          // setLoaded(true);\n        });\n        setOrder(data);\n        console.log(order);\n      });\n  };\n\n  const getVehicle = () => {\n    firebase\n      .firestore()\n      .collection('workshop_vehicles')\n      .doc(id)\n      .get()\n      .then((doc) => {\n        console.log(doc.data());\n        getClient(doc.data().client_id);\n        getOrder();\n        setVehicle({ ...doc.data(), id: doc.id });\n        // setLoaded(true);\n        console.log(vehicle);\n      });\n  };\n\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection('staff')\n      .doc(user.id)\n      .get()\n      .then((snap) => {\n        if (snap.data().rank.id === 'dealership_agent') {\n          navigate('/dashboard');\n        }\n      });\n    console.log(id);\n    getVehicle();\n    getStatus();\n    getClients();\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  // const getCustomer = useCallback(async () => {\n  //   try {\n  //     const data = await customerApi.getCustomer();\n\n  //     if (mounted.current) {\n  //       setCustomer(data);\n  //     }\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }, [mounted]);\n\n  // useEffect(() => {\n  //   getCustomer();\n  // }, [getCustomer]);\n\n  // const handleTabsChange = (event, value) => {\n  //   setCurrentTab(value);\n  // };\n\n  if (!vehicle) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Detalle del Vehículo | Mac Admin</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                {vehicle.name}\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard/taller/vehiculos\"\n                  variant=\"subtitle2\"\n                >\n                  Lista de Vehículos\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Detalle de Vehículo\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n            {/* <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  startIcon={<PencilAltIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  to=\"/dashboard/customers/1/edit\"\n                  variant=\"contained\"\n                >\n                  Edit\n                </Button>\n              </Box>\n            </Grid> */}\n          </Grid>\n          {/* <Box sx={{ mt: 3 }}>\n            <Tabs\n              indicatorColor=\"primary\"\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              textColor=\"primary\"\n              value={currentTab}\n              variant=\"scrollable\"\n            >\n              {tabs.map((tab) => (\n                <Tab\n                  key={tab.value}\n                  label={tab.label}\n                  value={tab.value}\n                />\n              ))}\n            </Tabs>\n          </Box>\n          <Divider /> */}\n          <Box sx={{ mt: 3 }}>\n            {/* {currentTab === 'details' && ( */}\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={settings.compact ? 6 : 4}\n                md={6}\n                xl={settings.compact ? 6 : 3}\n                xs={12}\n              >\n                <CustomerContactDetails\n                  model={vehicle.model_name}\n                  brand={vehicle.brand_name}\n                  tag={vehicle.tag}\n                  email={vehicle.email}\n                  color={vehicle.color}\n                />\n              </Grid>\n              <Grid\n                item\n                lg={settings.compact ? 6 : 4}\n                md={6}\n                xl={settings.compact ? 6 : 3}\n                xs={12}\n              >\n                {client.name && (\n                  <CustomerInvoices\n                    name={client.name}\n                    email={client.email}\n                    identification={client.identification.number}\n                    rating={client.rating}\n                  />\n                )}\n              </Grid>\n              <Grid\n                item\n                lg={12}\n                md={12}\n                xl={12}\n                xs={12}\n              >\n                <CustomerLogs\n                  orders={order}\n                  statusOptions={status}\n                />\n              </Grid>\n              <Grid\n                item\n                lg={12}\n                md={12}\n                xl={12}\n                xs={12}\n              >\n                <CustomerEmailsSummary\n                  idVehicle={vehicle.id}\n                  idClient={client.id}\n                  clientsOptions={clientsOptions}\n                  vehiclesClient={client.vehicles}\n                  vehiclesOwner={vehicle.owner}\n                />\n              </Grid>\n              {/* <Grid\n                item\n                lg={settings.compact ? 6 : 4}\n                md={6}\n                xl={settings.compact ? 6 : 3}\n                xs={12}\n              >\n                <CustomerInvoicesSummary />\n              </Grid>\n              <Grid\n                item\n                lg={settings.compact ? 6 : 4}\n                md={6}\n                xl={settings.compact ? 6 : 3}\n                xs={12}\n              >\n                <CustomerEmailsSummary />\n              </Grid>\n              <Grid\n                item\n                lg={settings.compact ? 6 : 4}\n                md={6}\n                xl={settings.compact ? 6 : 3}\n                xs={12}\n              >\n                <CustomerDataManagement />\n              </Grid> */}\n            </Grid>\n            {/* )} */}\n            {/* {currentTab === 'invoices' && (\n              <CustomerInvoices\n                name={client.name}\n                email={client.email}\n                identification={client.identification.number}\n                rating={client.rating}\n              />\n            )}\n            {currentTab === 'logs' && (\n              <CustomerLogs\n                orders={order}\n                statusOptions={status}\n              />\n            )} */}\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default VehicleWorkshopDetails;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Search = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search'\n);\n\nexport default Search;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DocumentText = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'DocumentText'\n);\n\nexport default DocumentText;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n\nexport default Duplicate;\n","import { useRef, useState, memo } from 'react';\nimport { ListItemIcon, ListItemText, Tooltip, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport ArchiveIcon from '../icons/Archive';\nimport DocumentTextIcon from '../icons/DocumentText';\nimport DotsHorizontalIcon from '../icons/DotsHorizontal';\nimport DownloadIcon from '../icons/Download';\nimport DuplicateIcon from '../icons/Duplicate';\n\nconst MoreMenu = (props) => {\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={anchorRef}\n          {...props}\n        >\n          <DotsHorizontalIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{\n          sx: {\n            maxWidth: '100%',\n            width: 256\n          }\n        }}\n        transformOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <DownloadIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DocumentTextIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DuplicateIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(MoreMenu);\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Archive = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Archive'\n);\n\nexport default Archive;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// import numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  // Divider,\n  IconButton,\n  InputAdornment,\n  Link,\n  // Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  // Tabs,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../../icons/ArrowRight';\n// import PencilAltIcon from '../../../../icons/PencilAlt';\nimport SearchIcon from '../../../../icons/Search';\nimport getInitials from '../../../../utils/getInitials';\nimport Scrollbar from '../../../Scrollbar';\n\n// const tabs = [\n//   {\n//     label: 'All',\n//     value: 'all'\n//   },\n//   {\n//     label: 'Accepts Marketing',\n//     value: 'hasAcceptedMarketing'\n//   },\n//   {\n//     label: 'Prospect',\n//     value: 'isProspect'\n//   },\n//   {\n//     label: 'Returning',\n//     value: 'isReturning'\n//   }\n// ];\n\nconst sortOptions = [\n  {\n    label: 'Más recientes',\n    value: 'updatedAt|desc'\n  },\n  {\n    label: 'Menos recientes',\n    value: 'updatedAt|asc'\n  },\n  {\n    label: 'Total',\n    value: 'orders|desc'\n  },\n  {\n    label: 'Total',\n    value: 'orders|asc'\n  }\n];\n\nconst applyFilters = (customers, query, filters) => customers\n  .filter((customer) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['brand_name', 'client_name', 'model_name', 'tag'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && customer[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n\nconst applyPagination = (customers, page, limit) => customers\n  .slice(page * limit, page * limit + limit);\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => (order === 'desc'\n  ? (a, b) => descendingComparator(a, b, orderBy)\n  : (a, b) => -descendingComparator(a, b, orderBy));\n\nconst applySort = (customers, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst VehiclesListTable = (props) => {\n  const { customers, ...other } = props;\n  // const [currentTab, setCurrentTab] = useState('all');\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  // const handleTabsChange = (event, value) => {\n  //   const updatedFilters = {\n  //     ...filters,\n  //     hasAcceptedMarketing: null,\n  //     isProspect: null,\n  //     isReturning: null\n  //   };\n\n  //   if (value !== 'all') {\n  //     updatedFilters[value] = true;\n  //   }\n\n  //   setFilters(updatedFilters);\n  //   setSelectedCustomers([]);\n  //   setCurrentTab(value);\n  // };\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllCustomers = (event) => {\n    setSelectedCustomers(event.target.checked\n      ? customers.map((customer) => customer.id)\n      : []);\n  };\n\n  // const handleSelectOneCustomer = (event, customerId) => {\n  //   if (!selectedCustomers.includes(customerId)) {\n  //     setSelectedCustomers((prevSelected) => [...prevSelected, customerId]);\n  //   } else {\n  //     setSelectedCustomers((prevSelected) => prevSelected.filter((id) => id !== customerId));\n  //   }\n  // };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const filteredCustomers = applyFilters(customers, query, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  const enableBulkActions = selectedCustomers.length > 0;\n  const selectedSomeCustomers = selectedCustomers.length > 0\n    && selectedCustomers.length < customers.length;\n  const selectedAllCustomers = selectedCustomers.length === customers.length;\n\n  return (\n    <Card {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Buscar...\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            width: 240\n          }}\n        >\n          <TextField\n            label=\"Ordenar Por\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              position: 'absolute',\n              px: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllCustomers}\n              color=\"primary\"\n              indeterminate={selectedSomeCustomers}\n              onChange={handleSelectAllCustomers}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {/* <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllCustomers}\n                    color=\"primary\"\n                    indeterminate={selectedSomeCustomers}\n                    onChange={handleSelectAllCustomers}\n                  />\n                </TableCell> */}\n                <TableCell>\n                  Modelo\n                </TableCell>\n                <TableCell>\n                  Placa\n                </TableCell>\n                <TableCell>\n                  Dueño\n                </TableCell>\n                <TableCell>\n                  Color\n                </TableCell>\n                <TableCell align=\"right\">\n                  Acciones\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => {\n                const isCustomerSelected = selectedCustomers.includes(customer.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={customer.id}\n                    selected={isCustomerSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isCustomerSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneCustomer(event, customer.id)}\n                        value={isCustomerSelected}\n                      />\n                    </TableCell> */}\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Avatar\n                          src={customer.logo}\n                          sx={{\n                            height: 42,\n                            width: 42\n                          }}\n                        >\n                          {getInitials(customer.model_name)}\n                        </Avatar>\n                        <Box sx={{ ml: 1 }}>\n                          <Link\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to={`/dashboard/taller/vehiculos/detalles/${customer.id}`}\n                            variant=\"subtitle2\"\n                          >\n                            {customer.model_name}\n                          </Link>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"body2\"\n                          >\n                            {customer.brand_name}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.tag}`}\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.client_name}`}\n                    </TableCell>\n                    <TableCell>\n                      {customer.color}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {/* <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/customers/1/edit\"\n                      >\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton> */}\n                      <IconButton\n                        component={RouterLink}\n                        to={`/dashboard/taller/vehiculos/detalles/${customer.id}`}\n                      >\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredCustomers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nVehiclesListTable.propTypes = {\n  customers: PropTypes.array.isRequired\n};\n\nexport default VehiclesListTable;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  // CardHeader,\n  // Checkbox,\n  // FormControlLabel,\n  FormHelperText,\n  Grid,\n  TextField,\n  // Typography\n} from '@material-ui/core';\n// import FileDropzone from '../../../FileDropzone';\n// import QuillEditor from '../../QuillEditor';\n/* eslint-disable import/no-duplicates */\nimport firebase from '../../../../lib/firebase';\n// import { functions } from '../../../../lib/firebase';\n\nconst VehicleCreateForm = (props) => {\n  const navigate = useNavigate();\n  const [brandsOptions, setBrandsOptions] = useState([]);\n  const [modelsOptions, setModelsOptions] = useState([]);\n  const [clientsOptions, setClientsOptions] = useState([{ value: '', name: '' }]);\n  const [colors, setColors] = useState([]);\n  const [isSubmit, setIsSubmit] = useState(false);\n  const empty = '';\n\n  const sorted = (array) => array.sort((a, b) => a.value.localeCompare(b.value));\n\n  const getColor = () => {\n    firebase\n      .firestore()\n      .collection('data')\n      .doc('color')\n      .get()\n      .then((snapshot) => {\n        const info = { id: '', value: '' };\n        const data = [];\n        data.push(info);\n        snapshot.data().data.forEach((element) => {\n          data.push(element);\n        });\n        setColors(sorted(data));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const getClients = () => {\n    firebase\n      .firestore()\n      .collection('workshop_clients')\n      .get()\n      .then((snapshot) => {\n        const data = [];\n        snapshot.forEach((element) => {\n          data.push({ value: element.id, text: element.data().name });\n        });\n        setClientsOptions(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    const arrayModel = [{ id: '', name: '', vehicles_count: 0 }];\n    firebase\n      .firestore()\n      .collection('dealership_brands')\n      .get()\n      .then((snapshot) => {\n        const data = [{ id: '', name: '', vehicles_count: 0 }];\n        snapshot.forEach((doc) => {\n          /* eslint-disable object-shorthand */\n          data.push({ ...doc.data(), id: doc.id });\n          firebase\n            .firestore()\n            .collection('dealership_brands')\n            .doc(doc.id)\n            .collection('models')\n            .get()\n            .then((modelBrand) => {\n              modelBrand.forEach((document) => {\n                /* eslint-disable object-shorthand */\n                arrayModel.push({ ...document.data(), id: document.id, idBrand: doc.id, nameBrand: doc.data().name });\n              });\n              setModelsOptions(arrayModel);\n            });\n        });\n        setBrandsOptions(data);\n      });\n    getColor();\n    getClients();\n  }, []);\n\n  return (\n    <Formik\n      initialValues={{\n        brand: '',\n        model: '',\n        tag: '',\n        color: '',\n        client_id: '',\n        client_name: '',\n        // submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          brand: Yup.string().max(255).required('La marca es obligatoria'),\n          model: Yup.string().max(255).required('El modelo es obligatorio'),\n          tag: Yup.string().max(255).required('La placa es obligatoria'),\n          color: Yup.string().max(255).required('El color es obligatorio'),\n          // client_id: Yup.string().max(255).required(),\n          client_id: Yup.string().max(255).required('El cliente es obligatorio'),\n          client_name: Yup.string().max(255).required('El cliente es obligatorio'),\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          setSubmitting(true);\n          setIsSubmit(true);\n          const brandName = brandsOptions.filter((brand) => brand.id === values.brand);\n          values.brand_name = brandName[0].name;\n          values.logo = brandName[0].logo;\n          const modelName = modelsOptions.filter((model) => model.id === values.model);\n          values.model_name = modelName[0].name;\n          values.date = {\n            registered: '',\n            lastActivity: ''\n          };\n          values.owner = [];\n          values.date.registered = firebase.firestore.FieldValue.serverTimestamp();\n          values.date.lastActivity = firebase.firestore.FieldValue.serverTimestamp();\n          values.owner.push(values.client_id);\n          values.tag = values.tag.toString();\n          let idDoc = '';\n\n          firebase.firestore().collection('workshop_vehicles').add(values)\n            .then((u) => {\n              idDoc = u.id;\n              return firebase.firestore().collection('workshop_clients').doc(values.client_id);\n            })\n            .then((query) => {\n              console.log('');\n              return query.get();\n            })\n            .then((doc) => {\n              const vh = doc.data().vehicles;\n              vh.push(idDoc);\n              return vh;\n            })\n            .then((vehicles) => {\n              console.log('');\n              // return doc.data().vehicles\n              return firebase.firestore().collection('workshop_clients').doc(values.client_id).update({\n                vehicles: vehicles\n              });\n            })\n            .then(() => {\n              // success('Vehiculo Agregado', 'Se agrego correctamente el vehículo a ' + client.name);\n              toast.success('Vehiculo Registrado', `Se agrego correctamente el vehículo a ${values.client_name} exitosamente!`);\n              navigate('/dashboard/taller/vehiculos');\n              setIsSubmit(false);\n              return true;\n            });\n          return true;\n        } catch (err) {\n          console.error(err);\n          toast.error('Something went wrong!');\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n          setIsSubmit(false);\n          return true;\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        // isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          {...props}\n        >\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={12}\n              md={12}\n              xs={12}\n            >\n              <Card>\n                <CardContent>\n                  <Grid\n                    container\n                    spacing={3}\n                  >\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        fullWidth\n                        error={Boolean(touched.brand && errors.brand)}\n                        label=\"Marca\"\n                        helperText={touched.brand && errors.brand}\n                        name=\"brand\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.brand}\n                        variant=\"outlined\"\n                      >\n                        {brandsOptions.map((brand) => (\n                          <option\n                            key={brand.id}\n                            value={brand.id}\n                          >\n                            {brand.name}\n                          </option>\n                        ))}\n                      </TextField>\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        fullWidth\n                        error={Boolean(touched.model && errors.model)}\n                        label=\"Modelo\"\n                        helperText={touched.model && errors.model}\n                        name=\"model\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.model}\n                        variant=\"outlined\"\n                      >\n                        <option\n                          value={null}\n                        >\n                          {empty}\n                        </option>\n                        {modelsOptions.filter((models) => models.idBrand === values.brand).map((model) => (\n                          <option\n                            key={model.id}\n                            value={model.id}\n                          >\n                            {model.name}\n                          </option>\n                        ))}\n                      </TextField>\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.tag && errors.tag)}\n                        fullWidth\n                        helperText={touched.tag && errors.tag}\n                        label=\"Placa\"\n                        name=\"tag\"\n                        type=\"text\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.tag}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        fullWidth\n                        error={Boolean(touched.color && errors.color)}\n                        label=\"Color\"\n                        helperText={touched.color && errors.color}\n                        name=\"color\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.color}\n                        variant=\"outlined\"\n                      >\n                        {colors.map((color) => (\n                          <option\n                            key={color.id}\n                            value={color.value}\n                          >\n                            {color.value}\n                          </option>\n                        ))}\n                      </TextField>\n                    </Grid>\n                    <Grid\n                      item\n                      md={12}\n                      xs={12}\n                    >\n                      <Autocomplete\n                        getOptionLabel={(option) => option.text}\n                        isOptionEqualToValue={(option, value) => option.value === value.value}\n                        // getOptionLabel={(option) => option.name}\n                        onChange={(e, value) => {\n                          setFieldValue('client_id', value.value);\n                          setFieldValue('client_name', value.text);\n                        }}\n                        options={clientsOptions}\n                        renderInput={(params) => (\n                          <TextField\n                            error={Boolean(touched.client_id && errors.client_id)}\n                            fullWidth\n                            label=\"Cliente\"\n                            helperText={touched.client_id && errors.client_id}\n                            name=\"client_id\"\n                            variant=\"outlined\"\n                            // value={values.client_name}\n                            {...params}\n                          />\n                        )}\n                      />\n                      {/* <TextField\n                        fullWidth\n                        label=\"Cliente\"\n                        name=\"client_id\"\n                        onChange={handleChange}\n                        select\n                        SelectProps={{ native: true }}\n                        value={values.client_id}\n                        variant=\"outlined\"\n                      >\n                        {clientsOptions.map((client) => (\n                          <option\n                            key={client.id}\n                            value={client.id}\n                          >\n                            {client.name}\n                          </option>\n                        ))}\n                      </TextField> */}\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid\n              item\n              lg={2}\n              md={2}\n              xs={12}\n            >\n              {errors.submit && (\n                <Box sx={{ mt: 3 }}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  mt: 3\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmit}\n                  type=\"submit\"\n                  variant=\"contained\"\n                  // onClick={() => save(values)}\n                >\n                  Registrar Vehículo\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default VehicleCreateForm;\n","import PropTypes from 'prop-types';\nimport {\n  // Box,\n  // Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n// import LockIcon from '../../../../icons/Lock';\n// import UserIcon from '../../../../icons/User';\n// import Label from '../../../Label';\n\nconst CustomerContactDetails = (props) => {\n  const { model, brand, tag, email, color, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Vehículo\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Modelo\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {model}\n              </Typography>\n              {/* <Label color={isVerified ? 'success' : 'error'}>\n                {isVerified ? 'Email verified' : 'Email not verified'}\n              </Label> */}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Marca\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {brand}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Placa\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {tag}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Color\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {color}\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Card>\n  );\n};\n\nCustomerContactDetails.propTypes = {\n  model: PropTypes.string,\n  brand: PropTypes.string,\n  tag: PropTypes.string,\n  email: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default CustomerContactDetails;\n","import PropTypes from 'prop-types';\nimport {\n  // Box,\n  // Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n// import LockIcon from '../../../../icons/Lock';\n// import UserIcon from '../../../../icons/User';\n// import Label from '../../../Label';\n\nconst CustomerInvoices = (props) => {\n  const { name, email, identification, rating, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Clientes\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Nombre\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {name}\n              </Typography>\n              {/* <Label color={isVerified ? 'success' : 'error'}>\n                {isVerified ? 'Email verified' : 'Email not verified'}\n              </Label> */}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Email\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {email}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                ID\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {identification}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Rating\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {rating}\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Card>\n  );\n};\n\nCustomerInvoices.propTypes = {\n  name: PropTypes.string,\n  email: PropTypes.string,\n  identification: PropTypes.string,\n  rating: PropTypes.string,\n};\n\nexport default CustomerInvoices;\n","// import { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// import { format } from 'date-fns';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow\n} from '@material-ui/core';\n// import { customerApi } from '../../../../__fakeApi__/customerApi';\n// import useMounted from '../../../../hooks/useMounted';\nimport ArrowRightIcon from '../../../../icons/ArrowRight';\nimport Label from '../../../Label';\nimport MoreMenu from '../../../MoreMenu';\nimport Scrollbar from '../../../Scrollbar';\n\nconst CustomerInvoices = (props) => {\n  const { orders, statusOptions } = props;\n  // const mounted = useMounted();\n  // const [invoices, setInvoices] = useState([]);\n\n  // const getInvoices = useCallback(async () => {\n  //   try {\n  //     const data = await customerApi.getCustomerInvoices();\n\n  //     if (mounted.current) {\n  //       setInvoices(data);\n  //     }\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }, [mounted]);\n\n  // useEffect(() => {\n  //   getInvoices();\n  // }, []);\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        action={<MoreMenu />}\n        title=\"Ordenes\"\n      />\n      <Divider />\n      <Scrollbar>\n        <Box sx={{ minWidth: 1150 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Modelo\n                </TableCell>\n                <TableCell>\n                  Placa\n                </TableCell>\n                <TableCell>\n                  Dueño\n                </TableCell>\n                <TableCell>\n                  Empleado\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Última Actividad\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((invoice) => (\n                <TableRow key={invoice.id}>\n                  <TableCell>\n                    {invoice.model_name}\n                  </TableCell>\n                  <TableCell>\n                    {invoice.tag}\n                  </TableCell>\n                  <TableCell>\n                    {invoice.client_name}\n                  </TableCell>\n                  <TableCell>\n                    {invoice.employee}\n                  </TableCell>\n                  <TableCell>\n                    {parseInt(invoice.status, 10) !== statusOptions.length - 1 && parseInt(invoice.status, 10) !== statusOptions.length - 2 && (\n                      <Label color=\"primary\">\n                        {statusOptions[invoice.status]}\n                      </Label>\n                    )}\n                    {parseInt(invoice.status, 10) === statusOptions.length - 1 && (\n                      <Label color=\"success\">\n                        {statusOptions[invoice.status]}\n                      </Label>\n                    )}\n                    {parseInt(invoice.status, 10) === statusOptions.length - 2 && (\n                      <Label color=\"success\">\n                        {statusOptions[invoice.status]}\n                      </Label>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    {new Date(invoice.date.lastActivity.seconds * 1000).toLocaleString()}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <IconButton\n                      component={RouterLink}\n                      to={`/dashboard/taller/ordenes/detalles/${invoice.id}`}\n                    >\n                      <ArrowRightIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={orders.length}\n        onPageChange={() => {\n        }}\n        onRowsPerPageChange={() => {\n        }}\n        page={0}\n        rowsPerPage={5}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nCustomerInvoices.propTypes = {\n  orders: PropTypes.object,\n  statusOptions: PropTypes.array,\n};\n\nexport default CustomerInvoices;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Save = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7.707 10.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V6h5a2 2 0 012 2v7a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2h5v5.586l-1.293-1.293zM9 4a1 1 0 012 0v2H9V4z\" />\n  </svg>, 'Save'\n);\n\nexport default Save;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n} from '@material-ui/core';\nimport toast from 'react-hot-toast';\nimport MailIcon from '../../../../icons/Save';\nimport firebase from '../../../../lib/firebase';\n\nconst CustomerEmailsSummary = (props) => {\n  const { idVehicle, idClient, clientsOptions, vehiclesClient, vehiclesOwner, ...other } = props;\n  const [client, setClient] = useState('');\n\n  useEffect(() => {\n    // getEmails();\n  }, []);\n\n  /* eslint-disable object-shorthand */\n  const changeClient = async () => {\n    console.log(idVehicle);\n    console.log(idClient);\n    console.log(client);\n    const clientName = clientsOptions.find((cli) => cli.id === client);\n    console.log(clientName);\n\n    const oldClient = firebase.firestore().collection('workshop_clients').doc(idClient);\n\n    const newClient = firebase.firestore().collection('workshop_clients').doc(client);\n\n    const vehicle = firebase.firestore().collection('workshop_vehicles').doc(idVehicle);\n\n    await firebase.firestore().runTransaction((transaction) => {\n      console.log('');\n      return transaction.get(newClient).then(async (sDoc) => {\n        const newVeh = sDoc.data().vehicles;\n\n        const remVeh = [];\n        vehiclesClient.forEach((veh) => {\n          if (idVehicle !== veh) {\n            remVeh.push(veh);\n          }\n        });\n        newVeh.push(idVehicle);\n        vehiclesOwner.push(client);\n\n        transaction.update(newClient, {\n          vehicles: newVeh,\n        });\n\n        transaction.update(oldClient, {\n          vehicles: remVeh,\n        });\n\n        transaction.update(vehicle, {\n          client_id: client,\n          client_name: clientName.name,\n          owner: vehiclesOwner,\n        });\n      });\n    }).then(() => {\n      toast.success('Vehículo Traspasado exitosamente!');\n    }).catch(() => toast.error('Ha ocurrido un error!'));\n  };\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Traspasar Vehículo\" />\n      <Divider />\n      <CardContent>\n        <Box>\n          <TextField\n            fullWidth\n            name=\"option\"\n            onChange={(event) => setClient(event.target.value)}\n            select\n            SelectProps={{ native: true }}\n            value={client}\n            variant=\"outlined\"\n          >\n            {clientsOptions.map((option) => (\n              <option\n                key={option.id}\n                value={option.id}\n              >\n                {option.name}\n              </option>\n            ))}\n          </TextField>\n          <Box sx={{ mt: 2 }}>\n            <Button\n              color=\"primary\"\n              startIcon={<MailIcon fontSize=\"small\" />}\n              variant=\"contained\"\n              onClick={() => changeClient()}\n            >\n              Traspasar\n            </Button>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nCustomerEmailsSummary.propTypes = {\n  idVehicle: PropTypes.string,\n  idClient: PropTypes.string,\n  clientsOptions: PropTypes.array,\n  vehiclesClient: PropTypes.array,\n  vehiclesOwner: PropTypes.array,\n};\n\nexport default CustomerEmailsSummary;\n"],"sourceRoot":""}