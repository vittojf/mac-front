{"version":3,"sources":["components/dashboard/driver/DriverListTable.js","views/dashboard/drivers/DriverList.js","icons/Search.js","../node_modules/@material-ui/core/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@material-ui/core/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/core/InputAdornment/inputAdornmentClasses.js","../node_modules/@material-ui/core/InputAdornment/InputAdornment.js","repositories/drivers.repository.js"],"names":["sortOptions","label","value","descendingComparator","a","b","orderBy","applySort","customers","sort","split","comparator","order","getComparator","stabilizedThis","map","el","index","newOrder","DriverListTable","props","other","selectedCustomers","useState","page","setPage","limit","setLimit","query","setQuery","driversRepository","DriversRepository","setSort","hasAcceptedMarketing","isProspect","isReturning","filters","filteredCustomers","filter","customer","matches","containsQuery","forEach","property","toLowerCase","includes","Object","keys","key","applyFilters","paginatedCustomers","slice","applyPagination","Card","Box","sx","alignItems","display","flexWrap","m","p","maxWidth","width","TextField","fullWidth","InputProps","startAdornment","InputAdornment","position","Search","fontSize","onChange","event","target","placeholder","variant","name","select","SelectProps","native","option","Scrollbar","minWidth","Table","TableHead","TableRow","TableCell","align","TableBody","isCustomerSelected","id","hover","selected","Avatar","src","image","height","getInitials","ml","Link","color","component","RouterLink","to","Typography","lastname","status_id","email","username","Button","onClick","updateStatusDriver","then","toast","success","catch","err","error","console","log","TablePagination","count","length","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","tabs","DriverList","mounted","useMounted","settings","useSettings","currentTab","setCurrentTab","setCustomers","inactivos","setInactivos","solicitudes","setSolicitudes","useEffect","gtm","push","getCustomers","useCallback","getAllUsers","res","solicitudesNew","allACT","element","role_id","backgroundColor","minHeight","py","Container","compact","Grid","container","justifyContent","spacing","item","Breadcrumbs","separator","ChevronRight","mt","mb","Tabs","indicatorColor","scrollButtons","textColor","tab","Tab","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","_jsx","BreadcrumbCollapsedButton","experimentalStyled","ButtonBase","skipSx","theme","_extends","marginLeft","marginRight","palette","mode","grey","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","BreadcrumbCollapsed","styleProps","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","BreadcrumbsRoot","overridesResolver","styles","li","root","BreadcrumbsOl","ol","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","concat","React","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","child","clsx","focusable","querySelector","focus","renderItemsBeforeAndAfter","getInputAdornmentUtilityClass","inputAdornmentClasses","InputAdornmentRoot","deepmerge","capitalize","disablePointerEvents","maxHeight","whiteSpace","action","active","positionStart","hiddenLabel","marginTop","pointerEvents","disableTypography","variantProp","muiFormControl","useFormControl","size","slots","FormControlContext","Provider","as","_jsxs","dangerouslySetInnerHTML","__html","cfg","EndpointConfig","axios","create","baseURL","URL_DEV","headers","headerToken","this","ws","get","data","endpoint","body","put"],"mappings":"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","file":"static/js/38.6758626f.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// import numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport {\n  Avatar,\n  Box,\n  // Button,\n  Card,\n  // Checkbox,\n  // Divider,\n  Button,\n  InputAdornment,\n  Link,\n  // Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  // Tabs,\n  TextField,\n  Typography\n} from '@material-ui/core';\n// import ArrowRightIcon from '../../../icons/ArrowRight';\n// import PencilAltIcon from '../../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport getInitials from '../../../utils/getInitials';\nimport Scrollbar from '../../Scrollbar';\nimport DriversRepository from '../../../repositories/drivers.repository';\n\n// const tabs = [\n//   {\n//     label: 'All',\n//     value: 'all'\n//   },\n//   {\n//     label: 'Accepts Marketing',\n//     value: 'hasAcceptedMarketing'\n//   },\n//   {\n//     label: 'Prospect',\n//     value: 'isProspect'\n//   },\n//   {\n//     label: 'Returning',\n//     value: 'isReturning'\n//   }\n// ];\n\nconst sortOptions = [\n  {\n    label: 'Más recientes',\n    value: 'updatedAt|desc'\n  },\n  {\n    label: 'Menos recientes',\n    value: 'updatedAt|asc'\n  },\n  {\n    label: 'Total',\n    value: 'orders|desc'\n  },\n  {\n    label: 'Total',\n    value: 'orders|asc'\n  }\n];\n\nconst applyFilters = (customers, query, filters) => customers\n  .filter((customer) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['brand_name', 'client_name', 'model_name', 'tag'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && customer[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n\nconst applyPagination = (customers, page, limit) => customers\n  .slice(page * limit, page * limit + limit);\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => (order === 'desc'\n  ? (a, b) => descendingComparator(a, b, orderBy)\n  : (a, b) => -descendingComparator(a, b, orderBy));\n\nconst applySort = (customers, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst DriverListTable = (props) => {\n  const { customers, ...other } = props;\n  // const [currentTab, setCurrentTab] = useState('all');\n  // const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const selectedCustomers = [];\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [query, setQuery] = useState('');\n  const driversRepository = new DriversRepository();\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const acceptDriver = (id) => {\n    const body = {\n      status_id: 'ACT'\n    };\n    driversRepository.updateStatusDriver(id, body).then(() => {\n      toast.success('Driver aceptado!');\n    }).catch((err) => {\n      toast.error('Ha ocurrido un error!');\n      console.log(err);\n    });\n  };\n\n  // const handleTabsChange = (event, value) => {\n  //   const updatedFilters = {\n  //     ...filters,\n  //     hasAcceptedMarketing: null,\n  //     isProspect: null,\n  //     isReturning: null\n  //   };\n\n  //   if (value !== 'all') {\n  //     updatedFilters[value] = true;\n  //   }\n\n  //   setFilters(updatedFilters);\n  //   setSelectedCustomers([]);\n  //   setCurrentTab(value);\n  // };\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  // const handleSelectAllCustomers = (event) => {\n  //   setSelectedCustomers(event.target.checked\n  //     ? customers.map((customer) => customer.id)\n  //     : []);\n  // };\n\n  // const handleSelectOneCustomer = (event, customerId) => {\n  //   if (!selectedCustomers.includes(customerId)) {\n  //     setSelectedCustomers((prevSelected) => [...prevSelected, customerId]);\n  //   } else {\n  //     setSelectedCustomers((prevSelected) => prevSelected.filter((id) => id !== customerId));\n  //   }\n  // };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const filteredCustomers = applyFilters(customers, query, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  // const enableBulkActions = selectedCustomers.length > 0;\n  // const selectedSomeCustomers = selectedCustomers.length > 0\n  // && selectedCustomers.length < customers.length;\n  // const selectedAllCustomers = selectedCustomers.length === customers.length;\n\n  return (\n    <Card {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Buscar...\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            width: 240\n          }}\n        >\n          <TextField\n            label=\"Ordenar Por\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {/* {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              position: 'absolute',\n              px: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllCustomers}\n              color=\"primary\"\n              indeterminate={selectedSomeCustomers}\n              onChange={handleSelectAllCustomers}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )} */}\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {/* <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllCustomers}\n                    color=\"primary\"\n                    indeterminate={selectedSomeCustomers}\n                    onChange={handleSelectAllCustomers}\n                  />\n                </TableCell> */}\n                <TableCell>\n                  Nombre\n                </TableCell>\n                <TableCell>\n                  Estado\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n                <TableCell>\n                  Username\n                </TableCell>\n                <TableCell align=\"right\">\n                  Acciones\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => {\n                const isCustomerSelected = selectedCustomers.includes(customer.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={customer.id}\n                    selected={isCustomerSelected}\n                  >\n                    {/* <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isCustomerSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneCustomer(event, customer.id)}\n                        value={isCustomerSelected}\n                      />\n                    </TableCell> */}\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Avatar\n                          src={customer.image}\n                          sx={{\n                            height: 42,\n                            width: 42\n                          }}\n                        >\n                          {getInitials(customer.name)}\n                        </Avatar>\n                        <Box sx={{ ml: 1 }}>\n                          <Link\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to={`/dashboard/taller/vehiculos/detalles/${customer.id}`}\n                            variant=\"subtitle2\"\n                          >\n                            {customer.name}\n                          </Link>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"body2\"\n                          >\n                            {customer.lastname}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.status_id}`}\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.email}`}\n                    </TableCell>\n                    <TableCell>\n                      {customer.username}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {/* <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/customers/1/edit\"\n                      >\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton> */}\n                      {customer.status_id === 'REV'\n                      && (\n                      // <IconButton\n                      //   component={RouterLink}\n                      //   to={`/dashboard/drivers/detail/${customer.id}`}\n                      // >\n                      //   <ArrowRightIcon fontSize=\"small\" />\n                      // </IconButton>\n                      <Button\n                        color=\"primary\"\n                        // startIcon={<PlusIcon fontSize=\"small\" />}\n                        sx={{ m: 1 }}\n                        component={RouterLink}\n                        variant=\"contained\"\n                        to=\"/dashboard/drivers\"\n                        onClick={() => { acceptDriver(customer.id); }}\n                      >\n                        Aceptar Driver\n                      </Button>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredCustomers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nDriverListTable.propTypes = {\n  customers: PropTypes.array.isRequired\n};\n\nexport default DriverListTable;\n","import { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Container, Grid, Link, Typography, Tab, Tabs, } from '@material-ui/core';\n// import { customerApi } from '../../__fakeApi__/customerApi';\n// import { VehiclesListTable } from '../../../components/dashboard/concessionaire';\nimport useMounted from '../../../hooks/useMounted';\nimport ChevronRightIcon from '../../../icons/ChevronRight';\n// import DownloadIcon from '../../../icons/Download';\n// import PlusIcon from '../../../icons/Plus';\n// import UploadIcon from '../../../icons/Upload';\nimport useSettings from '../../../hooks/useSettings';\nimport gtm from '../../../lib/gtm';\nimport DriverListTable from '../../../components/dashboard/driver/DriverListTable';\n// import useAuth from '../../../hooks/useAuth';\n// import avatar from '../../../assets/images/Mac/logo.jpg';\nimport DriversRepository from '../../../repositories/drivers.repository';\n\nconst tabs = [\n  {\n    label: 'Activos',\n    value: 'activos'\n  },\n  {\n    label: 'Inactivos',\n    value: 'inactivos'\n  },\n  {\n    label: 'Solicitudes',\n    value: 'solicitudes'\n  }\n];\n\nconst DriverList = () => {\n  const mounted = useMounted();\n  const driversRepository = new DriversRepository();\n  const { settings } = useSettings();\n  const [currentTab, setCurrentTab] = useState('activos');\n  const [customers, setCustomers] = useState([]);\n  const [inactivos, setInactivos] = useState([]);\n  const [solicitudes, setSolicitudes] = useState([]);\n  // const { user } = useAuth();\n  // const navigate = useNavigate();\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  // const getActives = () => {\n  //   setCustomers(['drivers activos']);\n  //   console.log('drivers activos');\n  // };\n\n  // const getInactives = () => {\n  //   console.log('drivers inactivos');\n  //   setInactivos(['drivers inactivos']);\n  // };\n\n  useEffect(() => {\n    // getActives();\n    // getInactives();\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getCustomers = useCallback(async () => {\n    try {\n      // const data = await customerApi.getCustomers();\n\n      // if (mounted.current) {\n      //   setCustomers(data);\n      // }\n      driversRepository.getAllUsers().then((res) => {\n        const solicitudesNew = [];\n        const allACT = [];\n        res.forEach((element) => {\n          if (element.role_id === 'DRV' && element.status_id === 'REV') {\n            solicitudesNew.push(element);\n          } else if (element.role_id === 'DRV' && element.status_id === 'ACT') {\n            allACT.push(element);\n          }\n        });\n        console.log('SOLICITUDES', solicitudesNew);\n        setCustomers(allACT);\n        setSolicitudes(solicitudesNew);\n      });\n      setInactivos([]);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getCustomers();\n  }, [getCustomers]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Drivers | Mac Admin</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Lista de Drivers\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Lista de Drivers\n                </Typography>\n              </Breadcrumbs>\n              {/* <Box\n                sx={{\n                  mb: -1,\n                  mx: -1,\n                  mt: 1\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  startIcon={<UploadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                >\n                  Import\n                </Button>\n                <Button\n                  color=\"primary\"\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                >\n                  Export\n                </Button>\n              </Box> */}\n            </Grid>\n            {/* <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  startIcon={<PlusIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  component={RouterLink}\n                  variant=\"contained\"\n                  to=\"/dashboard/drivers/crear\"\n                >\n                  Agregar Driver\n                </Button>\n              </Box>\n            </Grid> */}\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <Box sx={{ mb: 3 }}>\n              <Tabs\n                indicatorColor=\"primary\"\n                onChange={handleTabsChange}\n                scrollButtons=\"auto\"\n                textColor=\"primary\"\n                value={currentTab}\n                variant=\"scrollable\"\n              >\n                {tabs.map((tab) => (\n                  <Tab\n                    key={tab.value}\n                    label={tab.label}\n                    value={tab.value}\n                  />\n                ))}\n              </Tabs>\n            </Box>\n            {currentTab === 'activos' && (\n              <DriverListTable customers={customers} />\n            )}\n            {currentTab === 'inactivos' && (\n              <DriverListTable customers={inactivos} />\n            )}\n            {currentTab === 'solicitudes' && (\n              <DriverListTable customers={solicitudes} />\n            )}\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\n/* eslint-disable eol-last */\nexport default DriverList;","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Search = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search'\n);\n\nexport default Search;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = experimentalStyled(ButtonBase, {}, {\n  skipSx: true\n})(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: theme.spacing(0.5),\n  marginRight: theme.spacing(0.5)\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = experimentalStyled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const styleProps = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      styleProps: styleProps,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        styleProps: styleProps\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = experimentalStyled(Typography, {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return _extends({\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root);\n  }\n})({});\nconst BreadcrumbsOl = experimentalStyled('ol', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = experimentalStyled('li', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, styleProps) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        styleProps: styleProps,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const styleProps = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      styleProps: styleProps,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, styleProps)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Breadcrumbs;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`position${capitalize(styleProps.position)}`], styleProps.disablePointerEvents === true && styles.disablePointerEvents, styles[styleProps.variant]), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = experimentalStyled('div', {}, {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, styleProps.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, styleProps.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, styleProps.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, styleProps.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const styleProps = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      styleProps: styleProps,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import axios from 'axios';\nimport { EndpointConfig } from '../config/config';\n\nexport default class DriversRepository {\n  // Definir el cliente Axios para consumir el servicio\n  get ws() {\n    const cfg = new EndpointConfig();\n    const ws = axios.create({\n      baseURL: cfg.URL_DEV,\n      headers: cfg.headerToken(),\n    });\n    return ws;\n  }\n\n  async getAllDrivers() {\n    const endpoint = '/drivers';\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async getAllUsers() {\n    const endpoint = '/users';\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async getDriverById(id) {\n    const endpoint = `/drivers/${id}`;\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async getUserById(id) {\n    const endpoint = `/users/${id}`;\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async updateStatusDriver(id, body) {\n    const endpoint = `/users/${id}`;\n    const res = await this.ws.put(endpoint, body);\n    return res;\n  }\n}\n"],"sourceRoot":""}