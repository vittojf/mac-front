{"version":3,"sources":["components/authentication/password-reset/PasswordResetAmplify.js","pages/authentication/PasswordReset.js","components/authentication/AuthBanner.js"],"names":["PasswordResetAmplify","mounted","useMounted","passwordReset","useAuth","location","useLocation","navigate","useNavigate","itemsRef","useRef","useEffect","current","slice","initialValues","code","email","state","username","password","passwordConfirm","submit","validationSchema","Yup","shape","of","required","max","min","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","join","console","error","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","noValidate","TextField","disabled","fullWidth","margin","value","variant","autoFocus","Boolean","helperText","label","name","onBlur","onChange","type","Typography","color","sx","mb","mt","Box","columnGap","display","gridTemplateColumns","py","map","ref","i","Array","isArray","length","inputRef","el","onKeyDown","event","focus","Number","isInteger","parseInt","key","onPaste","pasteArray","clipboardData","getData","split","valid","forEach","x","textAlign","FormHelperText","mx","find","undefined","Button","size","platformIcons","Amplify","Auth0","Firebase","JWT","PasswordReset","platform","gtm","push","backgroundColor","flexDirection","minHeight","AuthBanner","Container","maxWidth","justifyContent","to","Logo","height","width","Card","CardContent","p","alignItems","gutterBottom","maxHeight","alt","src","flexGrow","Divider","my","Link","component","RouterLink","borderBottom","borderColor","ml","title"],"mappings":"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","file":"static/js/55.458ba0d5.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, FormHelperText, TextField, Typography } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\n\nconst PasswordResetAmplify = () => {\n  const mounted = useMounted();\n  const { passwordReset } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const itemsRef = useRef([]);\n\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, 6);\n  }, []);\n\n  return (\n    <Formik\n      initialValues={{\n        code: ['', '', '', '', '', ''],\n        email: location.state?.username || '',\n        password: '',\n        passwordConfirm: '',\n        submit: null\n      }}\n      validationSchema={\n        Yup\n          .object()\n          .shape({\n            code: Yup\n              .array()\n              .of(Yup.string().required('Code is required')),\n            email: Yup\n              .string()\n              .email('Must be a valid email')\n              .max(255)\n              .required('Email is required'),\n            password: Yup\n              .string()\n              .min(7, 'Must be at least 7 characters')\n              .max(255)\n              .required('Required'),\n            passwordConfirm: Yup\n              .string()\n              .oneOf([Yup.ref('password'), null], 'Passwords must match')\n              .required('Required')\n          })\n      }\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await passwordReset(values.email, values.code.join(''), values.password);\n\n          navigate('/authentication/login');\n        } catch (err) {\n          console.error(err);\n          if (mounted.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n        >\n          {!location.state?.username\n            ? (\n              <TextField\n                autoFocus\n                error={Boolean(touched.email && errors.email)}\n                fullWidth\n                helperText={touched.email && errors.email}\n                label=\"Email Address\"\n                margin=\"normal\"\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"email\"\n                value={values.email}\n                variant=\"outlined\"\n              />\n            )\n            : (\n              <TextField\n                disabled\n                fullWidth\n                margin=\"normal\"\n                value={location.state.username}\n                variant=\"outlined\"\n              />\n            )}\n          <Typography\n            color=\"textSecondary\"\n            sx={{\n              mb: 2,\n              mt: 3\n            }}\n            variant=\"subtitle2\"\n          >\n            Verification code\n          </Typography>\n          <Box\n            sx={{\n              columnGap: '16px',\n              display: 'grid',\n              gridTemplateColumns: 'repeat(7, 1fr)',\n              py: 1\n            }}\n          >\n            {[1, 2, 3, 4, 5, 6].map((ref, i) => (\n              <TextField\n                error={Boolean(Array.isArray(touched.code)\n                  && touched.code.length === 6\n                  && errors.code)}\n                fullWidth\n                inputRef={(el) => itemsRef.current[i] = el}\n                // eslint-disable-next-line react/no-array-index-key\n                key={`codeNumber-${i}`}\n                name={`code[${i}]`}\n                onBlur={handleBlur}\n                onKeyDown={(event) => {\n                  if (event.code === 'ENTER') {\n                    if (values.code[i]) {\n                      setFieldValue(`code[${i}]`, '');\n                      return;\n                    }\n\n                    if (i > 0) {\n                      setFieldValue(`code[${i}]`, '');\n                      itemsRef.current[i - 1].focus();\n                      return;\n                    }\n                  }\n\n                  if (Number.isInteger(parseInt(event.key, 10))) {\n                    setFieldValue(`code[${i}]`, event.key);\n\n                    if (i < 5) {\n                      itemsRef.current[i + 1].focus();\n                    }\n                  }\n                }}\n                onPaste={(event) => {\n                  const paste = event.clipboardData.getData('text');\n                  const pasteArray = paste.split('');\n\n                  if (pasteArray.length !== 6) {\n                    return;\n                  }\n\n                  let valid = true;\n\n                  pasteArray.forEach((x) => {\n                    if (!Number.isInteger(parseInt(x, 10))) {\n                      valid = false;\n                    }\n                  });\n\n                  if (valid) {\n                    setFieldValue('code', pasteArray);\n                    itemsRef.current[5].focus();\n                  }\n                }}\n                value={values.code[i]}\n                sx={{\n                  display: 'inline-block',\n                  textAlign: 'center',\n                  '& .MuiInputBase-input': {\n                    textAlign: 'center'\n                  }\n                }}\n                variant=\"outlined\"\n              />\n            ))}\n          </Box>\n          {Boolean(Array.isArray(touched.code) && touched.code.length === 6 && errors.code) && (\n            <FormHelperText\n              error\n              sx={{ mx: '14px' }}\n            >\n              {Array.isArray(errors.code) && errors.code.find((x) => x !== undefined)}\n            </FormHelperText>\n          )}\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n            fullWidth\n            helperText={touched.passwordConfirm && errors.passwordConfirm}\n            label=\"Password Confirmation\"\n            margin=\"normal\"\n            name=\"passwordConfirm\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.passwordConfirm}\n            variant=\"outlined\"\n          />\n          {errors.submit && (\n            <Box sx={{ mt: 3 }}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box sx={{ mt: 3 }}>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Reset Password\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default PasswordResetAmplify;\n","import { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Card, CardContent, Container, Divider, Link, Typography } from '@material-ui/core';\nimport AuthBanner from '../../components/authentication/AuthBanner';\nimport { PasswordResetAmplify } from '../../components/authentication/password-reset';\nimport Logo from '../../components/Logo';\nimport useAuth from '../../hooks/useAuth';\nimport gtm from '../../lib/gtm';\n\nconst platformIcons = {\n  Amplify: '/static/icons/amplify.svg',\n  Auth0: '/static/icons/auth0.svg',\n  Firebase: '/static/icons/firebase.svg',\n  JWT: '/static/icons/jwt.svg'\n};\n\nconst PasswordReset = () => {\n  const { platform } = useAuth();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Password Reset | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          minHeight: '100vh'\n        }}\n      >\n        <AuthBanner />\n        <Container\n          maxWidth=\"sm\"\n          sx={{ py: 10 }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center'\n            }}\n          >\n            <RouterLink to=\"/\">\n              <Logo\n                sx={{\n                  height: 40,\n                  width: 40\n                }}\n              />\n            </RouterLink>\n          </Box>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 8\n            }}\n          />\n          <Card>\n            <CardContent\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                p: 4\n              }}\n            >\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 3\n                }}\n              >\n                <div>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                  >\n                    Password Reset\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Reset your account password using your code\n                  </Typography>\n                </div>\n                <Box\n                  sx={{\n                    height: 32,\n                    '& > img': {\n                      maxHeight: '100%',\n                      width: 'auto'\n                    }\n                  }}\n                >\n                  <img\n                    alt=\"Auth platform\"\n                    src={platformIcons[platform]}\n                  />\n                </Box>\n              </Box>\n              <Box\n                sx={{\n                  flexGrow: 1,\n                  mt: 3\n                }}\n              >\n                {platform === 'Amplify' && <PasswordResetAmplify />}\n              </Box>\n              <Divider sx={{ my: 3 }} />\n              {platform === 'Amplify' && (\n                <Link\n                  color=\"textSecondary\"\n                  component={RouterLink}\n                  to=\"/authentication/password-recovery\"\n                  variant=\"body2\"\n                >\n                  Did you not receive the code?\n                </Link>\n              )}\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default PasswordReset;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { Box, Chip, Container, Link, Tooltip, Typography } from '@material-ui/core';\n\nconst platformIcons = {\n  Amplify: '/static/icons/amplify.svg',\n  Auth0: '/static/icons/auth0.svg',\n  Firebase: '/static/icons/firebase.svg',\n  JWT: '/static/icons/jwt.svg'\n};\n\nconst AuthBanner = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.paper',\n      borderBottom: 1,\n      borderColor: 'divider',\n      py: 2\n    }}\n  >\n    <Container maxWidth=\"md\">\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          justifyContent: 'center'\n        }}\n      >\n        <Chip\n          color=\"primary\"\n          label=\"NEW\"\n          size=\"small\"\n        />\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            ml: 2,\n            '& > img': {\n              height: 30,\n              mx: 2\n            }\n          }}\n        >\n          <Typography\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            Visit our\n            {' '}\n            <Link\n              component={RouterLink}\n              to=\"/docs\"\n            >\n              docs\n            </Link>\n            {' '}\n            and find out how to switch between\n          </Typography>\n          <Tooltip title=\"Amplify\">\n            <img\n              alt=\"Amplify\"\n              src={platformIcons.Amplify}\n            />\n          </Tooltip>\n          <Tooltip title=\"Auth0\">\n            <img\n              alt=\"Auth0\"\n              src={platformIcons.Auth0}\n            />\n          </Tooltip>\n          <Tooltip title=\"Firebase\">\n            <img\n              alt=\"Firebase\"\n              src={platformIcons.Firebase}\n            />\n          </Tooltip>\n          <Tooltip title=\"JSON Web Token\">\n            <img\n              alt=\"JWT\"\n              src={platformIcons.JWT}\n            />\n          </Tooltip>\n        </Box>\n      </Box>\n    </Container>\n  </Box>\n);\n\nexport default AuthBanner;\n"],"sourceRoot":""}