{"version":3,"sources":["icons/ArrowRight.js","components/Label.js","icons/Download.js","icons/DotsHorizontal.js","icons/PencilAlt.js","icons/DocumentText.js","icons/Duplicate.js","components/MoreMenu.js","icons/Archive.js","icons/Trash.js","icons/X.js","icons/Check.js","repositories/client.repository.js","../node_modules/@material-ui/core/CardActions/cardActionsClasses.js","../node_modules/@material-ui/core/CardActions/CardActions.js","components/dashboard/order/OrderItems.js","components/dashboard/order/OrderListBulkActions.js","components/dashboard/order/OrderListTable.js","components/dashboard/order/OrderSummary.js"],"names":["ArrowRight","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","LabelRoot","experimentalStyled","theme","styleProps","backgroundColor","palette","color","main","contrastText","alignItems","borderRadius","shape","cursor","display","flexGrow","flexShrink","fontFamily","typography","fontSize","pxToRem","fontWeight","fontWeightMedium","justifyContent","letterSpacing","minWidth","paddingBottom","spacing","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","Label","props","children","other","Download","DotsHorizontal","PencilAlt","DocumentText","Duplicate","MoreMenu","anchorRef","useRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","current","anchorOrigin","horizontal","vertical","onClose","open","PaperProps","sx","maxWidth","width","transformOrigin","primary","memo","Archive","Trash","X","Check","ClientRepository","cfg","EndpointConfig","axios","create","baseURL","URL_DEV","headers","headerToken","a","this","ws","get","res","data","id","endpoint","body","put","post","delete","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardActionsRoot","name","overridesResolver","styles","_extends","root","disableSpacing","padding","marginLeft","CardActions","React","inProps","useThemeProps","className","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","OrderItems","orderItems","Card","CardHeader","Divider","Scrollbar","Box","Table","TableHead","TableRow","TableCell","TableBody","map","item","Typography","variant","quantity","billingCycle","numeral","unitAmount","format","currency","TablePagination","component","count","length","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","OrderListBulkActions","onDelete","onMarkPaid","onMarkUnpaid","selected","Drawer","anchor","elevation","p","Grid","container","md","xs","flexWrap","ml","Button","startIcon","defaultProps","getStatusLabel","paymentStatus","canceled","text","completed","pending","rejected","OrderListTable","orders","selectedOrders","setSelectedOrders","setPage","limit","setLimit","paginatedOrders","slice","applyPagination","enableBulkActions","selectedSomeOrders","selectedAllOrders","action","Checkbox","checked","indeterminate","onChange","event","target","order","align","isOrderSelected","includes","hover","indexOf","orderId","prevSelected","filter","value","Link","RouterLink","to","underline","number","createdAt","customer","email","paymentMethod","totalAmount","status","IconButton","newPage","parseInt","statusOptions","OrderSummary","clientRepository","setStatus","client","setClient","mounted","useMounted","getClient","useCallback","getClientById","client_id","console","log","error","useEffect","lastname","dni","direction","zipcode","created_at","split","coupon","final_price","TextField","fullWidth","select","SelectProps","native","option"],"mappings":"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","file":"static/js/5.ed73cd7b.chunk.js","sourcesContent":["import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst PencilAlt = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PencilAlt'\n);\n\nexport default PencilAlt;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DocumentText = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'DocumentText'\n);\n\nexport default DocumentText;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n\nexport default Duplicate;\n","import { useRef, useState, memo } from 'react';\nimport { ListItemIcon, ListItemText, Tooltip, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport ArchiveIcon from '../icons/Archive';\nimport DocumentTextIcon from '../icons/DocumentText';\nimport DotsHorizontalIcon from '../icons/DotsHorizontal';\nimport DownloadIcon from '../icons/Download';\nimport DuplicateIcon from '../icons/Duplicate';\n\nconst MoreMenu = (props) => {\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={anchorRef}\n          {...props}\n        >\n          <DotsHorizontalIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{\n          sx: {\n            maxWidth: '100%',\n            width: 256\n          }\n        }}\n        transformOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <DownloadIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DocumentTextIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DuplicateIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(MoreMenu);\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Archive = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Archive'\n);\n\nexport default Archive;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n\nexport default Trash;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst X = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'X'\n);\n\nexport default X;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Check = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Check'\n);\n\nexport default Check;\n","import axios from 'axios';\nimport { EndpointConfig } from '../config/config';\n\nexport default class ClientRepository {\n  // Definir el cliente Axios para consumir el servicio\n  get ws() {\n    const cfg = new EndpointConfig();\n    const ws = axios.create({\n      baseURL: cfg.URL_DEV,\n      headers: cfg.headerToken(),\n    });\n    return ws;\n  }\n\n  async getAllClients() {\n    const endpoint = '/clients';\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async getClientById(id) {\n    const endpoint = `/clients/${id}`;\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async updateClient(id, body) {\n    const endpoint = `/clients/${id}`;\n    const res = await this.ws.put(endpoint, body);\n    return res;\n  }\n\n  async createClient(body) {\n    const endpoint = '/clients';\n    const res = await this.ws.post(endpoint, body);\n    return res;\n  }\n\n  async removeClient(id) {\n    const endpoint = `/clients/${id}`;\n\n    const res = await this.ws.delete(endpoint);\n    return res;\n  }\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableSpacing\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, !styleProps.disableSpacing && styles.spacing);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !styleProps.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"disableSpacing\", \"className\"]);\n\n  const styleProps = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActions;","import PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport Scrollbar from '../../Scrollbar';\n\nconst OrderItems = (props) => {\n  const { orderItems, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Description\n                </TableCell>\n                <TableCell>\n                  Billing Cycle\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orderItems.map((item) => (\n                <TableRow key={item.id}>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      {item.quantity}\n                      {' '}\n                      x\n                      {' '}\n                      {item.name}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    {item.billingCycle}\n                  </TableCell>\n                  <TableCell>\n                    {numeral(item.unitAmount)\n                      .format(`${item.currency}0,0.00`)}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={orderItems.length}\n        onPageChange={() => { }}\n        onRowsPerPageChange={() => { }}\n        page={0}\n        rowsPerPage={5}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  orderItems: PropTypes.array.isRequired\n};\n\nexport default OrderItems;\n","import PropTypes from 'prop-types';\nimport { Box, Button, Drawer, Grid, Typography } from '@material-ui/core';\nimport CheckIcon from '../../../icons/Check';\nimport TrashIcon from '../../../icons/Trash';\nimport XIcon from '../../../icons/X';\n\nconst OrderListBulkActions = (props) => {\n  const { onDelete, onMarkPaid, onMarkUnpaid, open, selected, ...other } = props;\n\n  return (\n    <Drawer\n      anchor=\"bottom\"\n      open={open}\n      PaperProps={{ elevation: 1 }}\n      variant=\"persistent\"\n    >\n      <Box\n        sx={{ p: 2 }}\n        {...other}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            md={3}\n            sx={{\n              display: {\n                md: 'block',\n                xs: 'none'\n              }\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              variant=\"subtitle1\"\n            >\n              {selected.length}\n              {' '}\n              selected\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'center',\n                '& > * + *': {\n                  ml: 2\n                }\n              }}\n            >\n              <Button\n                color=\"primary\"\n                onClick={onMarkPaid}\n                startIcon={<CheckIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                Mark Paid\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={onMarkUnpaid}\n                startIcon={<XIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                Mark Unpaid\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={onDelete}\n                startIcon={<TrashIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                Delete\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Drawer>\n  );\n};\n\nOrderListBulkActions.propTypes = {\n  onDelete: PropTypes.func,\n  onMarkPaid: PropTypes.func,\n  onMarkUnpaid: PropTypes.func,\n  open: PropTypes.bool,\n  selected: PropTypes.array.isRequired\n};\n\nOrderListBulkActions.defaultProps = {\n  open: false\n};\n\nexport default OrderListBulkActions;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Checkbox,\n  Divider,\n  IconButton,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport Label from '../../Label';\nimport MoreMenu from '../../MoreMenu';\nimport Scrollbar from '../../Scrollbar';\nimport OrderListBulkActions from './OrderListBulkActions';\n\nconst getStatusLabel = (paymentStatus) => {\n  const map = {\n    canceled: {\n      color: 'error',\n      text: 'Canceled'\n    },\n    completed: {\n      color: 'success',\n      text: 'Completed'\n    },\n    pending: {\n      color: 'warning',\n      text: 'Pending'\n    },\n    rejected: {\n      color: 'error',\n      text: 'Rejected'\n    }\n  };\n\n  const { text, color } = map[paymentStatus];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyPagination = (orders, page, limit) => orders\n  .slice(page * limit, page * limit + limit);\n\nconst OrderListTable = (props) => {\n  const { orders, ...other } = props;\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n\n  const handleSelectAllOrders = (event) => {\n    setSelectedOrders(event.target.checked\n      ? orders.map((order) => order.id)\n      : []);\n  };\n\n  const handleSelectOneOrder = (event, orderId) => {\n    if (!selectedOrders.includes(orderId)) {\n      setSelectedOrders((prevSelected) => [...prevSelected, orderId]);\n    } else {\n      setSelectedOrders((prevSelected) => prevSelected.filter((id) => id !== orderId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const paginatedOrders = applyPagination(orders, page, limit);\n  const enableBulkActions = selectedOrders.length > 0;\n  const selectedSomeOrders = selectedOrders.length > 0 && selectedOrders.length < orders.length;\n  const selectedAllOrders = selectedOrders.length === orders.length;\n\n  return (\n    <>\n      <Card {...other}>\n        <CardHeader\n          action={<MoreMenu />}\n          title=\"Orders\"\n        />\n        <Divider />\n        <Scrollbar>\n          <Box sx={{ minWidth: 1150 }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedAllOrders}\n                      color=\"primary\"\n                      indeterminate={selectedSomeOrders}\n                      onChange={handleSelectAllOrders}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    Number\n                  </TableCell>\n                  <TableCell>\n                    Customer\n                  </TableCell>\n                  <TableCell>\n                    Method\n                  </TableCell>\n                  <TableCell>\n                    Total\n                  </TableCell>\n                  <TableCell>\n                    Status\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    Actions\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {paginatedOrders.map((order) => {\n                  const isOrderSelected = selectedOrders.includes(order.id);\n\n                  return (\n                    <TableRow\n                      hover\n                      key={order.id}\n                      selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isOrderSelected}\n                          color=\"primary\"\n                          onChange={(event) => handleSelectOneOrder(event, order.id)}\n                          value={isOrderSelected}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Link\n                          color=\"textPrimary\"\n                          component={RouterLink}\n                          to=\"/dashboard/orders/1\"\n                          underline=\"none\"\n                          variant=\"subtitle2\"\n                        >\n                          {order.number}\n                        </Link>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {format(order.createdAt, 'dd MMM yyyy | HH:mm')}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"subtitle2\"\n                        >\n                          {order.customer.name}\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {order.customer.email}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        {order.paymentMethod}\n                      </TableCell>\n                      <TableCell>\n                        {numeral(order.totalAmount).format(`${order.currency}0,0.00`)}\n                      </TableCell>\n                      <TableCell>\n                        {getStatusLabel(order.status)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <IconButton>\n                          <PencilAltIcon fontSize=\"small\" />\n                        </IconButton>\n                        <IconButton\n                          component={RouterLink}\n                          to=\"/dashboard/orders/1\"\n                        >\n                          <ArrowRightIcon fontSize=\"small\" />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Box>\n        </Scrollbar>\n        <TablePagination\n          component=\"div\"\n          count={orders.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </Card>\n      <OrderListBulkActions\n        open={enableBulkActions}\n        selected={selectedOrders}\n      />\n    </>\n  );\n};\n\nOrderListTable.propTypes = {\n  orders: PropTypes.array.isRequired\n};\n\nexport default OrderListTable;\n","import { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// import { format } from 'date-fns';\nimport numeral from 'numeral';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport ClientRepository from '../../../repositories/client.repository';\nimport useMounted from '../../../hooks/useMounted';\n\nconst statusOptions = ['Pending', 'Completed', 'Canceled', 'Rejected'];\n\nconst OrderSummary = (props) => {\n  const clientRepository = new ClientRepository();\n  const { order, ...other } = props;\n  const [status, setStatus] = useState(statusOptions[0]);\n  const [client, setClient] = useState(null);\n  const mounted = useMounted();\n\n  const handleChange = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const getClient = useCallback(async () => {\n    try {\n      const data = await clientRepository.getClientById(order.client_id);\n\n      if (data.status === 200 || data.status === '200') {\n        setClient(data.data);\n      }\n      console.log(data.data);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getClient();\n  }, [getClient]);\n\n  if (!client) {\n    return null;\n  }\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Client\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <div>\n                {`${client.name} ${client.lastname}`}\n              </div>\n              <div>\n                {client.dni}\n              </div>\n              <div>\n                {client.direction}\n              </div>\n              <div>\n                {client.zipcode}\n              </div>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                ID\n              </Typography>\n            </TableCell>\n            <TableCell>\n              #\n              {order.id}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Number\n              </Typography>\n            </TableCell>\n            <TableCell>\n              {order.id}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Date\n              </Typography>\n            </TableCell>\n            <TableCell>\n              {order.created_at.split('T')[0]}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Promotion Code\n              </Typography>\n            </TableCell>\n            <TableCell>\n              {order.coupon ? order.coupon : 'N/A'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Total Amount\n              </Typography>\n            </TableCell>\n            <TableCell>\n              {numeral(order.final_price)\n                .format(`${order.final_price}0,0.00`)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Status\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                name=\"option\"\n                onChange={handleChange}\n                select\n                SelectProps={{ native: true }}\n                value={status}\n                variant=\"outlined\"\n              >\n                {statusOptions.map((option) => (\n                  <option\n                    key={option}\n                    value={option}\n                  >\n                    {option}\n                  </option>\n                ))}\n              </TextField>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      <CardActions>\n        <Button\n          color=\"primary\"\n          startIcon={<ReceiptIcon fontSize=\"small\" />}\n          variant=\"text\"\n        >\n          Resend Invoice\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderSummary.propTypes = {\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderSummary;\n"],"sourceRoot":""}