{"version":3,"sources":["icons/ArrowRight.js","icons/Search.js","components/Label.js","icons/PencilAlt.js","icons/Duplicate.js","icons/X.js","utils/bytesToSize.js","components/FileDropzone.js","components/QuillEditor.js","components/dashboard/product/ProductCreateForm.js","icons/Image.js","components/dashboard/product/ProductListTable.js"],"names":["ArrowRight","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","Search","LabelRoot","experimentalStyled","theme","styleProps","backgroundColor","palette","color","main","contrastText","alignItems","borderRadius","shape","cursor","display","flexGrow","flexShrink","fontFamily","typography","fontSize","pxToRem","fontWeight","fontWeightMedium","justifyContent","letterSpacing","minWidth","paddingBottom","spacing","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","Label","props","children","other","PencilAlt","Duplicate","X","bytesToSize","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","FileDropzone","accept","files","disabled","maxFiles","getFilesFromEvent","maxSize","minSize","onDrop","noClick","noDrag","noDragEventsBubbling","noKeyboard","onRemove","onDropAccepted","onDropRejected","onFileDialogCancel","onRemoveAll","onUpload","preventDropOnDocument","useDropzone","getRootProps","getInputProps","isDragActive","sx","border","borderColor","flexWrap","outline","p","opacity","width","alt","src","variant","mt","underline","length","map","file","primary","name","primaryTypographyProps","secondary","size","title","edge","onClick","path","type","defaultProps","QuillEditorRoot","divider","borderStyle","flexDirection","borderLeft","borderRight","borderTop","stroke","text","background","paper","boxShadow","shadows","padding","borderBottom","body1","fontStyle","left","QuillEditor","categoryOptions","value","label","ProductCreateForm","navigate","useNavigate","useState","setFiles","handleDrop","newFiles","prevFiles","handleRemove","filter","_file","handleRemoveAll","initialValues","category","description","images","includesTaxes","isTaxable","price","productCode","productSku","salePrice","submit","validationSchema","Yup","max","required","min","onSubmit","values","a","setErrors","setStatus","setSubmitting","success","toast","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Grid","container","item","lg","md","xs","Card","CardContent","TextField","Boolean","fullWidth","helperText","onBlur","onChange","Typography","mb","placeholder","height","Box","FormHelperText","CardHeader","FormControlLabel","control","Checkbox","checked","select","SelectProps","native","Button","Image","availabilityOptions","sortOptions","getInventoryLabel","inventoryType","in_stock","limited","out_of_stock","ProductListTable","products","selectedProducts","setSelectedProducts","page","setPage","limit","setLimit","query","setQuery","sort","setSort","availability","inStock","isShippable","filters","setFilters","handleSelectAllProducts","event","target","product","id","filteredProducts","matches","toLowerCase","includes","isAvailable","applyFilters","paginatedProducts","slice","applyPagination","enableBulkActions","selectedSomeProducts","selectedAllProducts","m","maxWidth","InputProps","startAdornment","InputAdornment","position","option","prevFilters","categoryOption","availabilityOption","Switch","pl","pr","zIndex","indeterminate","ml","Scrollbar","Table","TableHead","TableRow","TableCell","align","TableBody","isProductSelected","hover","selected","productId","prevSelected","image","overflow","Link","component","RouterLink","to","quantity","variants","attributes","attr","numeral","format","currency","IconButton","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions"],"mappings":"4FAAA,mBAEMA,EAAaC,YACjB,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEC,SAAS,UACTC,EAAE,2IACFC,SAAS,cAEL,cAGKP,O,iCChBf,mBAEMQ,EAASP,YACb,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEC,SAAS,UACTC,EAAE,mHACFC,SAAS,cAEL,UAGKC,O,0FCbTC,EAAYC,YAAmB,OAAnBA,EAA4B,YAA4B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAChDC,EAAkBF,EAAMG,QAAQF,EAAWG,OAAOC,KAClDD,EAAQJ,EAAMG,QAAQF,EAAWG,OAAOE,aAE9C,MAAO,CACLC,WAAY,SACZL,kBACAM,aAAcR,EAAMS,MAAMD,aAC1BJ,QACAM,OAAQ,UACRC,QAAS,cACTC,SAAU,EACVC,WAAY,EACZC,WAAYd,EAAMe,WAAWD,WAC7BE,SAAUhB,EAAMe,WAAWE,QAAQ,IACnCC,WAAYlB,EAAMe,WAAWI,iBAC7BC,eAAgB,SAChBC,cAAe,GACfC,SAAU,GACVC,cAAevB,EAAMwB,QAAQ,IAC7BC,YAAazB,EAAMwB,QAAQ,GAC3BE,aAAc1B,EAAMwB,QAAQ,GAC5BG,WAAY3B,EAAMwB,QAAQ,IAC1BI,cAAe,YACfC,WAAY,aA8BDC,IA1BD,SAACC,GACb,MAAkDA,EAA1C3B,aAAR,MAAgB,UAAhB,EAA2B4B,EAAuBD,EAAvBC,SAAaC,EAAxC,YAAkDF,EAAlD,GAEM9B,EAAa,CAAEG,SAErB,OACE,cAACN,EAAD,yBACEG,WAAYA,GACRgC,GAFN,aAIGD,O,iCCzCP,mBAEME,EAAY5C,YAChB,sBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,UAKE,sBAAME,EAAE,kFACR,sBACED,SAAS,UACTC,EAAE,yFACFC,SAAS,eAEL,aAGKsC,O,iCCjBf,mBAEMC,EAAY7C,YAChB,sBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,UAKE,sBAAME,EAAE,oEACR,sBAAMA,EAAE,2DACF,aAGKwC,O,iCCbf,mBAEMC,EAAI9C,YACR,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEC,SAAS,UACTC,EAAE,qMACFC,SAAS,cAEL,KAGKwC,O,iCCFAC,IAbK,SAACC,GAAyB,IAAlBC,EAAiB,uDAAN,EACrC,GAAc,IAAVD,EACF,MAAO,UAGT,IAAME,EAAI,KACJC,EAAKF,EAAW,EAAI,EAAIA,EACxBG,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5DC,EAAIC,KAAKC,MAAMD,KAAKE,IAAIR,GAASM,KAAKE,IAAIN,IAEhD,MAAM,GAAN,OAAUO,YAAYT,EAAQM,KAAKI,IAAIR,EAAGG,IAAIM,QAAQR,IAAtD,YAA8DC,EAAMC,M,gcCOhEO,EAAe,SAACnB,GACpB,IACEoB,EAoBEpB,EApBFoB,OAEAC,GAkBErB,EAnBFsB,SAmBEtB,EAlBFqB,OAEAE,GAgBEvB,EAjBFwB,kBAiBExB,EAhBFuB,UACAE,EAeEzB,EAfFyB,QACAC,EAcE1B,EAdF0B,QAKAC,GASE3B,EAbF4B,QAaE5B,EAZF6B,OAYE7B,EAXF8B,qBAWE9B,EAVF+B,WAUE/B,EATF2B,QAIAK,GAKEhC,EARFiC,eAQEjC,EAPFkC,eAOElC,EANFmC,mBAMEnC,EALFgC,UACAI,EAIEpC,EAJFoC,YAGGlC,GACDF,EAHFqC,SAGErC,EAFFsC,sBAnBF,YAqBItC,EArBJ,IAyBA,EAAsDuC,YAAY,CAChEnB,SACAG,WACAE,UACAC,UACAC,WALMa,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAQrC,OACE,gDAASxC,GAAT,cACE,eAAC,IAAD,yBACEyC,GAAE,yBACAnE,WAAY,SACZoE,OAAQ,EACRnE,aAAc,EACdoE,YAAa,UACbjE,QAAS,OACTkE,SAAU,OACVzD,eAAgB,SAChB0D,QAAS,OACTC,EAAG,GACCN,GAAgB,CAClBvE,gBAAiB,gBACjB8E,QAAS,KAZX,IAcA,UAAW,CACT9E,gBAAiB,eACjBQ,OAAQ,UACRsE,QAAS,OAGTT,KArBN,cAuBE,qCAAWC,MACX,cAAC,IAAD,CACEE,GAAI,CACF,QAAS,CACPO,MAAO,MAHb,SAOE,qBACEC,IAAI,uBACJC,IAAI,wCAGR,eAAC,IAAD,CAAKT,GAAI,CAAEK,EAAG,GAAd,UACE,cAAC,IAAD,CACE3E,MAAM,cACNgF,QAAQ,KAFV,qCAIyB9B,GAAyB,IAAbA,EAAkB,GAAK,OAE5D,cAAC,IAAD,CAAKoB,GAAI,CAAEW,GAAI,GAAf,SACE,eAAC,IAAD,CACEjF,MAAM,cACNgF,QAAQ,QAFV,oCAIuB9B,GAAyB,IAAbA,EAAkB,GAAK,KACvD,IACD,cAAC,IAAD,CACElD,MAAM,UACNkF,UAAU,SAFZ,mBAMC,IAZH,6BAkBLlC,EAAMmC,OAAS,GACd,eAAC,IAAD,CAAKb,GAAI,CAAEW,GAAI,GAAf,UACE,cAAC,IAAD,UACGjC,EAAMoC,KAAI,SAACC,GAAD,OACT,eAAC,IAAD,CAEEf,GAAI,CACFC,OAAQ,EACRC,YAAa,UACbpE,aAAc,EACd,QAAS,CACP6E,GAAI,IAPV,UAWE,cAAC,IAAD,UACE,cAAC,IAAD,CAAerE,SAAS,YAE1B,cAAC,IAAD,CACE0E,QAASD,EAAKE,KACdC,uBAAwB,CACtBxF,MAAO,cACPgF,QAAS,aAEXS,UAAWxD,YAAYoD,EAAKK,QAE9B,cAAC,IAAD,CAASC,MAAM,SAAf,SACE,cAAC,IAAD,CACEC,KAAK,MACLC,QAAS,kBAAMlC,GAAYA,EAAS0B,IAFtC,SAIE,cAAC,IAAD,CAAOzE,SAAS,gBA1BfyE,EAAKS,WAgChB,cAAC,IAAD,CACExB,GAAI,CACF/D,QAAS,OACTS,eAAgB,WAChBiE,GAAI,GAJR,SAOE,cAAC,IAAD,CACEjF,MAAM,UACN6F,QAAS9B,EACT2B,KAAK,QACLK,KAAK,SACLf,QAAQ,OALV,kCAmDZlC,EAAakD,aAAe,CAC1BhD,MAAO,IAGMF,O,gVCpNTmD,EAAkBtG,aAAmB,SAACgC,GAAD,OACzC,cAAC,IAAD,eAAWA,MADWhC,EAErB,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACjB2E,OAAQ,EACRC,YAAa5E,EAAMG,QAAQmG,QAC3B9F,aAAcR,EAAMS,MAAMD,aAC1B+F,YAAa,QACb5F,QAAS,OACT6F,cAAe,SACf,wBAAyB,CACvB5B,YAAa5E,EAAMG,QAAQmG,QAC3BG,WAAY,OACZC,YAAa,OACbC,UAAW,OACX,2BAA4B,CAC1BvG,MAAOJ,EAAMG,QAAQuF,QAAQrF,MAE/B,+BAAgC,CAC9BD,MAAOJ,EAAMG,QAAQuF,QAAQrF,MAE/B,0BAA2B,CACzBD,MAAOJ,EAAMG,QAAQuF,QAAQrF,MAE/B,gCAAiC,CAC/BD,MAAOJ,EAAMG,QAAQuF,QAAQrF,MAE/B,iBAAkB,CAChBD,MAAOJ,EAAMG,QAAQuF,QAAQrF,KAC7B,eAAgB,CACduG,OAAQ5G,EAAMG,QAAQuF,QAAQrF,OAGlC,iBAAkB,CAChBD,MAAOJ,EAAMG,QAAQuF,QAAQrF,KAC7B,eAAgB,CACduG,OAAQ5G,EAAMG,QAAQuF,QAAQrF,OAGlC,qBAAsB,CACpB,eAAgB,CACduG,OAAQ5G,EAAMG,QAAQuF,QAAQrF,OAGlC,eAAgB,CACduG,OAAQ5G,EAAMG,QAAQ0G,KAAKnB,SAE7B,eAAgB,CACdtF,MAAOJ,EAAMG,QAAQ0G,KAAKnB,SAE5B,uBAAwB,CACtBxF,gBAAiBF,EAAMG,QAAQ2G,WAAWC,MAC1CpC,OAAQ,OACRnE,aAAcR,EAAMS,MAAMD,aAC1BwG,UAAWhH,EAAMiH,QAAQ,IACzBC,QAASlH,EAAMwB,QAAQ,KAG3B,0BAA2B,CACzB2F,aAAc,OACdvC,YAAa5E,EAAMG,QAAQmG,QAC3BG,WAAY,OACZC,YAAa,OACb9F,SAAU,EACV,eAAgB,CACdR,MAAOJ,EAAMG,QAAQ0G,KAAKnB,QAC1B5E,WAAYd,EAAMe,WAAWqG,MAAMtG,WACnCE,SAAUhB,EAAMe,WAAWqG,MAAMpG,SACjCkG,QAASlH,EAAMwB,QAAQ,GACvB,qBAAsB,CACpBpB,MAAOJ,EAAMG,QAAQ0G,KAAKhB,UAC1BwB,UAAW,SACXC,KAAMtH,EAAMwB,QAAQ,UAUb+F,EAJK,SAACxF,GAAD,OAClB,cAACsE,EAAD,eAAqBtE,KC5DjByF,EAAkB,CACtB,CACEC,MAAO,SACPC,MAAO,UAET,CACEA,MAAO,SACPD,MAAO,UAET,CACEC,MAAO,OACPD,MAAO,SAoTIE,EAhTW,SAAC5F,GACzB,IAAM6F,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAO1E,EAAP,KAAc2E,EAAd,KAEMC,EAAa,SAACC,GAClBF,GAAS,SAACG,GAAD,4BAAmBA,GAAnB,YAAiCD,QAGtCE,EAAe,SAAC1C,GACpBsC,GAAS,SAACG,GAAD,OAAeA,EAAUE,QAAO,SAACC,GAAD,OAAWA,EAAMnC,OACpDT,EAAKS,YAGPoC,EAAkB,WACtBP,EAAS,KAGX,OACE,cAAC,IAAD,CACEQ,cAAe,CACbC,SAAU,GACVC,YAAa,GACbC,OAAQ,GACRC,eAAe,EACfC,WAAW,EACXjD,KAAM,GACNkD,MAAO,GACPC,YAAa,GACbC,WAAY,GACZC,UAAW,GACXC,OAAQ,MAEVC,iBAAkBC,MAEf1I,MAAM,CACL+H,SAAUW,MAAaC,IAAI,KAC3BX,YAAaU,MAAaC,IAAI,KAC9BV,OAAQS,MACRR,cAAeQ,MAAWE,WAC1BT,UAAWO,MAAWE,WACtB1D,KAAMwD,MAAaC,IAAI,KAAKC,WAC5BR,MAAOM,MAAaG,IAAI,GAAGD,WAC3BP,YAAaK,MAAaC,IAAI,KAC9BL,WAAYI,MAAaC,IAAI,KAC7BJ,UAAWG,MAAaG,IAAI,KAEhCC,SAAQ,uCAAE,WAAOC,EAAP,sBAAAC,EAAA,sDAAiBC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,cAC/C,IAEED,EAAU,CAAEE,SAAS,IACrBD,GAAc,GACdE,IAAMD,QAAQ,oBACdjC,EAAS,uBACT,MAAOmC,GACPC,QAAQC,MAAMF,GACdD,IAAMG,MAAM,yBACZN,EAAU,CAAEE,SAAS,IACrBH,EAAU,CAAET,OAAQc,EAAIG,UACxBN,GAAc,GAZR,2CAAF,wDA5BV,SA4CG,gBACCO,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,cACAC,EAPD,EAOCA,QACAjB,EARD,EAQCA,OARD,OAUC,8CACED,SAAUe,GACNvI,GAFN,aAIE,eAAC2I,EAAA,EAAD,CACEC,WAAS,EACTnJ,QAAS,EAFX,UAIE,eAACkJ,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAJN,UAME,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEjB,MAAOkB,QAAQV,EAAQ9E,MAAQwE,EAAOxE,MACtCyF,WAAS,EACTC,WAAYZ,EAAQ9E,MAAQwE,EAAOxE,KACnC+B,MAAM,eACN/B,KAAK,OACL2F,OAAQlB,EACRmB,SAAUlB,EACV5C,MAAO+B,EAAO7D,KACdP,QAAQ,aAEV,cAACoG,EAAA,EAAD,CACEpL,MAAM,gBACNsE,GAAI,CACF+G,GAAI,EACJpG,GAAI,GAEND,QAAQ,YANV,yBAUA,cAAC,EAAD,CACEmG,SAAU,SAAC9D,GAAD,OAAW+C,EAAc,cAAe/C,IAClDiE,YAAY,kBACZhH,GAAI,CAAEiH,OAAQ,KACdlE,MAAO+B,EAAOf,cAEdgC,EAAQhC,aAAe0B,EAAO1B,aAC9B,cAACmD,EAAA,EAAD,CAAKlH,GAAI,CAAEW,GAAI,GAAf,SACE,cAACwG,EAAA,EAAD,CAAgB5B,OAAK,EAArB,SACGE,EAAO1B,qBAMlB,cAACmD,EAAA,EAAD,CAAKlH,GAAI,CAAEW,GAAI,GAAf,SACE,eAAC2F,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CAAY/F,MAAM,kBAClB,cAACkF,EAAA,EAAD,UACE,cAAC/H,EAAA,EAAD,CACEC,OAAO,UACPC,MAAOA,EACPM,OAAQsE,EACRjE,SAAUoE,EACVhE,YAAamE,WAKrB,cAACsD,EAAA,EAAD,CAAKlH,GAAI,CAAEW,GAAI,GAAf,SACE,eAAC2F,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CAAY/F,MAAM,WAClB,eAACkF,EAAA,EAAD,WACE,eAACP,EAAA,EAAD,CACEC,WAAS,EACTnJ,QAAS,EAFX,UAIE,cAACkJ,EAAA,EAAD,CACEE,MAAI,EACJE,GAAI,EACJC,GAAI,GAHN,SAKE,cAACG,EAAA,EAAD,CACEjB,MAAOkB,QAAQV,EAAQ5B,OAASsB,EAAOtB,OACvCuC,WAAS,EACTC,WAAYZ,EAAQ5B,OAASsB,EAAOtB,MAChCsB,EAAOtB,MACP,2DACJnB,MAAM,QACN/B,KAAK,QACL2F,OAAQlB,EACRmB,SAAUlB,EACVlE,KAAK,SACLsB,MAAO+B,EAAOX,MACdzD,QAAQ,eAGZ,cAACsF,EAAA,EAAD,CACEE,MAAI,EACJE,GAAI,EACJC,GAAI,GAHN,SAKE,cAACG,EAAA,EAAD,CACEjB,MAAOkB,QAAQV,EAAQzB,WAAamB,EAAOnB,WAC3CoC,WAAS,EACTC,WAAYZ,EAAQzB,WAAamB,EAAOnB,UACxCtB,MAAM,aACN/B,KAAK,YACL2F,OAAQlB,EACRmB,SAAUlB,EACVlE,KAAK,SACLsB,MAAO+B,EAAOR,UACd5D,QAAQ,kBAId,cAACwG,EAAA,EAAD,CAAKlH,GAAI,CAAEW,GAAI,GAAf,SACE,cAAC0G,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAAS1C,EAAOZ,UAChBxI,MAAM,UACNuF,KAAK,YACL4F,SAAUlB,EACV5C,MAAO+B,EAAOZ,YAGlBlB,MAAM,yBAGV,cAACkE,EAAA,EAAD,CAAKlH,GAAI,CAAEW,GAAI,GAAf,SACE,cAAC0G,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAAS1C,EAAOb,cAChBvI,MAAM,UACNuF,KAAK,gBACL4F,SAAUlB,EACV5C,MAAO+B,EAAOb,gBAGlBjB,MAAM,sCAOlB,eAACgD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAJN,UAME,eAACC,EAAA,EAAD,WACE,cAACc,EAAA,EAAD,CAAY/F,MAAM,aAClB,eAACkF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEE,WAAS,EACT1D,MAAM,WACN/B,KAAK,WACL4F,SAAUlB,EACV8B,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvB5E,MAAO+B,EAAOhB,SACdpD,QAAQ,WARV,SAUGoC,EAAgBhC,KAAI,SAACgD,GAAD,OACnB,wBAEEf,MAAOe,EAASf,MAFlB,SAIGe,EAASd,OAHLc,EAASf,YAOpB,cAACmE,EAAA,EAAD,CAAKlH,GAAI,CAAEW,GAAI,GAAf,SACE,cAAC6F,EAAA,EAAD,CACEjB,MAAOkB,QAAQV,EAAQ3B,aAAeqB,EAAOrB,aAC7CsC,WAAS,EACTC,WAAYZ,EAAQ3B,aAAeqB,EAAOrB,YAC1CpB,MAAM,eACN/B,KAAK,cACL2F,OAAQlB,EACRmB,SAAUlB,EACV5C,MAAO+B,EAAOV,YACd1D,QAAQ,eAGZ,cAACwG,EAAA,EAAD,CAAKlH,GAAI,CAAEW,GAAI,GAAf,SACE,cAAC6F,EAAA,EAAD,CACEjB,MAAOkB,QAAQV,EAAQ1B,YAAcoB,EAAOpB,YAC5CqC,WAAS,EACTC,WAAYZ,EAAQ1B,YAAcoB,EAAOpB,WACzCrB,MAAM,cACN/B,KAAK,aACL2F,OAAQlB,EACRmB,SAAUlB,EACV5C,MAAO+B,EAAOT,WACd3D,QAAQ,qBAKf+E,EAAOlB,QACN,cAAC2C,EAAA,EAAD,CAAKlH,GAAI,CAAEW,GAAI,GAAf,SACE,cAACwG,EAAA,EAAD,CAAgB5B,OAAK,EAArB,SACGE,EAAOlB,WAId,cAAC2C,EAAA,EAAD,CACElH,GAAI,CACF/D,QAAS,OACTS,eAAgB,WAChBiE,GAAI,GAJR,SAOE,cAACiH,EAAA,EAAD,CACElM,MAAM,UACNiD,SAAUkH,EACVpE,KAAK,SACLf,QAAQ,YAJV,2C,mJCnTDmH,EAdDjN,YACZ,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEC,SAAS,UACTC,EAAE,6FACFC,SAAS,cAEL,S,qDCgBJ4H,GAAkB,CACtB,CACEE,MAAO,MACPD,MAAO,OAET,CACEC,MAAO,QACPD,MAAO,SAET,CACEC,MAAO,UACPD,MAAO,WAET,CACEC,MAAO,SACPD,MAAO,UAET,CACEC,MAAO,SACPD,MAAO,WAIL+E,GAAsB,CAC1B,CACE9E,MAAO,MACPD,MAAO,OAET,CACEC,MAAO,YACPD,MAAO,aAET,CACEC,MAAO,cACPD,MAAO,gBAILgF,GAAc,CAClB,CACE/E,MAAO,6BACPD,MAAO,kBAET,CACEC,MAAO,6BACPD,MAAO,iBAET,CACEC,MAAO,+BACPD,MAAO,kBAET,CACEC,MAAO,+BACPD,MAAO,kBAILiF,GAAoB,SAACC,GACzB,IAeA,EAfY,CACVC,SAAU,CACR/F,KAAM,WACNzG,MAAO,WAETyM,QAAS,CACPhG,KAAM,UACNzG,MAAO,WAET0M,aAAc,CACZjG,KAAM,eACNzG,MAAO,UAIiBuM,GAApB9F,EAAR,EAAQA,KAAMzG,EAAd,EAAcA,MAEd,OACE,cAAC0B,EAAA,EAAD,CAAO1B,MAAOA,EAAd,SACGyG,KA+dQkG,GAnbU,SAAChL,GACxB,IAAQiL,EAAuBjL,EAAvBiL,SAAa/K,EAArB,YAA+BF,EAA/B,IACA,EAAgD+F,mBAAS,IAAzD,mBAAOmF,EAAP,KAAyBC,EAAzB,KACA,EAAwBpF,mBAAS,GAAjC,mBAAOqF,EAAP,KAAaC,EAAb,KACA,EAA0BtF,mBAAS,IAAnC,mBAAOuF,EAAP,KAAcC,EAAd,KACA,EAA0BxF,mBAAS,IAAnC,mBAAOyF,EAAP,KAAcC,EAAd,KACA,EAAwB1F,mBAAS2E,GAAY,GAAGhF,OAAhD,mBAAOgG,EAAP,KAAaC,EAAb,KACA,EAA8B5F,mBAAS,CACrCU,SAAU,KACVmF,aAAc,KACdC,QAAS,KACTC,YAAa,OAJf,mBAAOC,EAAP,KAAgBC,GAAhB,KAmEMC,GAA0B,SAACC,GAC/Bf,EAAoBe,EAAMC,OAAOhC,QAC7Bc,EAASxH,KAAI,SAAC2I,GAAD,OAAaA,EAAQC,MAClC,KAoBAC,GAxIa,SAACrB,EAAUO,EAAOO,GAAlB,OAA8Bd,EAChD5E,QAAO,SAAC+F,GACP,IAAIG,GAAU,EA+Bd,OA7BIf,IAAUY,EAAQxI,KAAK4I,cAAcC,SAASjB,EAAMgB,iBACtDD,GAAU,GAGRR,EAAQtF,UAAY2F,EAAQ3F,WAAasF,EAAQtF,WACnD8F,GAAU,GAGRR,EAAQH,eACmB,cAAzBG,EAAQH,cAAiCQ,EAAQM,cACnDH,GAAU,GAGiB,gBAAzBR,EAAQH,cAAkCQ,EAAQM,cACpDH,GAAU,IAIVR,EAAQF,UAAY,CACtB,WACA,WACAY,SAASL,EAAQxB,iBACjB2B,GAAU,GAGRR,EAAQD,cAAgBM,EAAQN,cAClCS,GAAU,GAGLA,KAuGgBI,CAAa1B,EAAUO,EAAOO,GACjDa,GArGgB,SAAC3B,EAAUG,EAAME,GAAjB,OAA2BL,EAChD4B,MAAMzB,EAAOE,EAAOF,EAAOE,EAAQA,GAoGVwB,CAAgBR,GAAkBlB,EAAME,GAC5DyB,GAAoB7B,EAAiB1H,OAAS,EAC9CwJ,GAAuB9B,EAAiB1H,OAAS,GAClD0H,EAAiB1H,OAASyH,EAASzH,OAClCyJ,GAAsB/B,EAAiB1H,SAAWyH,EAASzH,OAEjE,OACE,eAACyF,EAAA,EAAD,2BAAU/I,GAAV,cACE,eAAC2J,EAAA,EAAD,CACElH,GAAI,CACFnE,WAAY,SACZI,QAAS,OACTkE,SAAU,OACVoK,GAAI,EACJlK,EAAG,GANP,UASE,cAAC6G,EAAA,EAAD,CACElH,GAAI,CACFuK,EAAG,EACHC,SAAU,OACVjK,MAAO,KAJX,SAOE,cAACiG,EAAA,EAAD,CACEE,WAAS,EACT+D,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACzP,EAAA,EAAD,CAAYmB,SAAS,aAI3BuK,SArHgB,SAAC0C,GACzBT,EAASS,EAAMC,OAAOzG,QAqHdiE,YAAY,kBACZjE,MAAO8F,EACPnI,QAAQ,eAGZ,cAACwG,EAAA,EAAD,CACElH,GAAI,CACFuK,EAAG,EACHC,SAAU,OACVjK,MAAO,KAJX,SAOE,cAACiG,EAAA,EAAD,CACExD,MAAM,UACN/B,KAAK,OACL4F,SA7Ee,SAAC0C,GACxBP,EAAQO,EAAMC,OAAOzG,QA6Eb0E,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvB5E,MAAOgG,EACPrI,QAAQ,WAPV,SASGqH,GAAYjH,KAAI,SAAC+J,GAAD,OACf,wBAEE9H,MAAO8H,EAAO9H,MAFhB,SAIG8H,EAAO7H,OAHH6H,EAAO9H,cAQpB,cAACmE,EAAA,EAAD,CACElH,GAAI,CACFuK,EAAG,EACHC,SAAU,OACVjK,MAAO,KAJX,SAOE,cAACiG,EAAA,EAAD,CACEE,WAAS,EACT1D,MAAM,WACN/B,KAAK,WACL4F,SA5JmB,SAAC0C,GAC5B,IAAIxG,EAAQ,KAEe,QAAvBwG,EAAMC,OAAOzG,QACfA,EAAQwG,EAAMC,OAAOzG,OAGvBsG,IAAW,SAACyB,GAAD,mBAAC,eACPA,GADM,IAEThH,SAAUf,QAoJJ0E,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvB5E,MAAOqG,EAAQtF,UAAY,MAC3BpD,QAAQ,WARV,SAUGoC,GAAgBhC,KAAI,SAACiK,GAAD,OACnB,wBAEEhI,MAAOgI,EAAehI,MAFxB,SAIGgI,EAAe/H,OAHX+H,EAAehI,cAQ5B,cAACmE,EAAA,EAAD,CACElH,GAAI,CACFuK,EAAG,EACHC,SAAU,OACVjK,MAAO,KAJX,SAOE,cAACiG,EAAA,EAAD,CACEE,WAAS,EACT1D,MAAM,eACN/B,KAAK,eACL4F,SA1KuB,SAAC0C,GAChC,IAAIxG,EAAQ,KAEe,QAAvBwG,EAAMC,OAAOzG,QACfA,EAAQwG,EAAMC,OAAOzG,OAGvBsG,IAAW,SAACyB,GAAD,mBAAC,eACPA,GADM,IAET7B,aAAclG,QAkKR0E,QAAM,EACNC,YAAa,CAAEC,QAAQ,GACvB5E,MAAOqG,EAAQH,cAAgB,MAC/BvI,QAAQ,WARV,SAUGoH,GAAoBhH,KAAI,SAACkK,GAAD,OACvB,wBAEEjI,MAAOiI,EAAmBjI,MAF5B,SAIGiI,EAAmBhI,OAHfgI,EAAmBjI,cAQhC,cAACmE,EAAA,EAAD,CAAKlH,GAAI,CAAEuK,EAAG,GAAd,SACE,cAAClD,EAAA,EAAD,CACEC,QACE,cAAC2D,EAAA,EAAD,CACEzD,UAAW4B,EAAQF,QACnBxN,MAAM,UACNuF,KAAK,UACL4F,SApLY,SAAC0C,GACzB,IAAIxG,EAAQ,KAERwG,EAAMC,OAAOhC,UACfzE,GAAQ,GAGVsG,IAAW,SAACyB,GAAD,mBAAC,eACPA,GADM,IAET5B,QAASnG,UA8KHC,MAAM,eAGV,cAACkE,EAAA,EAAD,CAAKlH,GAAI,CAAEuK,EAAG,GAAd,SACE,cAAClD,EAAA,EAAD,CACEC,QACE,cAAC2D,EAAA,EAAD,CACEzD,UAAW4B,EAAQD,YACnBzN,MAAM,UACNuF,KAAK,YACL4F,SApLgB,SAAC0C,GAC7B,IAAIxG,EAAQ,KAERwG,EAAMC,OAAOhC,UACfzE,GAAQ,GAGVsG,IAAW,SAACyB,GAAD,mBAAC,eACPA,GADM,IAET3B,YAAapG,UA8KPC,MAAM,mBAIXoH,IACC,cAAClD,EAAA,EAAD,CAAKlH,GAAI,CAAE4K,SAAU,YAArB,SACE,eAAC1D,EAAA,EAAD,CACElH,GAAI,CACFxE,gBAAiB,mBACjBmF,GAAI,MACJuK,GAAI,MACJN,SAAU,WACVO,GAAI,MACJ5K,MAAO,OACP6K,OAAQ,GARZ,UAWE,cAAC7D,EAAA,EAAD,CACEC,QAAS8C,GACT5O,MAAM,UACN2P,cAAehB,GACfxD,SAAUyC,KAEZ,cAAC1B,EAAA,EAAD,CACElM,MAAM,UACNsE,GAAI,CAAEsL,GAAI,GACV5K,QAAQ,WAHV,oBAOA,cAACkH,EAAA,EAAD,CACElM,MAAM,UACNsE,GAAI,CAAEsL,GAAI,GACV5K,QAAQ,WAHV,uBAUN,cAAC6K,GAAA,EAAD,UACE,eAACrE,EAAA,EAAD,CAAKlH,GAAI,CAAEpD,SAAU,MAArB,UACE,eAAC4O,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWnJ,QAAQ,WAAnB,SACE,cAAC+E,EAAA,EAAD,CACEC,QAAS8C,GACT5O,MAAM,UACN2P,cAAehB,GACfxD,SAAUyC,OAGd,cAACqC,EAAA,EAAD,mBAGA,cAACA,EAAA,EAAD,wBAGA,cAACA,EAAA,EAAD,sBAGA,cAACA,EAAA,EAAD,yBAGA,cAACA,EAAA,EAAD,oBAGA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,0BAKJ,cAACC,EAAA,EAAD,UACG5B,GAAkBnJ,KAAI,SAAC2I,GACtB,IAAMqC,EAAoBvD,EAAiBuB,SAASL,EAAQC,IAE5D,OACE,eAACgC,EAAA,EAAD,CACEK,OAAK,EAELC,SAAUF,EAHZ,UAKE,cAACH,EAAA,EAAD,CAAWnJ,QAAQ,WAAnB,SACE,cAAC+E,EAAA,EAAD,CACEC,QAASsE,EACTpQ,MAAM,UACNmL,SAAU,SAAC0C,GAAD,OAvPO0C,EAuPkCxC,EAAQC,QAtP1EnB,EAAiBuB,SAASmC,GAG7BzD,GAAoB,SAAC0D,GAAD,OAAkBA,EAAaxI,QAAO,SAACgG,GAAD,OAAQA,IAAOuC,QAFzEzD,GAAoB,SAAC0D,GAAD,4BAAsBA,GAAtB,CAAoCD,QAF7B,IAAQA,GAwPjBlJ,MAAO+I,MAGX,cAACH,EAAA,EAAD,UACE,eAACzE,EAAA,EAAD,CACElH,GAAI,CACFnE,WAAY,SACZI,QAAS,QAHb,UAMGwN,EAAQ0C,MAEL,cAACjF,EAAA,EAAD,CACElH,GAAI,CACFnE,WAAY,SACZL,gBAAiB,qBACjBS,QAAS,OACTgL,OAAQ,IACRvK,eAAgB,SAChB0P,SAAU,SACV7L,MAAO,IACP,QAAS,CACP0G,OAAQ,OACR1G,MAAO,SAXb,SAeE,qBACEC,IAAI,UACJC,IAAKgJ,EAAQ0C,UAKjB,cAACjF,EAAA,EAAD,CACElH,GAAI,CACFnE,WAAY,SACZL,gBAAiB,qBACjBS,QAAS,OACTgL,OAAQ,IACRvK,eAAgB,SAChB6D,MAAO,KAPX,SAUE,cAAC,EAAD,CAAWjE,SAAS,YAG1B,cAAC+P,EAAA,EAAD,CACE3Q,MAAM,cACN4Q,UAAWC,IACXC,GAAG,IACH5L,UAAU,OACVZ,GAAI,CAAEsL,GAAI,GACV5K,QAAQ,YANV,SAQG+I,EAAQxI,YAIf,cAAC0K,EAAA,EAAD,UACG3D,GAAkByB,EAAQxB,iBAE7B,eAAC0D,EAAA,EAAD,WACGlC,EAAQgD,SACR,IAFH,WAIGhD,EAAQiD,SAAW,GAAnB,cAA+BjD,EAAQiD,SAAvC,gBAEH,cAACf,EAAA,EAAD,UACGlC,EAAQkD,WAAW7L,KAAI,SAAC8L,GAAD,OAAUA,OAEpC,cAACjB,EAAA,EAAD,UACGkB,IAAQpD,EAAQtF,OACd2I,OADF,UACYrD,EAAQsD,SADpB,aAGH,eAACpB,EAAA,EAAD,CAAWC,MAAM,QAAjB,UACE,cAACoB,EAAA,EAAD,UACE,cAACxP,EAAA,EAAD,CAAelB,SAAS,YAE1B,cAAC0Q,EAAA,EAAD,UACE,cAACrS,EAAA,EAAD,CAAgB2B,SAAS,iBAxFxBmN,EAAQC,YAgGvB,cAACuD,EAAA,EAAD,CACEX,UAAU,MACVY,MAAOvD,GAAiB9I,OACxBsM,aA3Ue,SAAC5D,EAAO6D,GAC/B1E,EAAQ0E,IA2UAC,oBAxUgB,SAAC9D,GACzBX,EAAS0E,SAAS/D,EAAMC,OAAOzG,MAAO,MAwU9B0F,KAAMA,EACN8E,YAAa5E,EACb6E,mBAAoB,CAAC,EAAG,GAAI","file":"static/js/9.65cb0fb1.chunk.js","sourcesContent":["import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Search = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search'\n);\n\nexport default Search;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst PencilAlt = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PencilAlt'\n);\n\nexport default PencilAlt;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n\nexport default Duplicate;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst X = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'X'\n);\n\nexport default X;\n","/* eslint-disable no-restricted-properties */\nconst bytesToSize = (bytes, decimals = 2) => {\n  if (bytes === 0) {\n    return '0 Bytes';\n  }\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n\nexport default bytesToSize;\n","import PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Box,\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport DuplicateIcon from '../icons/Duplicate';\nimport XIcon from '../icons/X';\nimport bytesToSize from '../utils/bytesToSize';\n\nconst FileDropzone = (props) => {\n  const {\n    accept,\n    disabled,\n    files,\n    getFilesFromEvent,\n    maxFiles,\n    maxSize,\n    minSize,\n    noClick,\n    noDrag,\n    noDragEventsBubbling,\n    noKeyboard,\n    onDrop,\n    onDropAccepted,\n    onDropRejected,\n    onFileDialogCancel,\n    onRemove,\n    onRemoveAll,\n    onUpload,\n    preventDropOnDocument,\n    ...other\n  } = props;\n\n  // We did not add the remaining props to avoid component complexity\n  // but you can simply add it if you need to.\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop\n  });\n\n  return (\n    <div {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          border: 1,\n          borderRadius: 1,\n          borderColor: 'divider',\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          outline: 'none',\n          p: 6,\n          ...(isDragActive && {\n            backgroundColor: 'action.active',\n            opacity: 0.5\n          }),\n          '&:hover': {\n            backgroundColor: 'action.hover',\n            cursor: 'pointer',\n            opacity: 0.5\n          }\n        }}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <Box\n          sx={{\n            '& img': {\n              width: 100\n            }\n          }}\n        >\n          <img\n            alt=\"Seleccionar Archivos\"\n            src=\"/static/undraw_add_file2_gvbb.svg\"\n          />\n        </Box>\n        <Box sx={{ p: 2 }}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h6\"\n          >\n            {`Seleccione archivo${(maxFiles && maxFiles === 1) ? '' : 's'}`}\n          </Typography>\n          <Box sx={{ mt: 2 }}>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body1\"\n            >\n              {`Arrastre archivo${(maxFiles && maxFiles === 1) ? '' : 's'}`}\n              {' '}\n              <Link\n                color=\"primary\"\n                underline=\"always\"\n              >\n                desde\n              </Link>\n              {' '}\n              su computadora\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      {files.length > 0 && (\n        <Box sx={{ mt: 2 }}>\n          <List>\n            {files.map((file) => (\n              <ListItem\n                key={file.path}\n                sx={{\n                  border: 1,\n                  borderColor: 'divider',\n                  borderRadius: 1,\n                  '& + &': {\n                    mt: 1\n                  }\n                }}\n              >\n                <ListItemIcon>\n                  <DuplicateIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText\n                  primary={file.name}\n                  primaryTypographyProps={{\n                    color: 'textPrimary',\n                    variant: 'subtitle2'\n                  }}\n                  secondary={bytesToSize(file.size)}\n                />\n                <Tooltip title=\"Remove\">\n                  <IconButton\n                    edge=\"end\"\n                    onClick={() => onRemove && onRemove(file)}\n                  >\n                    <XIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n              </ListItem>\n            ))}\n          </List>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              mt: 2\n            }}\n          >\n            <Button\n              color=\"primary\"\n              onClick={onRemoveAll}\n              size=\"small\"\n              type=\"button\"\n              variant=\"text\"\n            >\n              Remove All\n            </Button>\n            {/* <Button\n              color=\"primary\"\n              onClick={onUpload}\n              size=\"small\"\n              sx={{ ml: 2 }}\n              type=\"button\"\n              variant=\"contained\"\n            >\n              Upload\n            </Button> */}\n          </Box>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nFileDropzone.propTypes = {\n  accept: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  disabled: PropTypes.bool,\n  files: PropTypes.array,\n  getFilesFromEvent: PropTypes.func,\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  noClick: PropTypes.bool,\n  noDrag: PropTypes.bool,\n  noDragEventsBubbling: PropTypes.bool,\n  noKeyboard: PropTypes.bool,\n  onDrop: PropTypes.func,\n  onDropAccepted: PropTypes.func,\n  onDropRejected: PropTypes.func,\n  onFileDialogCancel: PropTypes.func,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  onUpload: PropTypes.func,\n  preventDropOnDocument: PropTypes.bool\n};\n\nFileDropzone.defaultProps = {\n  files: []\n};\n\nexport default FileDropzone;\n","import Quill from 'react-quill';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst QuillEditorRoot = experimentalStyled((props) => (\n  <Quill {...props} />\n))(({ theme }) => ({\n  border: 1,\n  borderColor: theme.palette.divider,\n  borderRadius: theme.shape.borderRadius,\n  borderStyle: 'solid',\n  display: 'flex',\n  flexDirection: 'column',\n  '& .ql-snow.ql-toolbar': {\n    borderColor: theme.palette.divider,\n    borderLeft: 'none',\n    borderRight: 'none',\n    borderTop: 'none',\n    '& .ql-picker-label:hover': {\n      color: theme.palette.primary.main\n    },\n    '& .ql-picker-label.ql-active': {\n      color: theme.palette.primary.main\n    },\n    '& .ql-picker-item:hover': {\n      color: theme.palette.primary.main\n    },\n    '& .ql-picker-item.ql-selected': {\n      color: theme.palette.primary.main\n    },\n    '& button:hover': {\n      color: theme.palette.primary.main,\n      '& .ql-stroke': {\n        stroke: theme.palette.primary.main\n      }\n    },\n    '& button:focus': {\n      color: theme.palette.primary.main,\n      '& .ql-stroke': {\n        stroke: theme.palette.primary.main\n      }\n    },\n    '& button.ql-active': {\n      '& .ql-stroke': {\n        stroke: theme.palette.primary.main\n      }\n    },\n    '& .ql-stroke': {\n      stroke: theme.palette.text.primary\n    },\n    '& .ql-picker': {\n      color: theme.palette.text.primary\n    },\n    '& .ql-picker-options': {\n      backgroundColor: theme.palette.background.paper,\n      border: 'none',\n      borderRadius: theme.shape.borderRadius,\n      boxShadow: theme.shadows[10],\n      padding: theme.spacing(2)\n    }\n  },\n  '& .ql-snow.ql-container': {\n    borderBottom: 'none',\n    borderColor: theme.palette.divider,\n    borderLeft: 'none',\n    borderRight: 'none',\n    flexGrow: 1,\n    '& .ql-editor': {\n      color: theme.palette.text.primary,\n      fontFamily: theme.typography.body1.fontFamily,\n      fontSize: theme.typography.body1.fontSize,\n      padding: theme.spacing(2),\n      '&.ql-blank::before': {\n        color: theme.palette.text.secondary,\n        fontStyle: 'normal',\n        left: theme.spacing(2)\n      }\n    }\n  }\n}));\n\nconst QuillEditor = (props) => (\n  <QuillEditorRoot {...props} />\n);\n\nexport default QuillEditor;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport FileDropzone from '../../FileDropzone';\nimport QuillEditor from '../../QuillEditor';\n\nconst categoryOptions = [\n  {\n    value: 'shirts',\n    label: 'Shirts'\n  },\n  {\n    label: 'Phones',\n    value: 'phones'\n  },\n  {\n    label: 'Cars',\n    value: 'cars'\n  }\n];\n\nconst ProductCreateForm = (props) => {\n  const navigate = useNavigate();\n  const [files, setFiles] = useState([]);\n\n  const handleDrop = (newFiles) => {\n    setFiles((prevFiles) => [...prevFiles, ...newFiles]);\n  };\n\n  const handleRemove = (file) => {\n    setFiles((prevFiles) => prevFiles.filter((_file) => _file.path\n      !== file.path));\n  };\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        category: '',\n        description: '',\n        images: [],\n        includesTaxes: false,\n        isTaxable: false,\n        name: '',\n        price: '',\n        productCode: '',\n        productSku: '',\n        salePrice: '',\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          category: Yup.string().max(255),\n          description: Yup.string().max(5000),\n          images: Yup.array(),\n          includesTaxes: Yup.bool().required(),\n          isTaxable: Yup.bool().required(),\n          name: Yup.string().max(255).required(),\n          price: Yup.number().min(0).required(),\n          productCode: Yup.string().max(255),\n          productSku: Yup.string().max(255),\n          salePrice: Yup.number().min(0)\n        })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          // NOTE: Make API request\n          setStatus({ success: true });\n          setSubmitting(false);\n          toast.success('Product created!');\n          navigate('/dashboard/products');\n        } catch (err) {\n          console.error(err);\n          toast.error('Something went wrong!');\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          {...props}\n        >\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={8}\n              md={6}\n              xs={12}\n            >\n              <Card>\n                <CardContent>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Product Name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    sx={{\n                      mb: 2,\n                      mt: 3\n                    }}\n                    variant=\"subtitle2\"\n                  >\n                    Description\n                  </Typography>\n                  <QuillEditor\n                    onChange={(value) => setFieldValue('description', value)}\n                    placeholder=\"Write something\"\n                    sx={{ height: 400 }}\n                    value={values.description}\n                  />\n                  {(touched.description && errors.description) && (\n                    <Box sx={{ mt: 2 }}>\n                      <FormHelperText error>\n                        {errors.description}\n                      </FormHelperText>\n                    </Box>\n                  )}\n                </CardContent>\n              </Card>\n              <Box sx={{ mt: 3 }}>\n                <Card>\n                  <CardHeader title=\"Upload Images\" />\n                  <CardContent>\n                    <FileDropzone\n                      accept=\"image/*\"\n                      files={files}\n                      onDrop={handleDrop}\n                      onRemove={handleRemove}\n                      onRemoveAll={handleRemoveAll}\n                    />\n                  </CardContent>\n                </Card>\n              </Box>\n              <Box sx={{ mt: 3 }}>\n                <Card>\n                  <CardHeader title=\"Prices\" />\n                  <CardContent>\n                    <Grid\n                      container\n                      spacing={3}\n                    >\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          error={Boolean(touched.price && errors.price)}\n                          fullWidth\n                          helperText={touched.price && errors.price\n                            ? errors.price\n                            : 'If you have a sale price this will be shown as old price'}\n                          label=\"Price\"\n                          name=\"price\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          type=\"number\"\n                          value={values.price}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        md={6}\n                        xs={12}\n                      >\n                        <TextField\n                          error={Boolean(touched.salePrice && errors.salePrice)}\n                          fullWidth\n                          helperText={touched.salePrice && errors.salePrice}\n                          label=\"Sale price\"\n                          name=\"salePrice\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          type=\"number\"\n                          value={values.salePrice}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                    </Grid>\n                    <Box sx={{ mt: 2 }}>\n                      <FormControlLabel\n                        control={(\n                          <Checkbox\n                            checked={values.isTaxable}\n                            color=\"primary\"\n                            name=\"isTaxable\"\n                            onChange={handleChange}\n                            value={values.isTaxable}\n                          />\n                        )}\n                        label=\"Product is taxable\"\n                      />\n                    </Box>\n                    <Box sx={{ mt: 2 }}>\n                      <FormControlLabel\n                        control={(\n                          <Checkbox\n                            checked={values.includesTaxes}\n                            color=\"primary\"\n                            name=\"includesTaxes\"\n                            onChange={handleChange}\n                            value={values.includesTaxes}\n                          />\n                        )}\n                        label=\"Price includes taxes\"\n                      />\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Box>\n            </Grid>\n            <Grid\n              item\n              lg={4}\n              md={6}\n              xs={12}\n            >\n              <Card>\n                <CardHeader title=\"Organize\" />\n                <CardContent>\n                  <TextField\n                    fullWidth\n                    label=\"Category\"\n                    name=\"category\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.category}\n                    variant=\"outlined\"\n                  >\n                    {categoryOptions.map((category) => (\n                      <option\n                        key={category.value}\n                        value={category.value}\n                      >\n                        {category.label}\n                      </option>\n                    ))}\n                  </TextField>\n                  <Box sx={{ mt: 2 }}>\n                    <TextField\n                      error={Boolean(touched.productCode && errors.productCode)}\n                      fullWidth\n                      helperText={touched.productCode && errors.productCode}\n                      label=\"Product Code\"\n                      name=\"productCode\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.productCode}\n                      variant=\"outlined\"\n                    />\n                  </Box>\n                  <Box sx={{ mt: 2 }}>\n                    <TextField\n                      error={Boolean(touched.productSku && errors.productSku)}\n                      fullWidth\n                      helperText={touched.productSku && errors.productSku}\n                      label=\"Product Sku\"\n                      name=\"productSku\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.productSku}\n                      variant=\"outlined\"\n                    />\n                  </Box>\n                </CardContent>\n              </Card>\n              {errors.submit && (\n                <Box sx={{ mt: 3 }}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  mt: 3\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Create Product\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ProductCreateForm;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Image = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Image'\n);\n\nexport default Image;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  InputAdornment,\n  Link,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport ImageIcon from '../../../icons/Image';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport Label from '../../Label';\nimport Scrollbar from '../../Scrollbar';\n\nconst categoryOptions = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Dress',\n    value: 'dress'\n  },\n  {\n    label: 'Jewelry',\n    value: 'jewelry'\n  },\n  {\n    label: 'Blouse',\n    value: 'blouse'\n  },\n  {\n    label: 'Beauty',\n    value: 'beauty'\n  }\n];\n\nconst availabilityOptions = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Available',\n    value: 'available'\n  },\n  {\n    label: 'Unavailable',\n    value: 'unavailable'\n  }\n];\n\nconst sortOptions = [\n  {\n    label: 'Last update (newest first)',\n    value: 'updatedAt|desc'\n  },\n  {\n    label: 'Last update (oldest first)',\n    value: 'updatedAt|asc'\n  },\n  {\n    label: 'Creation date (newest first)',\n    value: 'createdAt|desc'\n  },\n  {\n    label: 'Creation date (oldest first)',\n    value: 'createdAt|asc'\n  }\n];\n\nconst getInventoryLabel = (inventoryType) => {\n  const map = {\n    in_stock: {\n      text: 'In Stock',\n      color: 'success'\n    },\n    limited: {\n      text: 'Limited',\n      color: 'warning'\n    },\n    out_of_stock: {\n      text: 'Out of Stock',\n      color: 'error'\n    }\n  };\n\n  const { text, color } = map[inventoryType];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyFilters = (products, query, filters) => products\n  .filter((product) => {\n    let matches = true;\n\n    if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    if (filters.category && product.category !== filters.category) {\n      matches = false;\n    }\n\n    if (filters.availability) {\n      if (filters.availability === 'available' && !product.isAvailable) {\n        matches = false;\n      }\n\n      if (filters.availability === 'unavailable' && product.isAvailable) {\n        matches = false;\n      }\n    }\n\n    if (filters.inStock && ![\n      'in_stock',\n      'limited'\n    ].includes(product.inventoryType)) {\n      matches = false;\n    }\n\n    if (filters.isShippable && !product.isShippable) {\n      matches = false;\n    }\n\n    return matches;\n  });\n\nconst applyPagination = (products, page, limit) => products\n  .slice(page * limit, page * limit + limit);\n\nconst ProductListTable = (props) => {\n  const { products, ...other } = props;\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  });\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleCategoryChange = (event) => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      category: value\n    }));\n  };\n\n  const handleAvailabilityChange = (event) => {\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      availability: value\n    }));\n  };\n\n  const handleStockChange = (event) => {\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      inStock: value\n    }));\n  };\n\n  const handleShippableChange = (event) => {\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      isShippable: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllProducts = (event) => {\n    setSelectedProducts(event.target.checked\n      ? products.map((product) => product.id)\n      : []);\n  };\n\n  const handleSelectOneProduct = (event, productId) => {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts((prevSelected) => [...prevSelected, productId]);\n    } else {\n      setSelectedProducts((prevSelected) => prevSelected.filter((id) => id !== productId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredProducts = applyFilters(products, query, filters);\n  const paginatedProducts = applyPagination(filteredProducts, page, limit);\n  const enableBulkActions = selectedProducts.length > 0;\n  const selectedSomeProducts = selectedProducts.length > 0\n    && selectedProducts.length < products.length;\n  const selectedAllProducts = selectedProducts.length === products.length;\n\n  return (\n    <Card {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search products\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Category\"\n            name=\"category\"\n            onChange={handleCategoryChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.category || 'all'}\n            variant=\"outlined\"\n          >\n            {categoryOptions.map((categoryOption) => (\n              <option\n                key={categoryOption.value}\n                value={categoryOption.value}\n              >\n                {categoryOption.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 240\n          }}\n        >\n          <TextField\n            fullWidth\n            label=\"Availability\"\n            name=\"availability\"\n            onChange={handleAvailabilityChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.availability || 'all'}\n            variant=\"outlined\"\n          >\n            {availabilityOptions.map((availabilityOption) => (\n              <option\n                key={availabilityOption.value}\n                value={availabilityOption.value}\n              >\n                {availabilityOption.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box sx={{ m: 2 }}>\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={!!filters.inStock}\n                color=\"primary\"\n                name=\"inStock\"\n                onChange={handleStockChange}\n              />\n            )}\n            label=\"In Stock\"\n          />\n        </Box>\n        <Box sx={{ m: 2 }}>\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={!!filters.isShippable}\n                color=\"primary\"\n                name=\"Shippable\"\n                onChange={handleShippableChange}\n              />\n            )}\n            label=\"Shippable\"\n          />\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              pl: '4px',\n              position: 'absolute',\n              pr: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllProducts}\n              color=\"primary\"\n              indeterminate={selectedSomeProducts}\n              onChange={handleSelectAllProducts}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 1200 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllProducts}\n                    color=\"primary\"\n                    indeterminate={selectedSomeProducts}\n                    onChange={handleSelectAllProducts}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Inventory\n                </TableCell>\n                <TableCell>\n                  Details\n                </TableCell>\n                <TableCell>\n                  Attributes\n                </TableCell>\n                <TableCell>\n                  Price\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedProducts.map((product) => {\n                const isProductSelected = selectedProducts.includes(product.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={product.id}\n                    selected={isProductSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isProductSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneProduct(event, product.id)}\n                        value={isProductSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        {product.image\n                          ? (\n                            <Box\n                              sx={{\n                                alignItems: 'center',\n                                backgroundColor: 'background.default',\n                                display: 'flex',\n                                height: 100,\n                                justifyContent: 'center',\n                                overflow: 'hidden',\n                                width: 100,\n                                '& img': {\n                                  height: 'auto',\n                                  width: '100%'\n                                }\n                              }}\n                            >\n                              <img\n                                alt=\"Product\"\n                                src={product.image}\n                              />\n                            </Box>\n                          )\n                          : (\n                            <Box\n                              sx={{\n                                alignItems: 'center',\n                                backgroundColor: 'background.default',\n                                display: 'flex',\n                                height: 100,\n                                justifyContent: 'center',\n                                width: 100\n                              }}\n                            >\n                              <ImageIcon fontSize=\"small\" />\n                            </Box>\n                          )}\n                        <Link\n                          color=\"textPrimary\"\n                          component={RouterLink}\n                          to=\"#\"\n                          underline=\"none\"\n                          sx={{ ml: 2 }}\n                          variant=\"subtitle2\"\n                        >\n                          {product.name}\n                        </Link>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {getInventoryLabel(product.inventoryType)}\n                    </TableCell>\n                    <TableCell>\n                      {product.quantity}\n                      {' '}\n                      in stock\n                      {product.variants > 1 && ` in ${product.variants} variants`}\n                    </TableCell>\n                    <TableCell>\n                      {product.attributes.map((attr) => attr)}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(product.price)\n                        .format(`${product.currency}0,0.00`)}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton>\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton>\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            count={filteredProducts.length}\n            onPageChange={handlePageChange}\n            onRowsPerPageChange={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </Box>\n      </Scrollbar>\n    </Card>\n  );\n};\n\nProductListTable.propTypes = {\n  products: PropTypes.array.isRequired\n};\n\nexport default ProductListTable;\n"],"sourceRoot":""}