{"version":3,"sources":["components/dashboard/chat/ChatContactSearch.js","components/dashboard/chat/ChatMessage.js","components/dashboard/chat/ChatMessageAdd.js","components/dashboard/chat/ChatMessages.js","icons/Cog.js","components/dashboard/chat/ChatThreadItem.js","components/dashboard/chat/ChatThreadList.js","repositories/chat.repository.js","components/dashboard/chat/ChatSidebar.js","components/dashboard/chat/ChatThreadComposer.js","icons/Camera.js","icons/Phone.js","components/dashboard/chat/ChatThreadToolbar.js","components/dashboard/chat/ChatThread.js","pages/dashboard/Chat.js","icons/Search.js","icons/DotsHorizontal.js","icons/PencilAlt.js","icons/Archive.js","icons/Trash.js","icons/Ban.js"],"names":["ChatContactSearch","forwardRef","props","ref","isFocused","onChange","onClickAway","onFocus","onSelect","query","results","other","displayResults","ClickAwayListener","Box","sx","px","alignItems","backgroundColor","borderRadius","display","height","Search","color","fontSize","flexGrow","ml","Input","fullWidth","disableUnderline","placeholder","value","mt","Typography","variant","List","map","result","ListItem","button","onClick","handleSelect","ListItemAvatar","Avatar","src","avatar","width","ListItemText","primary","name","primaryTypographyProps","noWrap","id","defaultProps","ChatMessage","body","contentType","createdAt","senderAvatar","senderName","senderType","useState","expandMedia","setExpandMedia","mb","flexDirection","maxWidth","mr","boxShadow","py","Link","component","RouterLink","to","cursor","alt","justifyContent","formatDistanceToNowStrict","large","onClose","ChatMessageAdd","disabled","onSend","fileInputRef","useRef","user","useAuth","setBody","handleAttach","current","click","handleSend","flexShrink","xs","sm","TextField","event","target","onKeyUp","code","size","Tooltip","title","IconButton","Divider","orientation","edge","hidden","type","ChatMessages","messages","participants","rootRef","scrollToBottom","_container","scrollTop","scrollHeight","useEffect","Scrollbar","options","suppressScrollX","p","message","participant","find","_participant","senderId","Cog","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","ChatThreadItem","active","thread","details","currentUserId","otherParticipants","filter","displayNames","reduce","names","join","displayText","lastMessage","length","sender","getDetails","theme","palette","main","AvatarGroup","max","secondary","secondaryTypographyProps","unreadCount","Chip","label","minWidth","ChatThreadList","useSelector","state","chat","threads","activeThreadId","navigate","useNavigate","allIds","threadId","threadKey","byId","username","ChatRepository","cfg","EndpointConfig","axios","create","baseURL","URL_DEV","headers","headerToken","a","endpoint","this","ws","get","res","data","post","ChatSidebar","chatRepository","isSearchFocused","setIsSearchFocused","searchQuery","setSearchQuery","searchResults","setSearchResults","handleSearchChange","chatApi","searchContacts","console","error","getAllChats","then","log","borderRight","borderColor","PencilAlt","undefined","ChatThreadComposer","onAddRecipient","onRemoveRecipient","recipients","containerRef","setQuery","filteredSearchResults","recipientIds","acc","recipient","includes","getFilteredSearchResults","onDelete","recipientId","onBlur","Popper","anchorEl","open","placement","Paper","textAlign","gutterBottom","pt","contact","Camera","Phone","ParticipantAvatar","experimentalStyled","styleProps","small","ChatThreadToolbar","moreRef","openMenu","setOpenMenu","borderBottom","divider","minHeight","DotsHorizontal","Menu","keepMounted","elevation","MenuItem","ListItemIcon","Ban","Trash","Archive","Bell","ChatThread","dispatch","useDispatch","useParams","unreadMessages","threadSelector","getParticipants","getThread","resetActiveThread","markThreadAsSeen","mode","handleSendMessage","addRecipient","removeRecipient","overflow","Chat","gtm","push","getThreads"],"mappings":"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","file":"static/js/31.a4308379.chunk.js","sourcesContent":["import { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  ClickAwayListener,\n  Input,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport SearchIcon from '../../../icons/Search';\n\nconst ChatContactSearch = forwardRef((props, ref) => {\n  const { isFocused, onChange, onClickAway, onFocus, onSelect, query, results, ...other } = props;\n\n  const handleSelect = (result) => {\n    if (onSelect) {\n      onSelect(result);\n    }\n  };\n\n  const displayResults = query && isFocused;\n\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <Box\n        ref={ref}\n        sx={{ px: 1 }}\n        {...other}\n      >\n        <Box\n          sx={{\n            alignItems: 'center',\n            backgroundColor: 'background.default',\n            borderRadius: 22,\n            display: 'flex',\n            height: 44,\n            px: 2\n          }}\n        >\n          <SearchIcon\n            color=\"action\"\n            fontSize=\"small\"\n          />\n          <Box\n            sx={{\n              flexGrow: 1,\n              ml: 2\n            }}\n          >\n            <Input\n              fullWidth\n              disableUnderline\n              onChange={onChange}\n              onFocus={onFocus}\n              placeholder=\"Search contacts\"\n              value={query}\n            />\n          </Box>\n        </Box>\n        {displayResults && (\n          <Box sx={{ mt: 2 }}>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"subtitle2\"\n            >\n              Contacts\n            </Typography>\n            <List>\n              {results.map((result) => (\n                <ListItem\n                  button\n                  key={result.id}\n                  onClick={() => handleSelect(result)}\n                >\n                  <ListItemAvatar>\n                    <Avatar\n                      src={result.avatar}\n                      sx={{\n                        height: 32,\n                        width: 32\n                      }}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={result.name}\n                    primaryTypographyProps={{\n                      color: 'textPrimary',\n                      noWrap: true,\n                      variant: 'subtitle2'\n                    }}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        )}\n      </Box>\n    </ClickAwayListener>\n  );\n});\n\nChatContactSearch.propTypes = {\n  isFocused: PropTypes.bool,\n  onChange: PropTypes.func,\n  onClickAway: PropTypes.func,\n  onFocus: PropTypes.func,\n  onSelect: PropTypes.func,\n  query: PropTypes.string,\n  results: PropTypes.array\n};\n\nChatContactSearch.defaultProps = {\n  isFocused: false,\n  query: '',\n  results: []\n};\n\nexport default ChatContactSearch;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\nimport { Lightbox } from 'react-modal-image';\nimport { Avatar, Box, Link, Typography } from '@material-ui/core';\n\nconst ChatMessage = (props) => {\n  const { body, contentType, createdAt, senderAvatar, senderName, senderType, ...other } = props;\n  const [expandMedia, setExpandMedia] = useState(false);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        mb: 2\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: senderType === 'user'\n            ? 'row-reverse'\n            : 'row',\n          maxWidth: 500,\n          ml: senderType === 'user' ? 'auto' : 0\n        }}\n      >\n        <Avatar\n          src={senderAvatar}\n          sx={{\n            height: 32,\n            ml: senderType === 'user' ? 2 : 0,\n            mr: senderType === 'user' ? 0 : 2,\n            width: 32\n          }}\n        />\n        <div>\n          <Box\n            sx={{\n              backgroundColor: senderType === 'user'\n                ? 'primary.main'\n                : 'background.paper',\n              borderRadius: 1,\n              boxShadow: 1,\n              color: senderType === 'user'\n                ? 'primary.contrastText'\n                : 'text.primary',\n              px: 2,\n              py: 1\n            }}\n          >\n            <Link\n              color=\"inherit\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"subtitle2\"\n            >\n              {senderName}\n            </Link>\n            <Box sx={{ mt: 1 }}>\n              {contentType === 'image'\n                ? (\n                  <Box\n                    onClick={() => setExpandMedia(true)}\n                    sx={{\n                      mt: 2,\n                      '& img': {\n                        cursor: 'pointer',\n                        height: 'auto',\n                        maxWidth: '100%',\n                        width: 380\n                      }\n                    }}\n                  >\n                    <img\n                      alt=\"Attachment\"\n                      src={body}\n                    />\n                  </Box>\n                )\n                : (\n                  <Typography\n                    color=\"inherit\"\n                    variant=\"body1\"\n                  >\n                    {body}\n                  </Typography>\n                )}\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: senderType === 'user'\n                ? 'flex-end'\n                : 'flex-start',\n              mt: 1,\n              px: 2\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              {formatDistanceToNowStrict(createdAt)}\n              {' '}\n              ago\n            </Typography>\n          </Box>\n        </div>\n      </Box>\n      {expandMedia && (\n        <Lightbox\n          large={body}\n          onClose={() => setExpandMedia(true)}\n        />\n      )}\n    </Box>\n  );\n};\n\nChatMessage.propTypes = {\n  body: PropTypes.string.isRequired,\n  contentType: PropTypes.string.isRequired,\n  createdAt: PropTypes.number.isRequired,\n  senderAvatar: PropTypes.string.isRequired,\n  senderName: PropTypes.string.isRequired,\n  senderType: PropTypes.oneOf(['contact', 'user'])\n};\n\nexport default ChatMessage;\n","import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, Divider, IconButton, TextField, Tooltip } from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport SendIcon from '@material-ui/icons/Send';\nimport useAuth from '../../../hooks/useAuth';\n\nconst ChatMessageAdd = (props) => {\n  const { disabled, onSend, ...other } = props;\n  const fileInputRef = useRef(null);\n  const { user } = useAuth();\n  const [body, setBody] = useState('');\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleChange = (event) => {\n    setBody(event.target.value);\n  };\n\n  const handleSend = () => {\n    if (!body) {\n      return;\n    }\n\n    onSend?.(body);\n    setBody('');\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.code === 'ENTER') {\n      handleSend();\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        backgroundColor: 'background.paper',\n        display: 'flex',\n        flexShrink: 0,\n        px: 2,\n        py: 1\n      }}\n      {...other}\n    >\n      <Avatar\n        sx={{\n          display: {\n            xs: 'none',\n            sm: 'inline'\n          },\n          mr: 2\n        }}\n        src={user.avatar}\n      />\n      <TextField\n        disabled={disabled}\n        fullWidth\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n        placeholder=\"Leave a message\"\n        value={body}\n        size=\"small\"\n        variant=\"outlined\"\n      />\n      <Tooltip title=\"Send\">\n        <span>\n          <IconButton\n            color=\"primary\"\n            disabled={!body || disabled}\n            onClick={handleSend}\n          >\n            <SendIcon fontSize=\"small\" />\n          </IconButton>\n        </span>\n      </Tooltip>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: {\n            xs: 'none',\n            sm: 'flex'\n          }\n        }}\n      >\n        <Divider\n          orientation=\"vertical\"\n          sx={{ height: 24 }}\n        />\n        <Tooltip title=\"Attach photo\">\n          <span>\n            <IconButton\n              disabled={disabled}\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AddPhotoIcon fontSize=\"small\" />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <Tooltip title=\"Attach file\">\n          <span>\n            <IconButton\n              disabled={disabled}\n              edge=\"end\"\n              onClick={handleAttach}\n            >\n              <AttachFileIcon fontSize=\"small\" />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      <input\n        hidden\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </Box>\n  );\n};\n\nChatMessageAdd.propTypes = {\n  disabled: PropTypes.bool,\n  onSend: PropTypes.func\n};\n\nChatMessageAdd.defaultProps = {\n  disabled: false\n};\n\nexport default ChatMessageAdd;\n","import { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport Scrollbar from '../../Scrollbar';\nimport ChatMessage from './ChatMessage';\n\nconst ChatMessages = (props) => {\n  const { messages, participants, ...other } = props;\n  const rootRef = useRef(null);\n  const { user } = useAuth();\n\n  const scrollToBottom = () => {\n    // eslint-disable-next-line no-underscore-dangle\n    if (rootRef?.current?._container) {\n      // eslint-disable-next-line no-underscore-dangle\n      rootRef.current._container.scrollTop = rootRef.current._container.scrollHeight;\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n\n  return (\n    <Scrollbar\n      options={{ suppressScrollX: true }}\n      ref={rootRef}\n      {...other}\n    >\n      <Box sx={{ p: 2 }}>\n        {messages.map((message) => {\n          const participant = participants\n            .find((_participant) => _participant.id === message.senderId);\n          let senderAvatar;\n          let senderName;\n          let senderType;\n\n          // Since chat mock db is not synced with external auth providers\n          // we set the user details from user auth state instead of thread participants\n          if (message.senderId === '5e86809283e28b96d2d38537') {\n            senderAvatar = user.avatar;\n            senderName = 'Me';\n            senderType = 'user';\n          } else {\n            senderAvatar = participant.avatar;\n            senderName = participant.name;\n            senderType = 'contact';\n          }\n\n          return (\n            <ChatMessage\n              body={message.body}\n              contentType={message.contentType}\n              createdAt={message.createdAt}\n              key={message.id}\n              senderAvatar={senderAvatar}\n              senderName={senderName}\n              senderType={senderType}\n            />\n          );\n        })}\n      </Box>\n    </Scrollbar>\n  );\n};\n\nChatMessages.propTypes = {\n  messages: PropTypes.array,\n  participants: PropTypes.array\n};\n\nexport default ChatMessages;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Cog = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Cog'\n);\n\nexport default Cog;\n","import PropTypes from 'prop-types';\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Chip,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@material-ui/core';\n\nconst getDetails = (thread, currentUserId) => {\n  const otherParticipants = thread.participants.filter((participant) => (participant.id\n    !== currentUserId));\n  const displayNames = otherParticipants\n    .reduce((names, participant) => [...names, participant.name], [])\n    .join(', ');\n  let displayText = '';\n  const lastMessage = thread.messages[thread.messages.length - 1];\n\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'Me: ' : '';\n    const message = lastMessage.contentType === 'image'\n      ? 'Sent a photo'\n      : lastMessage.body;\n\n    displayText = `${sender}${message}`;\n  }\n\n  return {\n    otherParticipants,\n    displayNames,\n    displayText\n  };\n};\n\nconst ChatThreadItem = (props) => {\n  const { active, thread, onSelect, ...other } = props;\n\n  // We hardcode the current user ID because the mocked that is not in sync with the auth provider.\n  // When implementing this app with a real database, replace this ID with the ID from Auth Context.\n  const details = getDetails(thread, '5e86809283e28b96d2d38537');\n\n  return (\n    <ListItem\n      button\n      onClick={onSelect}\n      sx={{\n        backgroundColor: active && 'action.selected',\n        boxShadow: (theme) => active && `inset 4px 0px 0px ${theme.palette.primary.main}`\n      }}\n      {...other}\n    >\n      <ListItemAvatar\n        sx={{\n          display: 'flex',\n          justifyContent: {\n            sm: 'flex-start',\n            xs: 'center'\n          }\n        }}\n      >\n        <AvatarGroup\n          max={2}\n          sx={{\n            '& .MuiAvatar-root': details.otherParticipants.length > 1\n              ? {\n                height: 26,\n                width: 26,\n                '&:nth-of-type(2)': {\n                  mt: '10px'\n                }\n              }\n              : {\n                height: 36,\n                width: 36\n              }\n          }}\n        >\n          {details.otherParticipants.map((participant) => (\n            <Avatar\n              key={participant.id}\n              src={participant.avatar}\n            />\n          ))}\n        </AvatarGroup>\n      </ListItemAvatar>\n      <ListItemText\n        primary={details.displayNames}\n        primaryTypographyProps={{\n          color: 'textPrimary',\n          noWrap: true,\n          variant: 'subtitle2'\n        }}\n        secondary={details.displayText}\n        secondaryTypographyProps={{\n          color: 'textSecondary',\n          noWrap: true,\n          variant: 'body2'\n        }}\n        sx={{\n          display: {\n            sm: 'block',\n            xs: 'none'\n          }\n        }}\n      />\n      <Box\n        sx={{\n          alignItems: 'flex-end',\n          display: {\n            sm: 'flex',\n            xs: 'none'\n          },\n          flexDirection: 'column',\n          ml: 2\n        }}\n      >\n        {thread.unreadCount > 0 && (\n          <Chip\n            color=\"primary\"\n            label={thread.unreadCount}\n            size=\"small\"\n            sx={{\n              height: 18,\n              mt: '2px',\n              minWidth: 18,\n              p: '2px'\n            }}\n          />\n        )}\n      </Box>\n    </ListItem>\n  );\n};\n\nChatThreadItem.propTypes = {\n  active: PropTypes.bool,\n  onSelect: PropTypes.func,\n  thread: PropTypes.object.isRequired\n};\n\nChatThreadItem.defaultProps = {\n  active: false\n};\n\nexport default ChatThreadItem;\n","import { useNavigate } from 'react-router-dom';\nimport { List } from '@material-ui/core';\nimport { useSelector } from '../../../store';\nimport ChatThreadItem from './ChatThreadItem';\n\nconst ChatThreadList = (props) => {\n  const { threads, activeThreadId } = useSelector((state) => state.chat);\n  const navigate = useNavigate();\n\n  const handleSelect = (threadId) => {\n    const thread = threads.byId[threadId];\n    let threadKey;\n\n    if (thread.type === 'GROUP') {\n      threadKey = thread.id;\n    } else {\n      // We hardcode the current user ID because the mocked that is not in sync\n      // with the auth provider.\n      // When implementing this app with a real database, replace this\n      // ID with the ID from Auth Context.\n      const otherParticipant = thread.participants.find((participant) => (participant.id\n        !== '5e86809283e28b96d2d38537'));\n\n      threadKey = otherParticipant.username;\n    }\n\n    navigate(`/dashboard/chat/${threadKey}`);\n  };\n\n  return (\n    <List {...props}>\n      {threads.allIds.map((threadId) => (\n        <ChatThreadItem\n          active={activeThreadId === threadId}\n          key={threadId}\n          onSelect={() => handleSelect(threadId)}\n          thread={threads.byId[threadId]}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default ChatThreadList;\n","import axios from 'axios';\nimport { EndpointConfig } from '../config/config';\n\nexport default class ChatRepository {\n  // Definir el cliente Axios para consumir el servicio\n  get ws() {\n    const cfg = new EndpointConfig();\n    const ws = axios.create({\n      baseURL: cfg.URL_DEV,\n      headers: cfg.headerToken(),\n    });\n    return ws;\n  }\n\n  async getAllMessages(username) {\n    const endpoint = `/chat/${username}`;\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async getAllChats() {\n    const endpoint = '/chat';\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async sendMessage(body) {\n    const endpoint = '/chat/send';\n    const res = await this.ws.post(endpoint, body);\n    return res.data;\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Box, IconButton, Typography } from '@material-ui/core';\nimport { chatApi } from '../../../__fakeApi__/chatApi';\nimport CogIcon from '../../../icons/Cog';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport Scrollbar from '../../Scrollbar';\nimport ChatContactSearch from './ChatContactSearch';\nimport ChatThreadList from './ChatThreadList';\nimport ChatRepository from '../../../repositories/chat.repository';\n\nconst ChatSidebar = () => {\n  const navigate = useNavigate();\n  const chatRepository = new ChatRepository();\n  const [isSearchFocused, setIsSearchFocused] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  // const [chatList, setchatlist] = useState([]);\n\n  const handleSearchClickAway = () => {\n    setIsSearchFocused(false);\n    setSearchQuery('');\n  };\n\n  const handleSearchChange = async (event) => {\n    try {\n      const { value } = event.target;\n\n      setSearchQuery(value);\n\n      if (value) {\n        const data = await chatApi.searchContacts(value);\n\n        setSearchResults(data);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setIsSearchFocused(true);\n  };\n\n  const handleSearchSelect = (result) => {\n    setIsSearchFocused(false);\n    setSearchQuery('');\n    navigate(`/dashboard/chat/${result.username}`);\n  };\n\n  useEffect(() => {\n    chatRepository.getAllChats().then((res) => {\n      console.log('CHATS-->', res);\n    });\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.paper',\n        borderRight: 1,\n        borderColor: 'divider',\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: '100%',\n        width: 300\n      }}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexShrink: 0,\n          height: 64,\n          px: 2\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          Chats\n        </Typography>\n        <Box sx={{ flexGrow: 1 }} />\n        <IconButton>\n          <CogIcon fontSize=\"small\" />\n        </IconButton>\n        <IconButton\n          component={RouterLink}\n          to=\"/dashboard/chat/new\"\n        >\n          <PencilAltIcon fontSize=\"small\" />\n        </IconButton>\n      </Box>\n      <Box\n        sx={{\n          display: {\n            sm: 'block',\n            xs: 'none'\n          }\n        }}\n      >\n        <ChatContactSearch\n          isFocused={isSearchFocused}\n          onChange={handleSearchChange}\n          onClickAway={handleSearchClickAway}\n          onFocus={handleSearchFocus}\n          onSelect={handleSearchSelect}\n          query={searchQuery}\n          results={searchResults}\n        />\n      </Box>\n      <Scrollbar options={{ suppressScrollX: true }}>\n        <Box sx={{ display: isSearchFocused ? 'none' : undefined }}>\n          <ChatThreadList />\n        </Box>\n      </Scrollbar>\n    </Box>\n  );\n};\n\nexport default ChatSidebar;\n","import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Chip,\n  ClickAwayListener,\n  Input,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Paper,\n  Popper,\n  Typography\n} from '@material-ui/core';\nimport { chatApi } from '../../../__fakeApi__/chatApi';\n\nconst getFilteredSearchResults = (results, recipients) => {\n  const recipientIds = recipients.reduce((acc, recipient) => [\n    ...acc,\n    recipient.id\n  ], []);\n\n  return results.filter((result) => !recipientIds.includes(result.id));\n};\n\nconst ChatThreadComposer = (props) => {\n  const { onAddRecipient, onRemoveRecipient, recipients, ...other } = props;\n  const containerRef = useRef(null);\n  const [query, setQuery] = useState('');\n  const [isSearchFocused, setIsSearchFocused] = useState(true);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const filteredSearchResults = getFilteredSearchResults(searchResults, recipients);\n  const displayResults = query && isSearchFocused;\n\n  const handleSearchChange = async (event) => {\n    try {\n      const { value } = event.target;\n\n      setQuery(value);\n\n      if (value) {\n        const data = await chatApi.searchContacts(value);\n\n        setSearchResults(data);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSearchBlur = () => {\n    if (!displayResults) {\n      setIsSearchFocused(false);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setIsSearchFocused(true);\n  };\n\n  const handleSearchResultsClickAway = () => {\n    setIsSearchFocused(false);\n  };\n\n  const handleAddRecipient = (contact) => {\n    setQuery('');\n\n    if (onAddRecipient) {\n      onAddRecipient(contact);\n    }\n  };\n\n  const handleRemoveRecipient = (recipientId) => {\n    if (onRemoveRecipient) {\n      onRemoveRecipient(recipientId);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex',\n        p: 2\n      }}\n      {...other}\n    >\n      <Typography\n        variant=\"body1\"\n        color=\"textSecondary\"\n      >\n        To:\n      </Typography>\n      <Box\n        ref={containerRef}\n        sx={{\n          ml: 1,\n          '& .MuiInputBase-root': {\n            backgroundColor: 'background.paper',\n            borderRadius: 16,\n            height: 32,\n            maxWidth: recipients.length > 0 ? 120 : 'auto',\n            px: 2\n          }\n        }}\n      >\n        {recipients.map((recipient) => (\n          <Box\n            component=\"span\"\n            key={recipient.id}\n            sx={{ mr: 2 }}\n          >\n            <Chip\n              color=\"primary\"\n              label={recipient.name}\n              onDelete={() => handleRemoveRecipient(recipient.id)}\n              size=\"small\"\n            />\n          </Box>\n        ))}\n        <Input\n          disableUnderline\n          onBlur={handleSearchBlur}\n          onChange={handleSearchChange}\n          onFocus={handleSearchFocus}\n          placeholder={recipients.length === 0\n            ? 'Search contacts'\n            : ''}\n          value={query}\n        />\n      </Box>\n      {displayResults && (\n        <ClickAwayListener onClickAway={handleSearchResultsClickAway}>\n          <Popper\n            anchorEl={containerRef.current}\n            open={isSearchFocused}\n            placement=\"bottom-start\"\n          >\n            <Paper\n              sx={{\n                mt: 1,\n                maxWidth: '100%',\n                width: 320\n              }}\n            >\n              {filteredSearchResults.length === 0\n                ? (\n                  <Box\n                    sx={{\n                      p: 2,\n                      textAlign: 'center'\n                    }}\n                  >\n                    <Typography\n                      color=\"textPrimary\"\n                      gutterBottom\n                      variant=\"h6\"\n                    >\n                      Nothing Found\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      We couldn&apos;t find any matches\n                      for &quot;\n                      {query}\n                      &quot;. Try checking for typos or using\n                      complete words.\n                    </Typography>\n                  </Box>\n                )\n                : (\n                  <>\n                    <Box\n                      sx={{\n                        px: 2,\n                        pt: 2\n                      }}\n                    >\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"subtitle2\"\n                      >\n                        Contacts\n                      </Typography>\n                    </Box>\n                    <List>\n                      {filteredSearchResults.map((result) => (\n                        <ListItem\n                          button\n                          key={result.id}\n                          onClick={() => handleAddRecipient(result)}\n                        >\n                          <ListItemAvatar>\n                            <Avatar src={result.avatar} />\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={result.name}\n                            primaryTypographyProps={{\n                              color: 'textPrimary',\n                              noWrap: true,\n                              variant: 'subtitle2'\n                            }}\n                          />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </>\n                )}\n            </Paper>\n          </Popper>\n        </ClickAwayListener>\n      )}\n    </Box>\n  );\n};\n\nChatThreadComposer.propTypes = {\n  onAddRecipient: PropTypes.func,\n  onRemoveRecipient: PropTypes.func,\n  recipients: PropTypes.array\n};\n\nChatThreadComposer.defaultProps = {\n  recipients: []\n};\n\nexport default ChatThreadComposer;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Camera = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Camera'\n);\n\nexport default Camera;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Phone = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\n  </svg>, 'Phone'\n);\n\nexport default Phone;\n","import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport ArchiveIcon from '../../../icons/Archive';\nimport BellIcon from '../../../icons/Bell';\nimport BanIcon from '../../../icons/Ban';\nimport CameraIcon from '../../../icons/Camera';\nimport PhoneIcon from '../../../icons/Phone';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\nimport TrashIcon from '../../../icons/Trash';\n\nconst ParticipantAvatar = experimentalStyled(Avatar)(({ styleProps }) => {\n  if (styleProps.small) {\n    return {\n      height: 30,\n      width: 30,\n      '&:nth-of-type(2)': {\n        mt: '10px'\n      }\n    };\n  }\n\n  return {};\n});\n\nconst ChatThreadToolbar = (props) => {\n  const { participants, ...other } = props;\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  // We hardcode the current user ID because the mocked that is not in sync with the auth provider.\n  // When implementing this app with a real database, replace this ID with the ID from Auth Context.\n  const otherParticipants = participants.filter((participant) => (participant.id\n    !== '5e86809283e28b96d2d38537'));\n  const displayNames = otherParticipants.reduce((names, participant) => [\n    ...names,\n    participant.name\n  ], []).join(', ');\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        backgroundColor: 'background.paper',\n        borderBottom: (theme) => `1px solid ${theme.palette.divider}`,\n        display: 'flex',\n        flexShrink: 0,\n        minHeight: 64,\n        px: 2,\n        py: 1\n      }}\n      {...other}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          '& .MuiAvatar-root': otherParticipants.length > 1 && {\n            height: 30,\n            width: 30,\n            '&:nth-of-type(2)': {\n              mt: '10px'\n            }\n          }\n        }}\n      >\n        <AvatarGroup max={2}>\n          {otherParticipants.map((participant) => (\n            <ParticipantAvatar\n              key={participant.id}\n              src={participant.avatar}\n              styleProps={{ small: otherParticipants.length > 1 }}\n            />\n          ))}\n        </AvatarGroup>\n        <Typography\n          color=\"textPrimary\"\n          sx={{ ml: 2 }}\n          variant=\"subtitle2\"\n        >\n          {displayNames}\n        </Typography>\n      </Box>\n      <Box sx={{ flexGrow: 1 }} />\n      <IconButton>\n        <PhoneIcon fontSize=\"small\" />\n      </IconButton>\n      <IconButton>\n        <CameraIcon fontSize=\"small\" />\n      </IconButton>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <DotsHorizontalIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        keepMounted\n        elevation={1}\n        onClose={handleMenuClose}\n        open={openMenu}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <BanIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Block contact\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <TrashIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete thread\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive thread\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <BellIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Mute notifications\" />\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nChatThreadToolbar.propTypes = {\n  participants: PropTypes.array\n};\n\nChatThreadToolbar.defaultProps = {\n  participants: []\n};\n\nexport default ChatThreadToolbar;\n","import { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Box, Divider } from '@material-ui/core';\nimport {\n  addRecipient,\n  getParticipants,\n  getThread,\n  markThreadAsSeen,\n  removeRecipient,\n  resetActiveThread\n} from '../../../slices/chat';\nimport { useDispatch, useSelector } from '../../../store';\nimport ChatMessageAdd from './ChatMessageAdd';\nimport ChatMessages from './ChatMessages';\nimport ChatThreadComposer from './ChatThreadComposer';\nimport ChatThreadToolbar from './ChatThreadToolbar';\n\nconst threadSelector = (state) => {\n  const { threads, activeThreadId } = state.chat;\n  const thread = threads.byId[activeThreadId];\n\n  if (thread) {\n    return thread;\n  }\n\n  return {\n    id: null,\n    messages: [],\n    participants: [],\n    unreadMessages: 0\n  };\n};\n\nconst ChatThread = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { threadKey } = useParams();\n  const { activeThreadId, participants, recipients } = useSelector((state) => state.chat);\n  const thread = useSelector((state) => threadSelector(state));\n\n  const getDetails = async () => {\n    dispatch(getParticipants(threadKey));\n\n    try {\n      await dispatch(getThread(threadKey));\n    } catch (err) {\n      dispatch(resetActiveThread());\n      // If thread key is not a valid key (thread id or username)\n      // the server throws an error, this means that the user tried a shady route\n      // and we redirect him on the compose route\n      console.error(err);\n      navigate('/dashboard/chat/new');\n    }\n  };\n\n  useEffect(() => {\n    if (threadKey) {\n      getDetails();\n    }\n  }, [threadKey]);\n\n  useEffect(() => {\n    if (activeThreadId) {\n      dispatch(markThreadAsSeen(activeThreadId));\n    }\n  }, [activeThreadId]);\n\n  // In our case there two possible routes\n  // one that contains chat/new and one with a chat/:threadKey\n  // if threadKey does not exist, it means that the chat is in compose mode\n  const mode = threadKey ? 'DETAIL' : 'COMPOSE';\n\n  const handleAddRecipient = (recipient) => {\n    dispatch(addRecipient(recipient));\n  };\n\n  const handleRemoveRecipient = (recipientId) => {\n    dispatch(removeRecipient(recipientId));\n  };\n\n  const handleSendMessage = async () => {\n    try {\n      // Handle send message\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1\n      }}\n    >\n      {mode === 'DETAIL' && (\n        <ChatThreadToolbar participants={participants} />\n      )}\n      {mode === 'COMPOSE' && (\n        <ChatThreadComposer\n          onAddRecipient={handleAddRecipient}\n          onRemoveRecipient={handleRemoveRecipient}\n          recipients={recipients}\n        />\n      )}\n      <Box\n        sx={{\n          flexGrow: 1,\n          overflow: 'auto'\n        }}\n      >\n        <ChatMessages\n          messages={thread.messages}\n          participants={thread.participants}\n        />\n      </Box>\n      <Divider />\n      <ChatMessageAdd\n        disabled={false}\n        onSend={handleSendMessage}\n      />\n    </Box>\n  );\n};\n\nexport default ChatThread;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box } from '@material-ui/core';\nimport { ChatSidebar, ChatThread } from '../../components/dashboard/chat';\nimport gtm from '../../lib/gtm';\nimport { getThreads } from '../../slices/chat';\nimport { useDispatch } from '../../store';\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  useEffect(() => {\n    dispatch(getThreads());\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Chat | Mac</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          height: '100%'\n        }}\n      >\n        <ChatSidebar />\n        <ChatThread />\n      </Box>\n    </>\n  );\n};\n\nexport default Chat;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Search = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Search'\n);\n\nexport default Search;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst PencilAlt = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PencilAlt'\n);\n\nexport default PencilAlt;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Archive = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Archive'\n);\n\nexport default Archive;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n\nexport default Trash;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Ban = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Ban'\n);\n\nexport default Ban;\n"],"sourceRoot":""}