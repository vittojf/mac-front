{"version":3,"sources":["views/dashboard/store/orders/OrderList.js","icons/ArrowRight.js","components/Label.js","icons/Download.js","icons/DotsHorizontal.js","icons/PencilAlt.js","icons/DocumentText.js","icons/Duplicate.js","components/MoreMenu.js","icons/Archive.js","icons/Trash.js","icons/Plus.js","icons/X.js","icons/Upload.js","icons/Check.js","repositories/order.repository.js","components/dashboard/store/orders/OrderListBulkActions.js","components/dashboard/store/orders/OrderListTable.js"],"names":["OrderList","orderRepository","OrderRepository","mounted","useMounted","settings","useSettings","useState","orders","setOrders","useEffect","gtm","push","event","getOrders","useCallback","a","getAllOrders","data","console","log","current","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","separator","fontSize","mt","component","RouterLink","to","mb","mx","startIcon","m","ArrowRight","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","LabelRoot","experimentalStyled","theme","styleProps","palette","main","contrastText","alignItems","borderRadius","shape","cursor","display","flexGrow","flexShrink","fontFamily","typography","pxToRem","fontWeight","fontWeightMedium","letterSpacing","minWidth","paddingBottom","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","Label","props","children","other","Download","DotsHorizontal","PencilAlt","DocumentText","Duplicate","MoreMenu","anchorRef","useRef","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","horizontal","vertical","onClose","open","PaperProps","width","transformOrigin","primary","memo","Archive","Trash","Plus","X","Upload","Check","cfg","EndpointConfig","axios","create","baseURL","URL_DEV","headers","headerToken","this","ws","get","res","id","endpoint","body","post","OrderListBulkActions","onDelete","onMarkPaid","onMarkUnpaid","selected","Drawer","anchor","elevation","Box","p","Grid","md","xs","Typography","length","flexWrap","ml","Button","defaultProps","getStatusLabel","paymentStatus","map","text","OrderListTable","selectedOrders","setSelectedOrders","page","setPage","limit","setLimit","paginatedOrders","slice","applyPagination","enableBulkActions","selectedSomeOrders","selectedAllOrders","Card","CardHeader","action","Divider","Scrollbar","Table","TableHead","TableRow","TableCell","padding","Checkbox","checked","indeterminate","onChange","target","order","align","TableBody","isOrderSelected","includes","hover","indexOf","orderId","prevSelected","filter","value","Link","underline","created_at","split","client_id","final_price","status_id","IconButton","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions"],"mappings":"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","file":"static/js/22.9530eff3.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Button, Container, Grid, Link, Typography } from '@material-ui/core';\nimport OrderListTable from '../../../../components/dashboard/store/orders/OrderListTable';\nimport useMounted from '../../../../hooks/useMounted';\nimport useSettings from '../../../../hooks/useSettings';\nimport ChevronRightIcon from '../../../../icons/ChevronRight';\nimport DownloadIcon from '../../../../icons/Download';\nimport UploadIcon from '../../../../icons/Upload';\nimport PlusIcon from '../../../../icons/Plus';\nimport gtm from '../../../../lib/gtm';\nimport OrderRepository from '../../../../repositories/order.repository';\n\nconst OrderList = () => {\n  const orderRepository = new OrderRepository();\n  const mounted = useMounted();\n  const { settings } = useSettings();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getOrders = useCallback(async () => {\n    try {\n      const data = await orderRepository.getAllOrders();\n      console.log(data);\n      setOrders(data);\n      if (mounted.current) {\n        console.log(data);\n        setOrders(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [mounted]);\n\n  useEffect(() => {\n    getOrders();\n  }, [getOrders]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Lista de Ordenes | Mac</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Lista de Ordenes\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Ordenes\n                </Typography>\n              </Breadcrumbs>\n              <Box\n                sx={{\n                  mb: -1,\n                  mx: -1,\n                  mt: 1\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  startIcon={<UploadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"text\"\n                >\n                  Importar\n                </Button>\n                <Button\n                  color=\"primary\"\n                  startIcon={<DownloadIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"text\"\n                >\n                  Exportar\n                </Button>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  startIcon={<PlusIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"contained\"\n                  component={RouterLink}\n                  to=\"/dashboard/store/order/create\"\n                >\n                  Crear Orden\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <OrderListTable orders={orders} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default OrderList;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst PencilAlt = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PencilAlt'\n);\n\nexport default PencilAlt;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DocumentText = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'DocumentText'\n);\n\nexport default DocumentText;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n\nexport default Duplicate;\n","import { useRef, useState, memo } from 'react';\nimport { ListItemIcon, ListItemText, Tooltip, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport ArchiveIcon from '../icons/Archive';\nimport DocumentTextIcon from '../icons/DocumentText';\nimport DotsHorizontalIcon from '../icons/DotsHorizontal';\nimport DownloadIcon from '../icons/Download';\nimport DuplicateIcon from '../icons/Duplicate';\n\nconst MoreMenu = (props) => {\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={anchorRef}\n          {...props}\n        >\n          <DotsHorizontalIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{\n          sx: {\n            maxWidth: '100%',\n            width: 256\n          }\n        }}\n        transformOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <DownloadIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DocumentTextIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DuplicateIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(MoreMenu);\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Archive = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Archive'\n);\n\nexport default Archive;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n\nexport default Trash;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n\nexport default Plus;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst X = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'X'\n);\n\nexport default X;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Upload = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Upload'\n);\n\nexport default Upload;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Check = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Check'\n);\n\nexport default Check;\n","import axios from 'axios';\nimport { EndpointConfig } from '../config/config';\n\nexport default class OrderRepository {\n  // Definir el cliente Axios para consumir el servicio\n  get ws() {\n    const cfg = new EndpointConfig();\n    const ws = axios.create({\n      baseURL: cfg.URL_DEV,\n      headers: cfg.headerToken(),\n    });\n    return ws;\n  }\n\n  async getAllOrders() {\n    const endpoint = '/deliveries';\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  async getOrderById(id) {\n    const endpoint = `/deliveries/${id}`;\n    const res = await this.ws.get(endpoint);\n    return res.data;\n  }\n\n  //   async update(id, body) {\n  //     const endpoint = `/users/${id}`;\n\n  //     let res = await this.ws.put(endpoint, body);\n  //     return res;\n  //   }\n\n  async createOrder(body) {\n    const endpoint = '/deliveries';\n    const res = await this.ws.post(endpoint, body);\n    return res;\n  }\n\n  //   async remove(id) {\n  //     const endpoint = `/users/${id}`;\n\n  //     let res = await this.ws.delete(endpoint);\n  //     return res;\n  //   }\n}\n","import PropTypes from 'prop-types';\nimport { Box, Button, Drawer, Grid, Typography } from '@material-ui/core';\nimport CheckIcon from '../../../../icons/Check';\nimport TrashIcon from '../../../../icons/Trash';\nimport XIcon from '../../../../icons/X';\n\nconst OrderListBulkActions = (props) => {\n  const { onDelete, onMarkPaid, onMarkUnpaid, open, selected, ...other } = props;\n\n  return (\n    <Drawer\n      anchor=\"bottom\"\n      open={open}\n      PaperProps={{ elevation: 1 }}\n      variant=\"persistent\"\n    >\n      <Box\n        sx={{ p: 2 }}\n        {...other}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            md={3}\n            sx={{\n              display: {\n                md: 'block',\n                xs: 'none'\n              }\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              variant=\"subtitle1\"\n            >\n              {selected.length}\n              {' '}\n              selected\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'center',\n                '& > * + *': {\n                  ml: 2\n                }\n              }}\n            >\n              <Button\n                color=\"primary\"\n                onClick={onMarkPaid}\n                startIcon={<CheckIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                Mark Paid\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={onMarkUnpaid}\n                startIcon={<XIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                Mark Unpaid\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={onDelete}\n                startIcon={<TrashIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                Delete\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Drawer>\n  );\n};\n\nOrderListBulkActions.propTypes = {\n  onDelete: PropTypes.func,\n  onMarkPaid: PropTypes.func,\n  onMarkUnpaid: PropTypes.func,\n  open: PropTypes.bool,\n  selected: PropTypes.array.isRequired\n};\n\nOrderListBulkActions.defaultProps = {\n  open: false\n};\n\nexport default OrderListBulkActions;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// import { format } from 'date-fns';\n// import numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Checkbox,\n  Divider,\n  IconButton,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../../icons/PencilAlt';\nimport Label from '../../../Label';\nimport MoreMenu from '../../../MoreMenu';\nimport Scrollbar from '../../../Scrollbar';\nimport OrderListBulkActions from './OrderListBulkActions';\n\nconst getStatusLabel = (paymentStatus) => {\n  let map;\n  switch (paymentStatus) {\n    case '0':\n      map = {\n        color: 'warning',\n        text: 'Pendiente'\n      };\n      break;\n    case '1':\n      map = {\n        color: 'success',\n        text: 'Completado'\n      };\n      break;\n    case '2':\n      map = {\n        color: 'error',\n        text: 'Cancelado'\n      };\n      break;\n    case '3':\n      map = {\n        color: 'error',\n        text: 'Rejected'\n      };\n      break;\n    default:\n      map = {\n        color: 'error',\n        text: 'Cancelado'\n      };\n  }\n\n  const { text, color } = map;\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyPagination = (orders, page, limit) => orders\n  .slice(page * limit, page * limit + limit);\n\nconst OrderListTable = (props) => {\n  const { orders, ...other } = props;\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n\n  const handleSelectAllOrders = (event) => {\n    setSelectedOrders(event.target.checked\n      ? orders.map((order) => order.id)\n      : []);\n  };\n\n  const handleSelectOneOrder = (event, orderId) => {\n    if (!selectedOrders.includes(orderId)) {\n      setSelectedOrders((prevSelected) => [...prevSelected, orderId]);\n    } else {\n      setSelectedOrders((prevSelected) => prevSelected.filter((id) => id !== orderId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const paginatedOrders = applyPagination(orders, page, limit);\n  const enableBulkActions = selectedOrders.length > 0;\n  const selectedSomeOrders = selectedOrders.length > 0 && selectedOrders.length < orders.length;\n  const selectedAllOrders = selectedOrders.length === orders.length;\n\n  return (\n    <>\n      <Card {...other}>\n        <CardHeader\n          action={<MoreMenu />}\n          title=\"Historial de Ordenes\"\n        />\n        <Divider />\n        <Scrollbar>\n          <Box sx={{ minWidth: 1150 }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedAllOrders}\n                      color=\"primary\"\n                      indeterminate={selectedSomeOrders}\n                      onChange={handleSelectAllOrders}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    Id\n                  </TableCell>\n                  <TableCell>\n                    Fecha\n                  </TableCell>\n                  <TableCell>\n                    Id del Cliente\n                  </TableCell>\n                  <TableCell>\n                    Precio Total\n                  </TableCell>\n                  <TableCell>\n                    Status\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    Actions\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {paginatedOrders.map((order) => {\n                  const isOrderSelected = selectedOrders.includes(order.id);\n\n                  return (\n                    <TableRow\n                      hover\n                      key={order.id}\n                      selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isOrderSelected}\n                          color=\"primary\"\n                          onChange={(event) => handleSelectOneOrder(event, order.id)}\n                          value={isOrderSelected}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Link\n                          color=\"textPrimary\"\n                          component={RouterLink}\n                          to={`/dashboard/store/order/detail/${order.id}`}\n                          underline=\"none\"\n                          variant=\"subtitle2\"\n                        >\n                          {order.id}\n                        </Link>\n                        {/* <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {format(new Date(order.created_at), 'dd MMM yyyy | HH:mm')}\n                          {order.client_id}\n                        </Typography> */}\n                      </TableCell>\n                      <TableCell>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"subtitle2\"\n                        >\n                          {order.created_at.split('T')[0]}\n                        </Typography>\n                        {/* <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {order.customer.email}\n                        </Typography> */}\n                      </TableCell>\n                      <TableCell>\n                        {order.client_id}\n                      </TableCell>\n                      <TableCell>\n                        {order.final_price}\n                      </TableCell>\n                      {/* <TableCell>\n                        {numeral(order.totalAmount).format(`${order.currency}0,0.00`)}\n                      </TableCell> */}\n                      <TableCell>\n                        {getStatusLabel(order.status_id)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <IconButton>\n                          <PencilAltIcon fontSize=\"small\" />\n                        </IconButton>\n                        <IconButton\n                          component={RouterLink}\n                          to={`/dashboard/store/order/detail/${order.id}`}\n                        >\n                          <ArrowRightIcon fontSize=\"small\" />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Box>\n        </Scrollbar>\n        <TablePagination\n          component=\"div\"\n          count={orders.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </Card>\n      <OrderListBulkActions\n        open={enableBulkActions}\n        selected={selectedOrders}\n      />\n    </>\n  );\n};\n\nOrderListTable.propTypes = {\n  orders: PropTypes.array.isRequired\n};\n\nexport default OrderListTable;\n"],"sourceRoot":""}